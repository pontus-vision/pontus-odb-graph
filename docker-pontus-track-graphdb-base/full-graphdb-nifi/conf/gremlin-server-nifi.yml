
host: 0.0.0.0
port: 8183
scriptEvaluationTimeout: 0
threadPoolWorker: 3
gremlinPool: 3

channelizer: org.apache.tinkerpop.gremlin.server.channel.WsAndHttpChannelizer
#channelizer: com.pontusvision.gdpr.WsAndHttpJWTChannelizer
graphs: {
  graph: conf/janusgraph-embedded-cassandra-es-nifi.properties
}
scriptEngines: {
  gremlin-groovy: {
    plugins: { org.apache.tinkerpop.gremlin.server.jsr223.GremlinServerGremlinPlugin: {},
               org.apache.tinkerpop.gremlin.tinkergraph.jsr223.TinkerGraphGremlinPlugin: {},
               org.apache.tinkerpop.gremlin.jsr223.ImportGremlinPlugin: {classImports: [java.lang.Math, com.pontusvision.gdpr.CIDRUtils, com.joestelmach.natty.DateGroup, com.joestelmach.natty.Parser, com.pontusvision.jpostal.AddressParser ,com.pontusvision.jpostal.ParsedComponent, com.pontusvision.utils.PostCode, com.pontusvision.utils.NLPCleaner, com.pontusvision.utils.LocationAddress], methodImports: [java.lang.Math#*]},
               org.apache.tinkerpop.gremlin.jsr223.ScriptFileGremlinPlugin: {files: [/opt/pontus-graphdb/graphdb-current//conf/globals.groovy ,/opt/pontus-graphdb/graphdb-current//conf/gdpr-schema.groovy,/opt/pontus-graphdb/graphdb-current//conf/matching.groovy,/opt/pontus-graphdb/graphdb-current//conf/formio.groovy   ,  /opt/pontus-graphdb/graphdb-current//conf/gdpr.groovy, /opt/pontus-graphdb/graphdb-current//conf/bootstrap.groovy]},
#               org.apache.tinkerpop.gremlin.groovy.jsr223.GroovyCompilerGremlinPlugin: {enableThreadInterrupt: true,  compilation: COMPILE_STATIC }
               
               }}}

serializers:
  - { className: org.apache.tinkerpop.gremlin.driver.ser.GryoMessageSerializerV1d0, config: { ioRegistries: [org.apache.tinkerpop.gremlin.tinkergraph.structure.TinkerIoRegistryV1d0, org.janusgraph.graphdb.tinkerpop.JanusGraphIoRegistry] ,  useMapperFromGraph: graph}}
  - { className: org.apache.tinkerpop.gremlin.driver.ser.GryoMessageSerializerV1d0, config: { serializeResultToString: true, useMapperFromGraph: graph }}
  - { className: org.apache.tinkerpop.gremlin.driver.ser.GryoMessageSerializerV3d0, config: { ioRegistries: [org.apache.tinkerpop.gremlin.tinkergraph.structure.TinkerIoRegistryV3d0, org.janusgraph.graphdb.tinkerpop.JanusGraphIoRegistry] , useMapperFromGraph: graph}}             # application/vnd.gremlin-v3.0+gryo
  - { className: org.apache.tinkerpop.gremlin.driver.ser.GryoMessageSerializerV3d0, config: { serializeResultToString: true, useMapperFromGraph: graph }}                                                                       # application/vnd.gremlin-v3.0+gryo-stringd
  - { className: org.apache.tinkerpop.gremlin.driver.ser.GraphSONMessageSerializerV3d0, config: { ioRegistries: [org.apache.tinkerpop.gremlin.tinkergraph.structure.TinkerIoRegistryV3d0, org.janusgraph.graphdb.tinkerpop.JanusGraphIoRegistry] }}         # application/json
processors:
  - { className: org.apache.tinkerpop.gremlin.server.op.standard.StandardOpProcessor, config: { maxParameters: 64 }}
  - { className: org.apache.tinkerpop.gremlin.server.op.session.SessionOpProcessor, config: { maxParameters: 64 , sessionTimeout: 28800000 }}
  - { className: org.apache.tinkerpop.gremlin.server.op.traversal.TraversalOpProcessor, config: { maxParameters: 64 , cacheExpirationTime: 0, cacheMaxSize: 0 }}
metrics: {
  consoleReporter: {enabled: false, interval: 180000},
  csvReporter: {enabled: false, interval: 180000, fileName: /tmp/gremlin-server-metrics.csv},
  jmxReporter: {enabled: false},
  slf4jReporter: {enabled: false, interval: 180000}}
strictTransactionManagement: false
maxInitialLineLength: 4096
maxHeaderSize: 8192
maxChunkSize: 8192
maxContentLength: 2000000
maxAccumulationBufferComponents: 1024
resultIterationBatchSize: 64
writeBufferLowWaterMark: 32768
writeBufferHighWaterMark: 65536

ssl: {
  enabled: false,
  #keyCertChainFile: /etc/pki/java/localhost.crt,
  #keyFile: /etc/pki/java/localhost.pem.pk8
}

#authentication: {
  #className: org.apache.tinkerpop.gremlin.server.auth.Krb5Authenticator,
  #config: {
    #principal: hbase/pontus-sandbox.pontusvision.com@PONTUSVISION.COM,
    #keytab: /etc/security/keytabs/hbase.service.keytab
  #}
#}

