
host: 0.0.0.0
port: 8183
scriptEvaluationTimeout: 300000
threadPoolWorker: 3
gremlinPool: 3

channelizer: org.apache.tinkerpop.gremlin.server.channel.WsAndHttpChannelizer
graphManager : com.orientechnologies.tinkerpop.server.OrientGremlinGraphManager

#channelizer: com.pontusvision.gdpr.WsAndHttpJWTChannelizer
graphs: {
  graph: /orientdb/config/demodb.properties
}
scriptEngines: {
  gremlin-groovy: {
    plugins: {
               org.apache.tinkerpop.gremlin.server.jsr223.GremlinServerGremlinPlugin: {},
               org.apache.tinkerpop.gremlin.orientdb.jsr223.OrientDBGremlinPlugin: {},
              org.apache.tinkerpop.gremlin.jsr223.ImportGremlinPlugin: { classImports: [ java.lang.Math,com.pontusvision.gdpr.App, com.pontusvision.graphutils.ODBSchemaManager, com.pontusvision.graphutils.PontusJ2ReportingFunctions, com.pontusvision.graphutils.VisJSGraph, com.pontusvision.graphutils.DrawIOGremlin, com.pontusvision.graphutils.FormData, com.pontusvision.graphutils.IngestionOperation, com.pontusvision.graphutils.gdpr, com.pontusvision.graphutils.Matcher, com.pontusvision.gdpr.CIDRUtils, com.joestelmach.natty.DateGroup, com.joestelmach.natty.Parser, com.pontusvision.jpostal.AddressParser ,com.pontusvision.jpostal.ParsedComponent, com.pontusvision.utils.PostCode ], methodImports: [ java.lang.Math#*] },
              org.apache.tinkerpop.gremlin.jsr223.ScriptFileGremlinPlugin: { files: [ /orientdb/conf/bootstrap.groovy ] }
               }}}

serializers:
  - { className: org.apache.tinkerpop.gremlin.driver.ser.GraphBinaryMessageSerializerV1, config: { ioRegistries: [org.apache.tinkerpop.gremlin.orientdb.io.OrientIoRegistry ] ,  useMapperFromGraph: graph}}
  - { className: org.apache.tinkerpop.gremlin.driver.ser.GraphBinaryMessageSerializerV1, config: { serializeResultToString: true, useMapperFromGraph: graph }}
  - { className: org.apache.tinkerpop.gremlin.driver.ser.GryoMessageSerializerV1d0, config: { ioRegistries: [org.apache.tinkerpop.gremlin.tinkergraph.structure.TinkerIoRegistryV1d0, org.apache.tinkerpop.gremlin.orientdb.io.OrientIoRegistry ] ,  useMapperFromGraph: graph}}
  - { className: org.apache.tinkerpop.gremlin.driver.ser.GryoMessageSerializerV1d0, config: { serializeResultToString: true, useMapperFromGraph: graph }}
  - { className: org.apache.tinkerpop.gremlin.driver.ser.GryoMessageSerializerV3d0, config: { ioRegistries: [org.apache.tinkerpop.gremlin.orientdb.io.OrientIoRegistry] }}             # application/vnd.gremlin-v3.0+gryo
  - { className: org.apache.tinkerpop.gremlin.driver.ser.GryoMessageSerializerV3d0, config: { serializeResultToString: true }}                                                                       # application/vnd.gremlin-v3.0+gryo-stringd
  - { className: org.apache.tinkerpop.gremlin.driver.ser.GraphSONMessageSerializerV3d0, config: { ioRegistries: [org.apache.tinkerpop.gremlin.orientdb.io.OrientIoRegistry] }}         # application/json
processors:
  - { className: org.apache.tinkerpop.gremlin.server.op.standard.StandardOpProcessor, config: { maxParameters: 64 }}
  - { className: org.apache.tinkerpop.gremlin.server.op.session.SessionOpProcessor, config: { maxParameters: 64 , sessionTimeout: 28800000 }}
#  - { className: org.apache.tinkerpop.gremlin.server.op.traversal.TraversalOpProcessor, config: { maxParameters: 64 , cacheExpirationTime: 0, cacheMaxSize: 0 }}
  - { className: org.apache.tinkerpop.gremlin.server.op.traversal.TraversalOpProcessor, config: { cacheExpirationTime: 600000, cacheMaxSize: 1000 }}
metrics: {
  consoleReporter: {enabled: false, interval: 180000},
  csvReporter: {enabled: false, interval: 180000, fileName: /tmp/gremlin-server-metrics.csv},
  jmxReporter: {enabled: true},
  slf4jReporter: {enabled: false, interval: 180000}}
strictTransactionManagement: false
maxInitialLineLength: 4096
maxHeaderSize: 8192
maxChunkSize: 8192
maxContentLength: 65536
maxAccumulationBufferComponents: 1024
resultIterationBatchSize: 64
writeBufferLowWaterMark: 32768
writeBufferHighWaterMark: 65536
#authentication: {
#  authenticator: com.orientechnologies.tinkerpop.server.auth.OGremlinServerAuthenticator
#    }
ssl: {
  enabled: false}


#serializers:
  #- { className: org.apache.tinkerpop.gremlin.driver.ser.GryoMessageSerializerV1d0, config: { ioRegistries: [org.apache.tinkerpop.gremlin.tinkergraph.structure.TinkerIoRegistryV1d0 ] ,  useMapperFromGraph: graph}}
  #- { className: org.apache.tinkerpop.gremlin.driver.ser.GryoMessageSerializerV1d0, config: { serializeResultToString: true, useMapperFromGraph: graph }}
  #- { className: org.apache.tinkerpop.gremlin.driver.ser.GryoMessageSerializerV3d0, config: { ioRegistries: [org.apache.tinkerpop.gremlin.tinkergraph.structure.TinkerIoRegistryV3d0 ] , useMapperFromGraph: graph}}             # application/vnd.gremlin-v3.0+gryo
  #- { className: org.apache.tinkerpop.gremlin.driver.ser.GryoMessageSerializerV3d0, config: { serializeResultToString: true, useMapperFromGraph: graph }}                                                                       # application/vnd.gremlin-v3.0+gryo-stringd
  #- { className: org.apache.tinkerpop.gremlin.driver.ser.GraphSONMessageSerializerV3d0, config: { ioRegistries: [org.apache.tinkerpop.gremlin.tinkergraph.structure.TinkerIoRegistryV3d0 ] }}         # application/json
#processors:
  #- { className: org.apache.tinkerpop.gremlin.server.op.standard.StandardOpProcessor, config: { maxParameters: 64 }}
  #- { className: org.apache.tinkerpop.gremlin.server.op.session.SessionOpProcessor, config: { maxParameters: 64 , sessionTimeout: 28800000 }}
  #- { className: org.apache.tinkerpop.gremlin.server.op.traversal.TraversalOpProcessor, config: { maxParameters: 64 , cacheExpirationTime: 0, cacheMaxSize: 0 }}
#metrics: {
  #consoleReporter: {enabled: false, interval: 180000},
  #csvReporter: {enabled: false, interval: 180000, fileName: /tmp/gremlin-server-metrics.csv},
  #jmxReporter: {enabled: false},
  #slf4jReporter: {enabled: false, interval: 180000}}
#strictTransactionManagement: false
#maxInitialLineLength: 4096
#maxHeaderSize: 8192
#maxChunkSize: 8192
#maxContentLength: 2000000
#maxAccumulationBufferComponents: 1024
#resultIterationBatchSize: 64
#writeBufferLowWaterMark: 32768
#writeBufferHighWaterMark: 65536
#ssl: {
#  enabled: false
#}

#authentication: {
#  authenticator: com.orientechnologies.tinkerpop.server.auth.OGremlinServerAuthenticator
#}


#plugins:
#  - janusgraph.imports
#scriptEngines: {
#  gremlin-groovy: {
#    imports: [java.lang.Math],
#    staticImports: [java.lang.Math.PI],
#    scripts: [scripts/empty-sample.groovy]}}
#serializers:
#  - { className: org.apache.tinkerpop.gremlin.driver.ser.GryoMessageSerializerV1d0, config: { ioRegistries: [org.janusgraph.graphdb.tinkerpop.JanusGraphIoRegistry] }}
#  - { className: org.apache.tinkerpop.gremlin.driver.ser.GryoLiteMessageSerializerV1d0, config: {ioRegistries: [org.janusgraph.graphdb.tinkerpop.JanusGraphIoRegistry] }}
#  - { className: org.apache.tinkerpop.gremlin.driver.ser.GryoMessageSerializerV1d0, config: { serializeResultToString: true }}
#  - { className: org.apache.tinkerpop.gremlin.driver.ser.GraphSONMessageSerializerGremlinV1d0, config: { ioRegistries: [org.janusgraph.graphdb.tinkerpop.JanusGraphIoRegistryV1d0] }}
#  - { className: org.apache.tinkerpop.gremlin.driver.ser.GraphSONMessageSerializerGremlinV2d0, config: { ioRegistries: [org.janusgraph.graphdb.tinkerpop.JanusGraphIoRegistry] }}
#  - { className: org.apache.tinkerpop.gremlin.driver.ser.GraphSONMessageSerializerV1d0, config: { ioRegistries: [org.janusgraph.graphdb.tinkerpop.JanusGraphIoRegistryV1d0] }}
#processors:
#  - { className: org.apache.tinkerpop.gremlin.server.op.session.SessionOpProcessor, config: { sessionTimeout: 28800000 }}
#  - { className: org.apache.tinkerpop.gremlin.server.op.traversal.TraversalOpProcessor, config: { cacheExpirationTime: 600000, cacheMaxSize: 1000 }}
#metrics: {
#  consoleReporter: {enabled: true, interval: 180000},
#  csvReporter: {enabled: true, interval: 180000, fileName: /tmp/gremlin-server-metrics.csv},
#  jmxReporter: {enabled: true},
#  slf4jReporter: {enabled: true, interval: 180000},
#  gangliaReporter: {enabled: false, interval: 180000, addressingMode: MULTICAST},
#  graphiteReporter: {enabled: false, interval: 180000}}
#maxInitialLineLength: 4096
#maxHeaderSize: 8192
#maxChunkSize: 8192
#maxContentLength: 65536
#maxAccumulationBufferComponents: 1024
#resultIterationBatchSize: 64
#writeBufferLowWaterMark: 32768
#writeBufferHighWaterMark: 65536

