# STEP 1: RUN build-docker-conf.sh then build-docker-lib.sh everytime you CREATE a new PR

name: Build Docker PR

on:
#  pull_request:
  push:
    branches: [ master ]

jobs:
  build-docker-pr:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Prepare Docker image
        id: prep
        run: |
          TAG=$(echo $GITHUB_SHA | head -c7)
          IMAGE="pontusvisiongdpr/pontus-graphdb-odb-lib"
          echo ::set-output name=tagged_image::${IMAGE}:${TAG}
          echo ::set-output name=tag::${TAG}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
        with:
          install: true

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          # Key is named differently to avoid collision
          key: ${{ runner.os }}-multi-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-multi-buildx

      - name: envsubst Dockerfile
        run: |
          export DOLLAR='$'
          cat ./docker-lib/Dockerfile.template | envsubst > ./docker-lib/Dockerfile

      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          file: ./docker-lib/Dockerfile
          # target: deploy
          push: false
          tags: ${{ steps.prep.outputs.tagged_image }}
          cache-from: type=local,src=/tmp/.buildx-cache
          # More: https://github.com/moby/buildkit#--export-cache-options
          # And: https://github.com/docker/buildx#--cache-tonametypetypekeyvalue
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
