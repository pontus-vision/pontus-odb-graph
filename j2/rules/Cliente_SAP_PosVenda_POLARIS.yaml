# DO NOT UPDATE THIS FILE MANUALLY; ANY CHANGES WILL BE OVERRIDDEN BY THE J2 DIR TEMPLATES
updatereq:
  vertices:
    
    - label: Person_Natural
      condition: ${Tax_Number_1?.replaceAll('[^0-9]', '')?.length() == 11 || Tax_Number_2?.replaceAll('[^0-9]', '')?.length() == 11}
      props:
        - name: Person_Natural_Full_Name
          val: ${Name_1?.trim()?.toUpperCase()}${Name_2?.trim()?' ':''}${Name_2?.trim()?.toUpperCase()}
          mandatoryInSearch: True
        - name: Person_Natural_Customer_ID
          val: ${Tax_Number_1?.replaceAll('[^0-9]', '')?.length() == 11?Tax_Number_1?.replaceAll('[^0-9]', ''):Tax_Number_2?.replaceAll('[^0-9]', '')}
          mandatoryInSearch: True
    
    - label: Object_Identity_Card
      condition: ${Tax_Number_1?.replaceAll('[^0-9]', '')?.length() == 11 || Tax_Number_2?.replaceAll('[^0-9]', '')?.length() == 11}
      props:
        - name: Object_Identity_Card_Id_Value
          val: ${Tax_Number_1?.replaceAll('[^0-9]', '')?.length() == 11?Tax_Number_1?.replaceAll('[^0-9]', ''):Tax_Number_2?.replaceAll('[^0-9]', '')}
          mandatoryInSearch: True
        - name: Object_Identity_Card_Id_Type
          val: CPF
          mandatoryInSearch: False
          excludeFromSearch: True
    
    - label: Person_Organisation
      condition: ${Tax_Number_1?.replaceAll('[^0-9]', '')?.length() == 14 || Tax_Number_2?.replaceAll('[^0-9]', '')?.length() == 14}
      props:
        - name: Person_Organisation_Registration_Number
          val: ${Tax_Number_1?.replaceAll('[^0-9]', '')?.length() == 14?Tax_Number_1?.replaceAll('[^0-9]', ''):Tax_Number_2?.replaceAll('[^0-9]', '')}
          mandatoryInSearch: True
        - name: Person_Organisation_Id
          val: ${Tax_Number_1?.replaceAll('[^0-9]', '')?.length() == 14?Tax_Number_1?.replaceAll('[^0-9]', ''):Tax_Number_2?.replaceAll('[^0-9]', '')}
          mandatoryInSearch: True
        - name: Person_Organisation_Name
          val: ${Name_1?.trim()?.toUpperCase()} ${Name_2?.trim()?.toUpperCase()}
          mandatoryInSearch: True
    
    - label: Person_Natural
      condition: ${!(Tax_Number_1?.replaceAll('[^0-9]', '')?.length() == 11 || Tax_Number_2?.replaceAll('[^0-9]', '')?.length() == 11 || Tax_Number_1?.replaceAll('[^0-9]', '')?.length() == 14 || Tax_Number_2?.replaceAll('[^0-9]', '')?.length() == 14)}
      props:
        - name: Person_Natural_Full_Name
          val: ${Name_1?.trim()?.toUpperCase()}${Name_2?.trim()?' ':''}${Name_2?.trim()?.toUpperCase()}
          mandatoryInSearch: True
        - name: Person_Natural_Customer_ID
          val: ${Customer}
          mandatoryInSearch: True
    
    - label: Object_Phone_Number
      name: phone
      condition: ${Telephone_1?.trim()?.length() > 0}
      props:
        - name: Object_Phone_Number_Raw
          val: ${Telephone_1}
          mandatoryInSearch: True
        - name: Object_Phone_Number_Numbers_Only
          val: ${(Telephone_1?.replaceAll('[^0-9]', '')?:'00000000')}
          mandatoryInSearch: False
          type: "[Ljava.lang.String;"
          excludeFromSearch: True
        - name: Object_Phone_Number_Last_7_Digits
          val: ${(((Telephone_1?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}
          mandatoryInSearch: True
          type: "[Ljava.lang.String;"
    
    - label: Object_Phone_Number
      name: phone2
      condition: ${Telephone_2?.trim()?.length() > 0}
      props:
        - name: Object_Phone_Number_Raw
          val: ${Telephone_2}
          mandatoryInSearch: True
        - name: Object_Phone_Number_Numbers_Only
          val: ${(Telephone_2?.replaceAll('[^0-9]', '')?:'00000000')}
          mandatoryInSearch: False
          type: "[Ljava.lang.String;"
          excludeFromSearch: True
        - name: Object_Phone_Number_Last_7_Digits
          val: ${(((Telephone_2?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}
          mandatoryInSearch: True
          type: "[Ljava.lang.String;"
    
    - label: Location_Address
      props:
        - name: Location_Address_Full_Address
          val: ${ ((Street?:'')+ '\\n' + (City?:'') + '\\n' + (District?:'') + '\\n' + (Cty?:'')).replaceAll('\\n', ' ')}
          mandatoryInSearch: True
        - name: Location_Address_parser
          val: ${ ((Street?:'')+ '\\n' + (City?:'') + '\\n' + (District?:'') + '\\n' + (Cty?:'')).replaceAll('\\n', ' ')}
          mandatoryInSearch: True
          type: "com.pontusvision.utils.LocationAddress"
    
    - label: Event_Ingestion
      props:
        - name: Event_Ingestion_Type
          val: sap/clientes
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Event_Ingestion_Operation
          val: Structured Data Insertion
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Event_Ingestion_Domain_b64
          val: ${original_request?.bytes?.encodeBase64()?.toString()}
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Event_Ingestion_Metadata_Create_Date
          val: ${new Date()}
          mandatoryInSearch: False
          type: "java.util.Date"
          excludeFromSearch: True
        - name: Event_Ingestion_Metadata_Update_Date
          val: ${new Date()}
          mandatoryInSearch: False
          type: "java.util.Date"
          excludeFromSearch: True
    
    - label: Event_Group_Ingestion
      props:
        - name: Event_Group_Ingestion_Type
          val: sap/clientes
          mandatoryInSearch: True
        - name: Event_Group_Ingestion_Operation
          val: Structured Data Insertion
          mandatoryInSearch: True
        - name: Event_Group_Ingestion_Ingestion_Date
          val: ${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}
          mandatoryInSearch: True
    
    - label: Object_Data_Source
      props:
        - name: Object_Data_Source.Name
          val: SAP/CLIENTES
          mandatoryInSearch: True

  edges:
  - label: Is_Located
    fromVertexLabel: Person_Organisation
    toVertexLabel: Location_Address
  - label: Is_Located
    fromVertexLabel: Person_Natural
    toVertexLabel: Location_Address
  - label: Has_Ingestion_Event
    fromVertexLabel: Person_Organisation
    toVertexLabel: Event_Ingestion
  - label: Has_Ingestion_Event
    fromVertexLabel: Person_Natural
    toVertexLabel: Event_Ingestion
  - label: Has_Ingestion_Event
    fromVertexLabel: Event_Group_Ingestion
    toVertexLabel: Event_Ingestion
  - label: Has_Ingestion_Event
    fromVertexLabel: Object_Data_Source
    toVertexLabel: Event_Group_Ingestion
  - label: Has_Phone
    fromVertexLabel: Person_Organisation
    toVertexName: phone
  - label: Has_Phone
    fromVertexLabel: Person_Organisation
    toVertexName: phone2
  - label: Has_Phone
    fromVertexLabel: Person_Natural
    toVertexName: phone
  - label: Has_Phone
    fromVertexLabel: Person_Natural
    toVertexName: phone2
  - label: Has_Identity_Card
    fromVertexLabel: Person_Natural
    toVertexLabel: Object_Identity_Card

