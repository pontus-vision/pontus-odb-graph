# DO NOT UPDATE THIS FILE MANUALLY; ANY CHANGES WILL BE OVERRIDDEN BY THE J2 DIR TEMPLATES
updatereq:
  vertices:
    
    - label: Person.Natural
      name: titular
      props:
        - name: Person.Natural.Full_Name
          val: ${Nome?.trim()?.toUpperCase()}
          mandatoryInSearch: True
        - name: Person.Natural.Customer_ID
          val: ${CPF?.replaceAll('[^0-9]', '')}
          mandatoryInSearch: True
        - name: Person.Natural.Date_Of_Birth
          val: ${Data_de_Nascimento_Idade?.trim()}
          predicate: eq
          mandatoryInSearch: True
          type: "java.util.Date"
    
    - label: Person.Natural
      name: mae
      condition: ${Nome_da_Mae?.trim()?.length() > 0}
      props:
        - name: Person.Natural.Full_Name
          val: ${Nome_da_Mae?.trim()?.toUpperCase()}
          mandatoryInSearch: True
    
    - label: Person.Natural
      name: pai
      condition: ${Nome_do_Pai?.trim()?.length() > 0}
      props:
        - name: Person.Natural.Full_Name
          val: ${Nome_do_Pai?.trim()?.toUpperCase()}
          mandatoryInSearch: True
    
    - label: Person.Employee
      name: colaborador
      props:
        - name: Person.Employee.ID
          val: ${Matricula?.replaceAll('[^0-9]', '')}
          mandatoryInSearch: True
        - name: Person.Employee.Role
          val: ${Cargo?.trim()}/${Funcao?.trim()}
          mandatoryInSearch: False
          excludeFromSearch: True
    
    - label: Person.Employee
      name: chefe
      condition: ${Matricula_da_Chefia_Imediata?.replaceAll('[^0-9]', '')?.length() > 0}
      props:
        - name: Person.Employee.ID
          val: ${Matricula_da_Chefia_Imediata?.replaceAll('[^0-9]', '')}
          mandatoryInSearch: True
    
    - label: Object.Identity_Card
      name: rne
      condition: ${RNE?.replaceAll('[^0-9]', '')?.length() > 0 }
      props:
        - name: Object.Identity_Card.Id_Value
          val: ${RNE.replaceAll('[^0-9]','')}
          mandatoryInSearch: True
        - name: Object.Identity_Card.Id_Type
          val: RNE
          mandatoryInSearch: False
          excludeFromSearch: True
    
    - label: Object.Identity_Card
      name: cpf
      condition: ${CPF?.replaceAll('[^0-9]','')?.length() > 0}
      props:
        - name: Object.Identity_Card.Id_Value
          val: ${CPF?.replaceAll('[^0-9]','')}
          mandatoryInSearch: True
        - name: Object.Identity_Card.Id_Type
          val: CPF
          mandatoryInSearch: False
          excludeFromSearch: True
    
    - label: Object.Identity_Card
      name: rg
      condition: ${Identidade___Orgao_Emissor___UF?.replaceAll('[^0-9]','')?.length() > 0}
      props:
        - name: Object.Identity_Card.Id_Value
          val: ${Identidade___Orgao_Emissor___UF?.replaceAll('[^0-9]','')}
          mandatoryInSearch: True
        - name: Object.Identity_Card.Id_Text
          val: ${Identidade___Orgao_Emissor___UF}
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Object.Identity_Card.Id_Type
          val: RG
          mandatoryInSearch: False
          excludeFromSearch: True
    
    - label: Object.Email_Address
      name: email
      condition: ${(Email != null) && !(Email.isEmpty())}
      props:
        - name: Object.Email_Address.Email
          val: ${Email?.trim()?.toLowerCase()}
          mandatoryInSearch: True
    
    - label: Object.Email_Address
      name: email_opcional
      condition: ${(E_Mail_Opcional != null) && !(E_Mail_Opcional.isEmpty())}
      props:
        - name: Object.Email_Address.Email
          val: ${E_Mail_Opcional?.trim()?.toLowerCase()}
          mandatoryInSearch: True
    
    - label: Location.Address
      props:
        - name: Location.Address.Full_Address
          val: ${Tipo___Endereco}${N?', ' + N + ' ':''}${Complemento?:''} ${Bairro?', ' + Bairro + ' ':''}${Municipio02?:''}${CEP?' '+CEP:''}
          mandatoryInSearch: True
    
    - label: Object.Phone_Number
      condition: ${Telefone?.replaceAll('[^0-9]', '')?.length() >= 7}
      props:
        - name: Object.Phone_Number.Raw
          val: ${Telefone}
          mandatoryInSearch: True
        - name: Object.Phone_Number.Numbers_Only
          val: ${(Telefone?.replaceAll('[^0-9]', '')?:'00000000')}
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Object.Phone_Number.Last_7_Digits
          val: ${(((Telefone?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}
          mandatoryInSearch: True
    
    - label: Event.Ingestion
      props:
        - name: Event.Ingestion.Type
          val: ADP
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Event.Ingestion.Operation
          val: Structured Data Insertion
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Event.Ingestion.Metadata_Create_Date
          val: ${new Date()}
          mandatoryInSearch: False
          type: "java.util.Date"
          excludeFromSearch: True
    
    - label: Object.Data_Source
      props:
        - name: Object.Data_Source.Name
          val: ADP
          mandatoryInSearch: True
    
    - label: Event.Group_Ingestion
      props:
        - name: Event.Group_Ingestion.Type
          val: ADP
          mandatoryInSearch: True
        - name: Event.Group_Ingestion.Operation
          val: Structured Data Insertion
          mandatoryInSearch: True
        - name: Event.Group_Ingestion.Ingestion_Date
          val: ${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}
          mandatoryInSearch: True

  edges:
  - label: Has_Ingestion_Event
    fromVertexLabel: Object.Data_Source
    toVertexLabel: Event.Group_Ingestion
  - label: Has_Ingestion_Event
    fromVertexLabel: Event.Group_Ingestion
    toVertexLabel: Event.Ingestion
  - label: Has_Ingestion_Event
    fromVertexName: titular
    toVertexLabel: Event.Ingestion
  - label: Is_Alias
    fromVertexName: titular
    toVertexLabel: colaborador
  - label: Is_Subordinate
    fromVertexName: colaborador
    toVertexName: chefe
  - label: Uses_Email
    fromVertexName: titular
    toVertexName: email
  - label: Uses_Email
    fromVertexName: titular
    toVertexName: email_opcional
  - label: Is_Located
    fromVertexName: titular
    toVertexLabel: Location.Address
  - label: Has_Id_Card
    fromVertexName: titular
    toVertexName: cpf
  - label: Has_Id_Card
    fromVertexName: titular
    toVertexName: rg
  - label: Has_Id_Card
    fromVertexName: titular
    toVertexName: rne
  - label: Has_Phone
    fromVertexName: titular
    toVertexLabel: Object.Phone_Number
  - label: Has_Parent_Or_Guardian
    fromVertexName: titular
    toVertexName: mae
  - label: Has_Parent_Or_Guardian
    fromVertexName: titular
    toVertexName: pai

