# DO NOT UPDATE THIS FILE MANUALLY; ANY CHANGES WILL BE OVERRIDDEN BY THE J2 DIR TEMPLATES
updatereq:
  vertices:
    
    - label: Object.Data_Source
      name: data_sources
      props:
        - name: Object.Data_Source.Form_Id
          val: ${new groovy.json.JsonBuilder(data_sources)}
          mandatoryInSearch: True
          processAll: True
          type: "[Lcom.pontusvision.utils.SharepointRef;"
          postProcessor: ${com.pontusvision.utils.SharepointRef.fromString(it)?.getLookupId()}
    
    - label: Event.Data_Breach
      props:
        - name: Event.Data_Breach.Form_Id
          val: ${id}
          mandatoryInSearch: True
        - name: Event.Data_Breach.Id
          val: ${Title?.trim()?.toUpperCase()}
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Event.Data_Breach.Authority_Notified
          val: ${authority_notified?.trim()}
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Event.Data_Breach.Description
          val: ${description?.trim()?.toUpperCase()}
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Event.Data_Breach.Impact
          val: ${impact}
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Event.Data_Breach.Metadata.Create_Date
          val: ${Created}
          mandatoryInSearch: False
          type: "java.util.Date"
          excludeFromSearch: True
        - name: Event.Data_Breach.Metadata.Update_Date
          val: ${Modified}
          mandatoryInSearch: False
          type: "java.util.Date"
          excludeFromSearch: True
        - name: Event.Data_Breach.Natural_Person_Notified
          val: ${natural_person_notified?.trim()}
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Event.Data_Breach.Source
          val: ${source?.toUpperCase()}
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Event.Data_Breach.Status
          val: ${status}
          mandatoryInSearch: False
          excludeFromSearch: True
    
    - label: Object.Data_Source
      name: sharepoint
      props:
        - name: Object.Data_Source.Name
          val: SHAREPOINT/DATA-BREACHES
          mandatoryInSearch: True
    
    - label: Event.Ingestion
      props:
        - name: Event.Ingestion.Type
          val: Data Breaches
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Event.Ingestion.Operation
          val: Structured Data Insertion
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Event.Ingestion.Domain_b64
          val: ${original_request?.bytes?.encodeBase64()?.toString()}
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Event.Ingestion.Metadata_Create_Date
          val: ${new Date()}
          mandatoryInSearch: False
          type: "java.util.Date"
          excludeFromSearch: True
        - name: Event.Ingestion.Metadata_Update_Date
          val: ${new Date()}
          mandatoryInSearch: False
          type: "java.util.Date"
          excludeFromSearch: True
    
    - label: Event.Group_Ingestion
      props:
        - name: Event.Group_Ingestion.Metadata_Start_Date
          val: ${new Date()}
          mandatoryInSearch: False
          type: "java.util.Date"
          excludeFromSearch: True
        - name: Event.Group_Ingestion.Metadata_End_Date
          val: ${new Date()}
          mandatoryInSearch: False
          type: "java.util.Date"
          excludeFromSearch: True
        - name: Event.Group_Ingestion.Type
          val: sharepoint/data-breaches
          mandatoryInSearch: True
        - name: Event.Group_Ingestion.Operation
          val: Structured Data Insertion
          mandatoryInSearch: True
        - name: Event.Group_Ingestion.Ingestion_Date
          val: ${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}
          mandatoryInSearch: True

  edges:
  - label: Has_Ingestion_Event
    fromVertexName: sharepoint
    toVertexLabel: Event.Group_Ingestion
  - label: Has_Ingestion_Event
    fromVertexLabel: Event.Group_Ingestion
    toVertexLabel: Event.Ingestion
  - label: Has_Ingestion_Event
    fromVertexLabel: Event.Data_Breach
    toVertexLabel: Event.Ingestion
  - label: Impacted_By_Data_Breach
    fromVertexLabel: Event.Data_Breach
    toVertexName: data_sources

