# DO NOT UPDATE THIS FILE MANUALLY; ANY CHANGES WILL BE OVERRIDDEN BY THE J2 DIR TEMPLATES
updatereq:
  vertices:
    
    - label: Person.Natural
      props:
        - name: Person.Natural.Full_Name
          val: ${FirstName?.toUpperCase()?.trim()} ${LastName?.toUpperCase()?.trim()}
          predicate: eq
          mandatoryInSearch: True
        - name: Person.Natural.Full_Name_fuzzy
          val: ${FirstName?.toUpperCase()?.trim()} ${LastName?.toUpperCase()?.trim()}
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Person.Natural.Last_Name
          val: ${LastName?.toUpperCase()?.trim()}
          mandatoryInSearch: True
          excludeFromSubsequenceSearch: True
        - name: Person.Natural.Date_Of_Birth
          val: ${Birthdate?:'1666-01-01'}
          mandatoryInSearch: True
          excludeFromSubsequenceSearch: True
          type: "java.util.Date"
        - name: Person.Natural.Title
          val: ${Title?:Salutation?:''}
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Person.Natural.Nationality
          val: ${MailingCountry?:'Unknown'}
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Person.Natural.Customer_ID
          val: ${Id}
          mandatoryInSearch: True
        - name: Person.Natural.Gender
          val: Unknown
          mandatoryInSearch: True
          excludeFromSubsequenceSearch: True
        - name: Person.Natural.Type
          val: ${Tipo__c?Tipo__c.toLowerCase():'leads'}
          mandatoryInSearch: True
          excludeFromSubsequenceSearch: True
    
    - label: Object.Identity_Card
      condition: ${ (CPF__c != null) && ! (CPF__c.isEmpty())}
      props:
        - name: Object.Identity_Card.Id_Type
          val: CPF
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Object.Identity_Card.Id_Value
          val: ${CPF__c.replaceAll('[^0-9]','')}
          mandatoryInSearch: True
    
    - label: Location.Address
      props:
        - name: Location.Address.Full_Address
          val: ${ ( (MailingStreet?:'')+ '\\n' + (MailingCity?:'') + '\\n' + (MailingState?:'') + '\\n' + (MailingCountry?:'')).replaceAll('\\n', ' ') }
          mandatoryInSearch: True
        - name: Location.Address.parser
          val: ${ ( (MailingStreet?:'')+ '\\n' + (MailingCity?:'') + '\\n' + (MailingState?:'') + '\\n' + (MailingCountry?:'')).replaceAll('\\n', ' ') }
          mandatoryInSearch: False
          type: "com.pontusvision.utils.LocationAddress"
          excludeFromSearch: True
        - name: Location.Address.Post_Code
          val: ${com.pontusvision.utils.PostCode.format(MailingPostalCode)}
          mandatoryInSearch: False
          excludeFromSearch: True
    
    - label: Object.Email_Address
      props:
        - name: Object.Email_Address.Email
          val: ${Email?.trim()?.toLowerCase()}
          mandatoryInSearch: True
    
    - label: Object.Phone_Number
      props:
        - name: Object.Phone_Number.Raw
          val: ${Phone}
          mandatoryInSearch: True
        - name: Object.Phone_Number.Type
          val: Work
          mandatoryInSearch: True
          excludeFromSubsequenceSearch: True
        - name: Object.Phone_Number.Numbers_Only
          val: ${(Phone?.replaceAll('[^0-9]', '')?:'00000000')}
          mandatoryInSearch: False
          type: "[Ljava.lang.String;"
          excludeFromSearch: True
        - name: Object.Phone_Number.Last_7_Digits
          val: ${(((Phone?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}
          mandatoryInSearch: True
          type: "[Ljava.lang.String;"
    
    - label: Object.Data_Source
      props:
        - name: Object.Data_Source.Name
          val: salesforce.com
          mandatoryInSearch: True
        - name: Object.Data_Source.Type
          val: salesforce.com
          mandatoryInSearch: True
        - name: Object.Data_Source.Description
          val: Salesforce.com CRM system data
          mandatoryInSearch: True
    
    - label: Event.Group_Ingestion
      props:
        - name: Event.Group_Ingestion.Type
          val: Salesforce CRM System
          mandatoryInSearch: True
        - name: Event.Group_Ingestion.Operation
          val: Structured Data Insertion
          mandatoryInSearch: True
        - name: Event.Group_Ingestion.Ingestion_Date
          val: ${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}
          mandatoryInSearch: True
    
    - label: Event.Ingestion
      props:
        - name: Event.Ingestion.Type
          val: Salesforce CRM System
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Event.Ingestion.Operation
          val: Structured Data Insertion
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Event.Ingestion.Domain_b64
          val: ${original_request?.bytes?.encodeBase64()?.toString()}
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Event.Ingestion.Metadata_Create_Date
          val: ${new Date()}
          mandatoryInSearch: False
          type: "java.util.Date"
          excludeFromSearch: True
    
    - label: Event.Consent
      props:
        - name: Event.Consent.Status
          val: Consentimento
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Event.Consent.Date
          val: ${new Date()}
          mandatoryInSearch: False
          type: "java.util.Date"
          excludeFromSearch: True
    
    - label: Object.Privacy_Notice
      props:
        - name: Object.Privacy_Notice.Who_Is_Collecting
          val: [CRM System]
          mandatoryInSearch: True

  edges:
  - label: Uses_Email
    fromVertexLabel: Person.Natural
    toVertexLabel: Object.Email_Address
  - label: Has_Id_Card
    fromVertexLabel: Person.Natural
    toVertexLabel: Object.Identity_Card
  - label: Has_Phone
    fromVertexLabel: Person.Natural
    toVertexLabel: Object.Home_Phone_Number
  - label: Has_Phone
    fromVertexLabel: Person.Natural
    toVertexLabel: Object.Phone_Number
  - label: Lives
    fromVertexLabel: Person.Natural
    toVertexLabel: Location.Address
  - label: Has_Ingestion_Event
    fromVertexLabel: Person.Natural
    toVertexLabel: Event.Ingestion
  - label: Has_Ingestion_Event
    fromVertexLabel: Event.Group_Ingestion
    toVertexLabel: Event.Ingestion
  - label: Has_Ingestion_Event
    fromVertexLabel: Object.Data_Source
    toVertexLabel: Event.Group_Ingestion
  - label: Consent
    fromVertexLabel: Person.Natural
    toVertexLabel: Event.Consent
  - label: Has_Privacy_Notice
    fromVertexLabel: Event.Consent
    toVertexLabel: Object.Privacy_Notice

