{
  "updatereq": {
    "vertices": [
      {
        "label": "Person.Organisation",
        "name": "fornecedor",
        "condition": "${A2_CGC?.replaceAll('[^0-9]','')?.length() == 14}",
        "props": [
          {
            "name": "Person.Organisation.Name",
            "val": "${(A2_NOMRESP?.trim()?.length() > 0)?A2_NOMRESP?.trim()?.toUpperCase():A2_NOME?.trim()?.toUpperCase()}",
            "mandatoryInSearch": true
          },
          {
            "name": "Person.Organisation.Id",
            "val": "${A2_CGC.replaceAll('[^0-9]','')}",
            "mandatoryInSearch": true
          },
          {
            "name": "Person.Organisation.Registration_Number",
            "val": "${A2_CGC.replaceAll('[^0-9]','')}",
            "mandatoryInSearch": true
          }
        ]
      },
      {
        "label": "Person.Natural",
        "name": "rep",
        "condition": "${A2_CGC?.replaceAll('[^0-9]','')?.length() == 11}",
        "props": [
          {
            "name": "Person.Natural.Full_Name",
            "val": "${(A2_NOME?.trim()?.length() > 0)?A2_NOME?.trim()?.toUpperCase():A2_NOMRESP?.trim()?.toUpperCase()}",
            "mandatoryInSearch": true
          }
        ]
      },
      {
        "label": "Location.Address",
        "props": [
          {
            "name": "Location.Address.Full_Address",
            "val": "${A2_END?.trim()?.toUpperCase()}, ${A2_BAIRRO?.trim()?.toUpperCase()}, ${A2_MUN?.trim()?.toUpperCase()} - ${A2_EST?.trim()?.toUpperCase()}, ${A2_CEP}, BRASIL",
            "mandatoryInSearch": false,
            "excludeFromSearch": true
          },
          {
            "name": "Location.Address.parser",
            "val": "${A2_END?.trim()?.toUpperCase()}, ${A2_BAIRRO?.trim()?.toUpperCase()}, ${A2_MUN?.trim()?.toUpperCase()} - ${A2_EST?.trim()?.toUpperCase()}, ${A2_CEP}, BRASIL",
            "mandatoryInSearch": true,
            "type": "com.pontusvision.utils.LocationAddress"
          },
          {
            "name": "Location.Address.Post_Code",
            "val": "${com.pontusvision.utils.PostCode.format(A2_CEP)}",
            "mandatoryInSearch": true
          }
        ]
      },
      {
        "label": "Object.Identity_Card",
        "name": "cnpj",
        "condition": "${A2_CGC?.replaceAll('[^0-9]', '')?.length() == 14}",
        "props": [
          {
            "name": "Object.Identity_Card.Id_Value",
            "val": "${A2_CGC?.replaceAll('[^0-9]','')}",
            "mandatoryInSearch": true
          },
          {
            "name": "Object.Identity_Card.Id_Type",
            "val": "CNPJ",
            "mandatoryInSearch": false,
            "excludeFromSearch": true
          }
        ]
      },
      {
        "label": "Object.Identity_Card",
        "name": "cpf",
        "condition": "${A2_CGC?.replaceAll('[^0-9]','')?.length() == 11}",
        "props": [
          {
            "name": "Object.Identity_Card.Id_Value",
            "val": "${A2_CGC?.replaceAll('[^0-9]','')}",
            "mandatoryInSearch": true
          },
          {
            "name": "Object.Identity_Card.Id_Type",
            "val": "CPF",
            "mandatoryInSearch": false,
            "excludeFromSearch": true
          }
        ]
      },
      {
        "label": "Object.Phone_Number",
        "name": "phone",
        "condition": "${A2_TEL?.replaceAll('[^0-9]','')?.length() > 0}",
        "props": [
          {
            "name": "Object.Phone_Number.Raw",
            "val": "${A2_TEL}",
            "mandatoryInSearch": true
          },
          {
            "name": "Object.Phone_Number.Numbers_Only",
            "val": "${(A2_TEL?.replaceAll('[^0-9]', '')?:'00000000')}",
            "mandatoryInSearch": false,
            "type": "[Ljava.lang.String;",
            "excludeFromSearch": true
          },
          {
            "name": "Object.Phone_Number.Last_7_Digits",
            "val": "${(((A2_TEL?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}",
            "mandatoryInSearch": true,
            "type": "[Ljava.lang.String;"
          }
        ]
      },
      {
        "label": "Object.Email_Address",
        "name": "email",
        "condition": "${A2_EMAIL?.trim()?.length() > 0}",
        "props": [
          {
            "name": "Object.Email_Address.Email",
            "val": "${A2_EMAIL?.trim()?.toLowerCase()}",
            "mandatoryInSearch": true
          }
        ]
      },
      {
        "label": "Event.Ingestion",
        "props": [
          {
            "name": "Event.Ingestion.Type",
            "val": "totvs/protheus/sa2_fornecedor",
            "mandatoryInSearch": false,
            "excludeFromSearch": true
          },
          {
            "name": "Event.Ingestion.Operation",
            "val": "Structured Data Insertion",
            "mandatoryInSearch": false,
            "excludeFromSearch": true
          },
          {
            "name": "Event.Ingestion.Domain_b64",
            "val": "${original_request?.bytes?.encodeBase64()?.toString()}",
            "mandatoryInSearch": false,
            "excludeFromSearch": true
          },
          {
            "name": "Event.Ingestion.Metadata_Create_Date",
            "val": "${firstUpdate}",
            "mandatoryInSearch": false,
            "type": "java.util.Date",
            "excludeFromSearch": true
          },
          {
            "name": "Event.Ingestion.Metadata_Update_Date",
            "val": "${lastUpdate}",
            "mandatoryInSearch": false,
            "type": "java.util.Date",
            "excludeFromSearch": true
          }
        ]
      },
      {
        "label": "Event.Group_Ingestion",
        "props": [
          {
            "name": "Event.Group_Ingestion.Type",
            "val": "totvs/protheus/sa2_fornecedor",
            "mandatoryInSearch": true
          },
          {
            "name": "Event.Group_Ingestion.Operation",
            "val": "Structured Data Insertion",
            "mandatoryInSearch": true
          },
          {
            "name": "Event.Group_Ingestion.Ingestion_Date",
            "val": "${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}",
            "mandatoryInSearch": true
          }
        ]
      },
      {
        "label": "Object.Data_Source",
        "props": [
          {
            "name": "Object.Data_Source.Name",
            "val": "TOTVS/PROTHEUS/SA2_FORNECEDOR",
            "mandatoryInSearch": true
          }
        ]
      }
    ],
    "edges": [
      {
        "label": "Has_Ingestion_Event",
        "fromVertexName": "fornecedor",
        "toVertexLabel": "Event.Ingestion"
      },
      {
        "label": "Has_Ingestion_Event",
        "fromVertexName": "rep",
        "toVertexLabel": "Event.Ingestion"
      },
      {
        "label": "Has_Ingestion_Event",
        "fromVertexLabel": "Event.Group_Ingestion",
        "toVertexLabel": "Event.Ingestion"
      },
      {
        "label": "Has_Ingestion_Event",
        "fromVertexLabel": "Object.Data_Source",
        "toVertexLabel": "Event.Group_Ingestion"
      },
      {
        "label": "Has_Phone",
        "fromVertexName": "rep",
        "toVertexName": "phone"
      },
      {
        "label": "Uses_Email",
        "fromVertexName": "rep",
        "toVertexName": "email"
      },
      {
        "label": "Is_Located",
        "fromVertexName": "rep",
        "toVertexLabel": "Location.Address"
      },
      {
        "label": "Has_Id_Card",
        "fromVertexName": "rep",
        "toVertexName": "cpf"
      },
      {
        "label": "Has_Id_Card",
        "fromVertexName": "fornecedor",
        "toVertexName": "cnpj"
      },
      {
        "label": "Uses_Email",
        "fromVertexName": "fornecedor",
        "toVertexName": "email"
      },
      {
        "label": "Has_Phone",
        "fromVertexName": "fornecedor",
        "toVertexName": "phone"
      },
      {
        "label": "Is_Located",
        "fromVertexName": "fornecedor",
        "toVertexLabel": "Location.Address"
      }
    ]
  }
}
