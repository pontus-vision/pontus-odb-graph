# DO NOT UPDATE THIS FILE MANUALLY; ANY CHANGES WILL BE OVERRIDDEN BY THE J2 DIR TEMPLATES
updatereq:
  vertices:
    
    - label: Person.Natural
      props:
        - name: Person.Natural.Full_Name
          val: ${First_Name?.trim()?.toUpperCase()} ${Last_Name?.trim()?.toUpperCase()}
          mandatoryInSearch: True
        - name: Person.Natural.Customer_ID
          val: ${Tax_Number?.replaceAll('[^0-9]','')}
          mandatoryInSearch: True
        - name: Person.Natural.Title
          val: ${Title}
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Person.Natural.Date_Of_Birth
          val: ${Date_of_Birth?.replaceAll('\\.','/')?.trim()?:'01/01/1666'}
          mandatoryInSearch: True
          type: "java.util.Date"
        - name: Person.Natural.Nationality
          val: ${Nationality?.trim()?.toUpperCase()}
          mandatoryInSearch: False
          excludeFromSearch: True
    
    - label: Object.Identity_Card
      name: cpf
      props:
        - name: Object.Identity_Card.Id_Value
          val: ${Tax_Number?.replaceAll('[^0-9]','')}
          mandatoryInSearch: True
        - name: Object.Identity_Card.Id_Type
          val: CPF
          mandatoryInSearch: False
          excludeFromSearch: True
    
    - label: Person.Organisation
      condition: ${Company_Name_1?.trim()?.length() > 0}
      props:
        - name: Person.Organisation.Name
          val: ${Company_Name_1?.trim()?.toUpperCase()}
          mandatoryInSearch: True
        - name: Person.Organisation.Id
          val: ${Tax_Number?.replaceAll('[^0-9]','')}
          mandatoryInSearch: True
        - name: Person.Organisation.Registration_Number
          val: ${Tax_Number?.replaceAll('[^0-9]','')}
          mandatoryInSearch: True
    
    - label: Object.Phone_Number
      name: telephone
      condition: ${Telephone_no_?.replaceAll('[^0-9]', '')?.length() > 0}
      props:
        - name: Object.Phone_Number.Raw
          val: ${Telephone_no_}
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Object.Phone_Number.Numbers_Only
          val: ${(Telephone_no_?.replaceAll('[^0-9]', '')?:'00000000')}
          mandatoryInSearch: False
          type: "[Ljava.lang.String;"
          excludeFromSearch: True
        - name: Object.Phone_Number.Last_7_Digits
          val: ${(((Telephone_no_?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}
          mandatoryInSearch: True
          type: "[Ljava.lang.String;"
    
    - label: Object.Phone_Number
      name: mobile
      condition: ${Mobile_Number?.replaceAll('[^0-9]', '')?.length() > 0}
      props:
        - name: Object.Phone_Number.Raw
          val: ${Mobile_Number}
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Object.Phone_Number.Numbers_Only
          val: ${(Mobile_Number?.replaceAll('[^0-9]', '')?:'00000000')}
          mandatoryInSearch: False
          type: "[Ljava.lang.String;"
          excludeFromSearch: True
        - name: Object.Phone_Number.Last_7_Digits
          val: ${(((Mobile_Number?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}
          mandatoryInSearch: True
          type: "[Ljava.lang.String;"
    
    - label: Location.Address
      props:
        - name: Location.Address.Full_Address
          val: ${Street} ${House_Number} ${Street_2?:''}, ${Region} (${District?:''}), ${City} - ${Country}, ${Postal_Code}
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Location.Address.parser
          val: ${Street} ${House_Number} ${Street_2?:''}, ${Region} (${District?:''}), ${City} - ${Country}, ${Postal_Code}
          mandatoryInSearch: True
          type: "com.pontusvision.utils.LocationAddress"
        - name: Location.Address.Post_Code
          val: ${com.pontusvision.utils.PostCode.format(Postal_Code)}
          mandatoryInSearch: True
    
    - label: Object.Email_Address
      condition: ${E_Mail_Address?.trim()?.length() > 0}
      props:
        - name: Object.Email_Address.Email
          val: ${E_Mail_Address?.trim()?.toLowerCase()}
          mandatoryInSearch: True
    
    - label: Event.Ingestion
      props:
        - name: Event.Ingestion.Type
          val: sap/c@p Customer Prospect
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Event.Ingestion.Operation
          val: Structured Data Insertion
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Event.Ingestion.Domain_b64
          val: ${original_request?.bytes?.encodeBase64()?.toString()}
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Event.Ingestion.Metadata_Create_Date
          val: ${new Date()}
          mandatoryInSearch: False
          type: "java.util.Date"
          excludeFromSearch: True
        - name: Event.Ingestion.Metadata_Update_Date
          val: ${new Date()}
          mandatoryInSearch: False
          type: "java.util.Date"
          excludeFromSearch: True
    
    - label: Event.Group_Ingestion
      props:
        - name: Event.Group_Ingestion.Type
          val: sap/c@p Customer Prospect
          mandatoryInSearch: True
        - name: Event.Group_Ingestion.Operation
          val: Structured Data Insertion
          mandatoryInSearch: True
        - name: Event.Group_Ingestion.Ingestion_Date
          val: ${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}
          mandatoryInSearch: True
    
    - label: Object.Data_Source
      props:
        - name: Object.Data_Source.Name
          val: SAP/C@P CUSTOMER PROSPECT
          mandatoryInSearch: True
    
    - label: Event.Consent
      name: mail_consent
      condition: ${Mail_Consent?.trim()?.length() > 0}
      props:
        - name: Event.Consent.Created_By
          val: ${Created_By?.trim()}
          mandatoryInSearch: True
        - name: Event.Consent.Changed_By
          val: ${Changed_by?.trim()}
          mandatoryInSearch: True
        - name: Event.Consent.Metadata.Create_Date
          val: ${Created_on?.replaceAll('\\.','/')?.trim()?:'01/01/1666'}
          mandatoryInSearch: True
          type: "java.util.Date"
        - name: Event.Consent.Metadata.Update_Date
          val: ${Changed_on?.replaceAll('\\.','/')?.trim()?:'01/01/1666'}
          mandatoryInSearch: True
          type: "java.util.Date"
        - name: Event.Consent.Description
          val: Mail Consent
          mandatoryInSearch: True
        - name: Event.Consent.Status
          val: ${Mail_Consent?.trim()?.equals('Y')?'Consent':'No Consent'}
          mandatoryInSearch: True
        - name: Event.Consent.Customer_ID
          val: ${Tax_Number?.replaceAll('[^0-9]', '')}
          mandatoryInSearch: True
    
    - label: Event.Consent
      name: email_consent
      condition: ${E_Mail_Consent?.trim()?.length() > 0}
      props:
        - name: Event.Consent.Created_By
          val: ${Created_By?.trim()}
          mandatoryInSearch: True
        - name: Event.Consent.Changed_By
          val: ${Changed_by?.trim()}
          mandatoryInSearch: True
        - name: Event.Consent.Metadata.Create_Date
          val: ${Created_on?.replaceAll('\\.','/')?.trim()?:'01/01/1666'}
          mandatoryInSearch: True
          type: "java.util.Date"
        - name: Event.Consent.Metadata.Update_Date
          val: ${Changed_on?.replaceAll('\\.','/')?.trim()?:'01/01/1666'}
          mandatoryInSearch: True
          type: "java.util.Date"
        - name: Event.Consent.Description
          val: E-Mail Consent
          mandatoryInSearch: True
        - name: Event.Consent.Status
          val: ${E_Mail_Consent?.trim()?.equals('Y')?'Consent':'No Consent'}
          mandatoryInSearch: True
        - name: Event.Consent.Customer_ID
          val: ${Tax_Number?.replaceAll('[^0-9]', '')}
          mandatoryInSearch: True
    
    - label: Event.Consent
      name: telephone_consent
      condition: ${Telephone_Consent?.trim()?.length() > 0}
      props:
        - name: Event.Consent.Created_By
          val: ${Created_By?.trim()}
          mandatoryInSearch: True
        - name: Event.Consent.Changed_By
          val: ${Changed_by?.trim()}
          mandatoryInSearch: True
        - name: Event.Consent.Metadata.Create_Date
          val: ${Created_on?.replaceAll('\\.','/')?.trim()?:'01/01/1666'}
          mandatoryInSearch: True
          type: "java.util.Date"
        - name: Event.Consent.Metadata.Update_Date
          val: ${Changed_on?.replaceAll('\\.','/')?.trim()?:'01/01/1666'}
          mandatoryInSearch: True
          type: "java.util.Date"
        - name: Event.Consent.Description
          val: Telephone Consent
          mandatoryInSearch: True
        - name: Event.Consent.Status
          val: ${Telephone_Consent?.trim()?.equals('Y')?'Consent':'No Consent'}
          mandatoryInSearch: True
        - name: Event.Consent.Customer_ID
          val: ${Tax_Number?.replaceAll('[^0-9]', '')}
          mandatoryInSearch: True
    
    - label: Event.Consent
      name: fax_sms_consent
      condition: ${Fax_SMS_Consent?.trim()?.length() > 0}
      props:
        - name: Event.Consent.Created_By
          val: ${Created_By?.trim()}
          mandatoryInSearch: True
        - name: Event.Consent.Changed_By
          val: ${Changed_by?.trim()}
          mandatoryInSearch: True
        - name: Event.Consent.Metadata.Create_Date
          val: ${Created_on?.replaceAll('\\.','/')?.trim()?:'01/01/1666'}
          mandatoryInSearch: True
          type: "java.util.Date"
        - name: Event.Consent.Metadata.Update_Date
          val: ${Changed_on?.replaceAll('\\.','/')?.trim()?:'01/01/1666'}
          mandatoryInSearch: True
          type: "java.util.Date"
        - name: Event.Consent.Description
          val: Fax/SMS Consent
          mandatoryInSearch: True
        - name: Event.Consent.Status
          val: ${Fax_SMS_Consent?.trim()?.equals('Y')?'Consent':'No Consent'}
          mandatoryInSearch: True
        - name: Event.Consent.Customer_ID
          val: ${Tax_Number?.replaceAll('[^0-9]', '')}
          mandatoryInSearch: True
    
    - label: Event.Consent
      name: social_media_consent
      condition: ${Social_Media_Consent?.trim()?.length() > 0}
      props:
        - name: Event.Consent.Created_By
          val: ${Created_By?.trim()}
          mandatoryInSearch: True
        - name: Event.Consent.Changed_By
          val: ${Changed_by?.trim()}
          mandatoryInSearch: True
        - name: Event.Consent.Metadata.Create_Date
          val: ${Created_on?.replaceAll('\\.','/')?.trim()?:'01/01/1666'}
          mandatoryInSearch: True
          type: "java.util.Date"
        - name: Event.Consent.Metadata.Update_Date
          val: ${Changed_on?.replaceAll('\\.','/')?.trim()?:'01/01/1666'}
          mandatoryInSearch: True
          type: "java.util.Date"
        - name: Event.Consent.Description
          val: Social Media Consent
          mandatoryInSearch: True
        - name: Event.Consent.Status
          val: ${Social_Media_Consent?.trim()?.equals('Y')?'Consent':'No Consent'}
          mandatoryInSearch: True
        - name: Event.Consent.Customer_ID
          val: ${Tax_Number?.replaceAll('[^0-9]', '')}
          mandatoryInSearch: True

  edges:
  - label: Has_Ingestion_Event
    fromVertexLabel: Object.Data_Source
    toVertexLabel: Event.Group_Ingestion
  - label: Has_Ingestion_Event
    fromVertexLabel: Event.Group_Ingestion
    toVertexLabel: Event.Ingestion
  - label: Has_Ingestion_Event
    fromVertexLabel: Person.Natural
    toVertexLabel: Event.Ingestion
  - label: Has_Ingestion_Event
    fromVertexName: mail_consent
    toVertexLabel: Event.Ingestion
  - label: Has_Ingestion_Event
    fromVertexName: email_consent
    toVertexLabel: Event.Ingestion
  - label: Has_Ingestion_Event
    fromVertexName: telephone_consent
    toVertexLabel: Event.Ingestion
  - label: Has_Ingestion_Event
    fromVertexName: fax_sms_consent
    toVertexLabel: Event.Ingestion
  - label: Has_Ingestion_Event
    fromVertexName: social_media_consent
    toVertexLabel: Event.Ingestion
  - label: Is_Located
    fromVertexLabel: Person.Natural
    toVertexLabel: Location.Address
  - label: Has_Phone
    fromVertexLabel: Person.Natural
    toVertexName: telephone
  - label: Has_Phone
    fromVertexLabel: Person.Natural
    toVertexName: mobile
  - label: Uses_Email
    fromVertexLabel: Person.Natural
    toVertexLabel: Object.Email_Address
  - label: Works
    fromVertexLabel: Person.Natural
    toVertexLabel: Person.Organisation
  - label: Has_Id_Card
    fromVertexLabel: Person.Natural
    toVertexName: cpf
  - label: Has_Consent
    fromVertexLabel: Person.Natural
    toVertexName: mail_consent
  - label: Has_Consent
    fromVertexLabel: Person.Natural
    toVertexName: email_consent
  - label: Has_Consent
    fromVertexLabel: Person.Natural
    toVertexName: telephone_consent
  - label: Has_Consent
    fromVertexLabel: Person.Natural
    toVertexName: fax_sms_consent
  - label: Has_Consent
    fromVertexLabel: Person.Natural
    toVertexName: social_media_consent

