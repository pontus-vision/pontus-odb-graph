{
  "updatereq": {
    "vertices": [
      {
        "label": "Person.Natural",
        "props": [
          {
            "name": "Person.Natural.Full_Name",
            "val": "${FirstName?.toUpperCase()?.trim()} ${LastName?.toUpperCase()?.trim()}",
            "predicate": "eq",
            "mandatoryInSearch": true
          },
          {
            "name": "Person.Natural.Full_Name_fuzzy",
            "val": "${FirstName?.toUpperCase()?.trim()} ${LastName?.toUpperCase()?.trim()}",
            "mandatoryInSearch": false,
            "excludeFromSearch": true
          },
          {
            "name": "Person.Natural.Last_Name",
            "val": "${LastName?.toUpperCase()?.trim()}",
            "mandatoryInSearch": true,
            "excludeFromSubsequenceSearch": true
          },
          {
            "name": "Person.Natural.Date_Of_Birth",
            "val": "${Birthdate?:'1666-01-01'}",
            "mandatoryInSearch": true,
            "excludeFromSubsequenceSearch": true,
            "type": "java.util.Date"
          },
          {
            "name": "Person.Natural.Title",
            "val": "${Title?:Salutation?:''}",
            "mandatoryInSearch": false,
            "excludeFromSearch": true
          },
          {
            "name": "Person.Natural.Nationality",
            "val": "${MailingCountry?:'Unknown'}",
            "mandatoryInSearch": false,
            "excludeFromSearch": true
          },
          {
            "name": "Person.Natural.Customer_ID",
            "val": "${Id}",
            "mandatoryInSearch": true
          },
          {
            "name": "Person.Natural.Gender",
            "val": "Unknown",
            "mandatoryInSearch": true,
            "excludeFromSubsequenceSearch": true
          },
          {
            "name": "Person.Natural.Type",
            "val": "${Tipo__c?Tipo__c.toLowerCase():'leads'}",
            "mandatoryInSearch": true,
            "excludeFromSubsequenceSearch": true
          }
        ]
      },
      {
        "label": "Object.Identity_Card",
        "condition": "${ (CPF__c != null) && ! (CPF__c.isEmpty())}",
        "props": [
          {
            "name": "Object.Identity_Card.Id_Type",
            "val": "CPF",
            "mandatoryInSearch": false,
            "excludeFromSearch": true
          },
          {
            "name": "Object.Identity_Card.Id_Value",
            "val": "${CPF__c.replaceAll('[^0-9]','')}",
            "mandatoryInSearch": true
          }
        ]
      },
      {
        "label": "Location.Address",
        "props": [
          {
            "name": "Location.Address.Full_Address",
            "val": "${ ( (MailingStreet?:'')+ '\\\\n' + (MailingCity?:'') + '\\\\n' + (MailingState?:'') + '\\\\n' + (MailingCountry?:'')).replaceAll('\\\\n', ' ') }",
            "mandatoryInSearch": true
          },
          {
            "name": "Location.Address.parser",
            "val": "${ ( (MailingStreet?:'')+ '\\\\n' + (MailingCity?:'') + '\\\\n' + (MailingState?:'') + '\\\\n' + (MailingCountry?:'')).replaceAll('\\\\n', ' ') }",
            "mandatoryInSearch": false,
            "type": "com.pontusvision.utils.LocationAddress",
            "excludeFromSearch": true
          },
          {
            "name": "Location.Address.Post_Code",
            "val": "${com.pontusvision.utils.PostCode.format(MailingPostalCode)}",
            "mandatoryInSearch": false,
            "excludeFromSearch": true
          }
        ]
      },
      {
        "label": "Object.Email_Address",
        "props": [
          {
            "name": "Object.Email_Address.Email",
            "val": "${Email?.trim()?.toLowerCase()}",
            "mandatoryInSearch": true
          }
        ]
      },
      {
        "label": "Object.Phone_Number",
        "props": [
          {
            "name": "Object.Phone_Number.Raw",
            "val": "${Phone}",
            "mandatoryInSearch": true
          },
          {
            "name": "Object.Phone_Number.Type",
            "val": "Work",
            "mandatoryInSearch": true,
            "excludeFromSubsequenceSearch": true
          },
          {
            "name": "Object.Phone_Number.Numbers_Only",
            "val": "${(Phone?.replaceAll('[^0-9]', '')?:'00000000')}",
            "mandatoryInSearch": false,
            "type": "[Ljava.lang.String;",
            "excludeFromSearch": true
          },
          {
            "name": "Object.Phone_Number.Last_7_Digits",
            "val": "${(((Phone?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}",
            "mandatoryInSearch": true,
            "type": "[Ljava.lang.String;"
          }
        ]
      },
      {
        "label": "Object.Data_Source",
        "props": [
          {
            "name": "Object.Data_Source.Name",
            "val": "salesforce.com",
            "mandatoryInSearch": true
          },
          {
            "name": "Object.Data_Source.Type",
            "val": "salesforce.com",
            "mandatoryInSearch": true
          },
          {
            "name": "Object.Data_Source.Description",
            "val": "Salesforce.com CRM system data",
            "mandatoryInSearch": true
          }
        ]
      },
      {
        "label": "Event.Group_Ingestion",
        "props": [
          {
            "name": "Event.Group_Ingestion.Type",
            "val": "Salesforce CRM System",
            "mandatoryInSearch": true
          },
          {
            "name": "Event.Group_Ingestion.Operation",
            "val": "Structured Data Insertion",
            "mandatoryInSearch": true
          },
          {
            "name": "Event.Group_Ingestion.Ingestion_Date",
            "val": "${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}",
            "mandatoryInSearch": true
          }
        ]
      },
      {
        "label": "Event.Ingestion",
        "props": [
          {
            "name": "Event.Ingestion.Type",
            "val": "Salesforce CRM System",
            "mandatoryInSearch": false,
            "excludeFromSearch": true
          },
          {
            "name": "Event.Ingestion.Operation",
            "val": "Structured Data Insertion",
            "mandatoryInSearch": false,
            "excludeFromSearch": true
          },
          {
            "name": "Event.Ingestion.Domain_b64",
            "val": "${original_request?.bytes?.encodeBase64()?.toString()}",
            "mandatoryInSearch": false,
            "excludeFromSearch": true
          },
          {
            "name": "Event.Ingestion.Metadata_Create_Date",
            "val": "${new Date()}",
            "mandatoryInSearch": false,
            "type": "java.util.Date",
            "excludeFromSearch": true
          }
        ]
      },
      {
        "label": "Event.Consent",
        "props": [
          {
            "name": "Event.Consent.Status",
            "val": "Consentimento",
            "mandatoryInSearch": false,
            "excludeFromSearch": true
          },
          {
            "name": "Event.Consent.Date",
            "val": "${new Date()}",
            "mandatoryInSearch": false,
            "type": "java.util.Date",
            "excludeFromSearch": true
          }
        ]
      },
      {
        "label": "Object.Privacy_Notice",
        "props": [
          {
            "name": "Object.Privacy_Notice.Who_Is_Collecting",
            "val": [
              "CRM System"
            ],
            "mandatoryInSearch": true
          }
        ]
      }
    ],
    "edges": [
      {
        "label": "Uses_Email",
        "fromVertexLabel": "Person.Natural",
        "toVertexLabel": "Object.Email_Address"
      },
      {
        "label": "Has_Id_Card",
        "fromVertexLabel": "Person.Natural",
        "toVertexLabel": "Object.Identity_Card"
      },
      {
        "label": "Has_Phone",
        "fromVertexLabel": "Person.Natural",
        "toVertexLabel": "Object.Home_Phone_Number"
      },
      {
        "label": "Has_Phone",
        "fromVertexLabel": "Person.Natural",
        "toVertexLabel": "Object.Phone_Number"
      },
      {
        "label": "Lives",
        "fromVertexLabel": "Person.Natural",
        "toVertexLabel": "Location.Address"
      },
      {
        "label": "Has_Ingestion_Event",
        "fromVertexLabel": "Person.Natural",
        "toVertexLabel": "Event.Ingestion"
      },
      {
        "label": "Has_Ingestion_Event",
        "fromVertexLabel": "Event.Group_Ingestion",
        "toVertexLabel": "Event.Ingestion"
      },
      {
        "label": "Has_Ingestion_Event",
        "fromVertexLabel": "Object.Data_Source",
        "toVertexLabel": "Event.Group_Ingestion"
      },
      {
        "label": "Consent",
        "fromVertexLabel": "Person.Natural",
        "toVertexLabel": "Event.Consent"
      },
      {
        "label": "Has_Privacy_Notice",
        "fromVertexLabel": "Event.Consent",
        "toVertexLabel": "Object.Privacy_Notice"
      }
    ]
  }
}
