# DO NOT UPDATE THIS FILE MANUALLY; ANY CHANGES WILL BE OVERRIDDEN BY THE J2 DIR TEMPLATES
updatereq:
  vertices:
    
    - label: Person_Natural
      props:
        - name: Person_Natural_Full_Name
          val: ${First_Name?.trim()?.toUpperCase()} ${Last_Name?.trim()?.toUpperCase()}
          mandatoryInSearch: True
        - name: Person_Natural_Title
          val: ${Title}
          mandatoryInSearch: False
          excludeFromSearch: True
    
    - label: Person_Organisation
      name: own_company
      condition: ${Company_Name_1?.trim()?.length() > 0}
      props:
        - name: Person_Organisation_Name
          val: ${Company_Name_1?.trim()?.toUpperCase()}
          mandatoryInSearch: True
    
    - label: Person_Organisation
      props:
        - name: Person_Organisation_Form_Id
          val: ${Responsible_Dealer?.replaceAll('[^0-9]', '')}
          mandatoryInSearch: True
        - name: Person_Organisation_Name
          val: ${Resp__Sales_Dealer?.trim()?.toUpperCase()}
          mandatoryInSearch: False
          excludeFromSearch: True
    
    - label: Object_Phone_Number
      name: telephone
      condition: ${Telephone_no_?.replaceAll('[^0-9]', '')?.length() > 0}
      props:
        - name: Object_Phone_Number_Raw
          val: ${Telephone_no_}
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Object_Phone_Number_Numbers_Only
          val: ${(Telephone_no_?.replaceAll('[^0-9]', '')?:'00000000')}
          mandatoryInSearch: False
          type: "[Ljava.lang.String;"
          excludeFromSearch: True
        - name: Object_Phone_Number_Last_7_Digits
          val: ${(((Telephone_no_?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}
          mandatoryInSearch: True
          type: "[Ljava.lang.String;"
    
    - label: Object_Phone_Number
      name: mobile
      condition: ${Mobile_Number?.replaceAll('[^0-9]', '')?.length() > 0}
      props:
        - name: Object_Phone_Number_Raw
          val: ${Mobile_Number}
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Object_Phone_Number_Numbers_Only
          val: ${(Mobile_Number?.replaceAll('[^0-9]', '')?:'00000000')}
          mandatoryInSearch: False
          type: "[Ljava.lang.String;"
          excludeFromSearch: True
        - name: Object_Phone_Number_Last_7_Digits
          val: ${(((Mobile_Number?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}
          mandatoryInSearch: True
          type: "[Ljava.lang.String;"
    
    - label: Location_Address
      props:
        - name: Location_Address_Full_Address
          val: ${Street?:''}, ${Street_2?:''}, ${House_Number?:'S/N'}, ${Addresstype?:''} ${Address_Number?:''}, ${District?:''}. CEP ${Postal_Code?:'S/N'}. ${City?:''}, ${Region_Desc_?:''}, ${Region?:''} - ${Country?:''}
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Location_Address_parser
          val: ${Street?:''}, ${Street_2?:''}, ${House_Number?:'S/N'}, ${Addresstype?:''} ${Address_Number?:''}, ${District?:''}. CEP ${Postal_Code?:'S/N'}. ${City?:''}, ${Region_Desc_?:''}, ${Region?:''} - ${Country?:''}
          mandatoryInSearch: True
          type: "com.pontusvision.utils.LocationAddress"
        - name: Location_Address_Post_Code
          val: ${com.pontusvision.utils.PostCode.format(Postal_Code)}
          mandatoryInSearch: True
    
    - label: Event_Complaint
      props:
        - name: Event_Complaint_Id
          val: ${Transaction_Number}
          mandatoryInSearch: True
        - name: Event_Complaint_Date
          val: ${Opened}
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Event_Complaint_Description
          val: ${Description}
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Event_Complaint_Status
          val: ${Status}
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Event_Complaint_Type
          val: SAP/C@P Complaint
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Event_Complaint_Expiry
          val: ${Due_Date}
          mandatoryInSearch: False
          excludeFromSearch: True
    
    - label: Object_Email_Address
      condition: ${E_Mail_Address?.trim()?.length() > 0}
      props:
        - name: Object_Email_Address_Email
          val: ${E_Mail_Address?.trim()?.toLowerCase()}
          mandatoryInSearch: True
    
    - label: Event_Ingestion
      props:
        - name: Event_Ingestion_Type
          val: sap/c@p Complaint
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Event_Ingestion_Operation
          val: Structured Data Insertion
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Event_Ingestion_Domain_b64
          val: ${original_request?.bytes?.encodeBase64()?.toString()}
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Event_Ingestion_Metadata_Create_Date
          val: ${new Date()}
          mandatoryInSearch: False
          type: "java.util.Date"
          excludeFromSearch: True
        - name: Event_Ingestion_Metadata_Update_Date
          val: ${new Date()}
          mandatoryInSearch: False
          type: "java.util.Date"
          excludeFromSearch: True
    
    - label: Event_Group_Ingestion
      props:
        - name: Event_Group_Ingestion_Type
          val: sap/c@p Complaint
          mandatoryInSearch: True
        - name: Event_Group_Ingestion_Operation
          val: Structured Data Insertion
          mandatoryInSearch: True
        - name: Event_Group_Ingestion_Ingestion_Date
          val: ${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}
          mandatoryInSearch: True
    
    - label: Object_Data_Source
      props:
        - name: Object_Data_Source_Name
          val: SAP/C@P COMPLAINT
          mandatoryInSearch: True

  edges:
  - label: Has_Ingestion_Event
    fromVertexLabel: Object_Data_Source
    toVertexLabel: Event_Group_Ingestion
  - label: Has_Ingestion_Event
    fromVertexLabel: Event_Group_Ingestion
    toVertexLabel: Event_Ingestion
  - label: Has_Ingestion_Event
    fromVertexLabel: Person_Natural
    toVertexLabel: Event_Ingestion
  - label: Is_Located
    fromVertexLabel: Person_Natural
    toVertexLabel: Location_Address
  - label: Has_Phone
    fromVertexLabel: Person_Natural
    toVertexName: telephone
  - label: Has_Mobile
    fromVertexLabel: Person_Natural
    toVertexName: mobile
  - label: Uses_Email
    fromVertexLabel: Person_Natural
    toVertexLabel: Object_Email_Address
  - label: Has_Complaint
    fromVertexLabel: Person_Natural
    toVertexLabel: Event_Complaint
  - label: Works
    fromVertexLabel: Person_Natural
    toVertexName: own_company
  - label: Is_Client
    fromVertexLabel: Person_Natural
    toVertexName: other_company

