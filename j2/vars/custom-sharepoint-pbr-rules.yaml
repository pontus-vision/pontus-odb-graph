rules:
# TODO: add more ? operator to handle empty/null values
  sharepoint_pbr_fontes_de_dados:
    vertices:
      - label: Object_Data_Source
        name: sharepoint_pbr
        props:
          Name: SHAREPOINT/PBR/FONTES-DE-DADOS

      - label: Object_Data_Source
        condition: "${Descri_x00e7__x00e3_o?.trim()?.length() > 0}" # why we are using the description field as condition?
        name: fontes_de_dados
        props:
          Form_Id: "${id}"
          Name:
            val: "${Title?.trim()?.toUpperCase()}"
            excludeFromSearch: true
          Description:
            val: "${Descri_x00e7__x00e3_o?.trim()?.toUpperCase()}"
            excludeFromSearch: true
          Engine:
            val: "${Sistema}"
            excludeFromSearch: true
          Type:
            val: "${TipoSistema}"
            excludeFromSearch: true
          Domain:
            val: "${Tabela}"
            excludeFromSearch: true
          URI_Delete:
            val: "${URLPrefixoDelete}"
            excludeFromSearch: true
          URI_Update:
            val: "${URLPrefixoUpdate}"
            excludeFromSearch: true
          URI_Read:
            val: "${URLPrefixoRead}"
            excludeFromSearch: true

      - label: Object_System
        props:
          Name: "${Sistema?.trim()?.toUpperCase()}"

      - label: Object_Subsystem
        props:
          Name: "${TipoSistema?.trim()?.toUpperCase()}"

      - label: Object_Module
        props:
          Name: "${Tabela?.trim()?.toLowerCase()}"

      - label: Object_Sensitive_Data
        props:
          Description:
            val: "${new groovy.json.JsonBuilder(DadosPessoais)}"
            type: "[Ljava.lang.String;"
            postProcessor: "${it?.toUpperCase()?.trim()}"
            processAll: true

      - label: Object_Data_Policy
        props:
          Update_Frequency: "${Frequ_x00ea_nciadeAtualiza_x00e7}"
          Retention_Period: "${Pol_x00ed_ticadeReten_x00e7__x00}"
          Type: "${Title?.trim()?.toUpperCase()}"

      - label: Event_Ingestion
        props:
          Type:
            val: sharepoint/pbr/fontes-de-dados
            excludeFromSearch: true
          Operation:
            val: Structured Data Insertion
            excludeFromSearch: true
          Domain_b64:
            val: "${original_request?.bytes?.encodeBase64()?.toString()}"
            excludeFromSearch: true
          Metadata_Create_Date:
            val: "${Created}"
            excludeFromSearch: true
            type: java.util.Date
          Metadata_Update_Date:
            val: "${Modified}"
            excludeFromSearch: true
            type: java.util.Date

      - label: Event_Group_Ingestion
        props:
          Type: sharepoint/pbr/fontes-de-dados
          Operation: Structured Data Insertion
          Ingestion_Date: "${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}"

    edges:
      - label: "Has_Ingestion_Event"
        fromVertexName: "sharepoint_pbr"
        toVertexLabel: "Event_Group_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Event_Group_Ingestion"
        toVertexLabel: "Event_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Event_Ingestion"
        toVertexName: "fontes_de_dados"

      - label: "Has_Policy"
        fromVertexName: "fontes_de_dados"
        toVertexLabel: "Object_Data_Policy"

      - label: "Has_Sensitive_Data"
        fromVertexName: "fontes_de_dados"
        toVertexLabel: "Object_Sensitive_Data"

      - label: "Has_Module"
        fromVertexName: "fontes_de_dados"
        toVertexLabel: "Object_Module"

      - label: "Has_Subsystem"
        fromVertexLabel: "Object_Module"
        toVertexLabel: "Object_Subsystem"

      - label: "Has_System"
        fromVertexLabel: "Object_Subsystem"
        toVertexLabel: "Object_System"

  sharepoint_pbr_ropa:

    vertices:

      - label: Person_Organisation
        condition: "${InformarCNPJ?.trim()?.length() > 0 && InformarCNPJ?.replaceAll('[^0-9]','')?.length() == 14}"
        name: pj_national
        props:
          Id: "${InformarCNPJ?.replaceAll('[^0-9]','')}"
          Registration_Number: "${InformarCNPJ?.replaceAll('[^0-9]','')}"

      - label: Person_Organisation
        condition: "${InformarCNPJouqualqueroutroregis?.trim()?.length() > 0}"
        name: pj_international
        props:
          Id: "${InformarCNPJouqualqueroutroregis?.replaceAll('[^0-9]','')}"
          Registration_Number: "${InformarCNPJouqualqueroutroregis?.replaceAll('[^0-9]','')}"

      - label: Person_Organisation
#       TODO: needs condition ?!?!
        name: pbr
        props:
          Id: "${CNPJ_PBR?.replaceAll('[^0-9]','')}"
          Registration_Number: "${CNPJ_PBR?.replaceAll('[^0-9]','')}"
          Name:
            val: "${NAME_PBR?.toUpperCase()?.trim()}"
            excludeFromSearch: true

      - label: Object_Data_Source
        name: sharepoint
        props:
          Name: "SHAREPOINT/PBR/ROPA"

      - label: Object_Data_Source
#       TODO: needs conditions ?!?!
        name: attached_data_sources
        props:
          Form_Id:
            val: "${new groovy.json.JsonBuilder(RoPA_x0020_84_x0020__x002d__x002)}"
            type: "[Lcom.pontusvision.utils.SharepointRef;"
            postProcessor: "${com.pontusvision.utils.SharepointRef.fromString(it)?.getLookupId()}"
            processAll: true
          Medium:
            val: "${Identifiqueouespecifiqueomeio_x0?.trim()?.toUpperCase() + ' ' + Identifiqueouespecifiqueomeio_x00?.trim()?.toUpperCase() + ' ' + Identifiqueouespecifiqueomeio_x02?.trim()?.toUpperCase()}"
            excludeFromSearch: true

      - label: Object_Data_Source
#       TODO: needs condition ?!?!
        name: hard_docs
        props:
          Form_Id: "${id}"
#          Description:
          Medium:
            val: "${Especificarosmeiosutilizadospara}"
            excludeFromSearch: true

#     Terceiros (third parties) are resolved with Contracts
      - label: Object_Data_Source
        condition: "${InformarCNPJ?.trim()?.length() > 0 && InformarCNPJ?.replaceAll('[^0-9]','')?.length() == 14}"
        name: contract_source_national
        props:
          Form_Id:
            val: "${new groovy.json.JsonBuilder(Comoosdadospessoaiss_x00e3_ocole1)}"
            type: "[Lcom.pontusvision.utils.SharepointRef;"
            postProcessor: "${com.pontusvision.utils.SharepointRef.fromString(it)?.getLookupId()}"
            processAll: true
          Medium:
            val: "${(Identifiqueouespecifiqueomeio_x01)?.trim()?.toUpperCase()}"
            excludeFromSearch: true

      - label: Object_Data_Source
        condition: "${InformarCNPJouqualqueroutroregis?.trim()?.length() > 0}"
        name: contract_source_international
        props:
          Form_Id:
            val: "${new groovy.json.JsonBuilder(Comoosdadospessoaiss_x00e3_ocole1)}"
            type: "[Lcom.pontusvision.utils.SharepointRef;"
            postProcessor: "${com.pontusvision.utils.SharepointRef.fromString(it)?.getLookupId()}"
            processAll: true
          Medium:
            val: "${(Identifiqueouespecifiqueomeio_x0)?.trim()?.toUpperCase()}"
            excludeFromSearch: true

      - label: Object_Contract
#       TODO: needs condition ?!?!
        name: contract_national
        props:
          Form_Id: "${id}"
          Info_Shared_With_Third_Parties:
            val: "${Odado_x00e9_armazenadopelotercei?.toUpperCase()}"
            excludeFromSearch: true
          Registration_Number:
            val: "${InformarCNPJ?.replaceAll('[^0-9]','')}"
#          Short_Description:
#            val: "${}"
#            excludeFromSearch: true
          Name:
            val: "${Emcasodetratamentooucompartilham?.trim()?.toUpperCase()}"
            excludeFromSearch: true
#          Expiry:
#          Status:
#          Type:

      - label: Object_Contract
#       TODO: needs condition ?!?!
        name: contract_international
        props:
          Form_Id: "${id}"
          Name:
            val: "${Emcasodetransfer_x00ea_nciainter?.trim()?.toUpperCase()}"
            excludeFromSearch: true
          Registration_Number:
            val: "${InformarCNPJouqualqueroutroregis?.replaceAll('[^0-9]','')}"
            excludeFromSearch: true
          Info_Shared_With_Third_Parties:
            val: "${Odado_x00e9_armazenadopelotercei0?.trim()?.toUpperCase()}"
            excludeFromSearch: true
          Description:
            val: "${Qual_x00e9_afinalidadedatransfer?.toUpperCase()}"
            excludeFromSearch: true
#          Short_Description:
#            val: "${}"
#            excludeFromSearch: true
          Intl_Transfer:
            val: "${Identificaropa_x00ed_semqueoTerc?.toUpperCase()}"  # RoPA 80 - Identificar o país em que o Terceiro está localizado
            excludeFromSearch: true
#          Expiry:
#          Status:
#          Type:

      - label: Object_Data_Procedures # = RoPA = Mapeamento de Processos
        props:
          Form_Id: "${id}"
          ID:
            val: "${Title?.trim()?.toUpperCase()}"
            excludeFromSearch: true
          Business_Area_Responsible:
            val: "${_x00c1_readeNeg_x00f3_cio}"
            excludeFromSearch: true
          Type:
            val: "${RoPA_x0020_0_x0020__x002d__x0020}" # Really to EXCLUDE THIS ?!
            excludeFromSearch: true
          Macro_Process_Name:
            val: "${Processo}"
            excludeFromSearch: true
          Description:
            val: "${Descri_x00e7__x00e3_odoProcesso?.trim()?.toUpperCase()}"
            excludeFromSearch: true
          Info_Collected:
            val: "${Quaiss_x00e3_oosdadospessoaistra + Quaiss_x00e3_oosdadossens_x00ed_ + Quaiss_x00e3_oosdadosdecrian_x00}"
            excludeFromSearch: true
          Type_Of_Natural_Person:
            val: "${Quems_x00e3_oostitularesdosdados}"
            excludeFromSearch: true
          Type_Of_Natural_Person_Sensitive_Data:
            val: "${Quems_x00e3_oostitularesdosdados0}"
            excludeFromSearch: true
          Type_Of_Natural_Person_Minors:
            val: "${Quems_x00e3_oostitularesdosdados1}"
            excludeFromSearch: true
#          Type_Of_Natural_Person_International:
#            val: "${Quems_x00e3_oostitularesdestesda0}"
#            excludeFromSearch: true
          Type_Of_Natural_Person_National:
            val: "${Quems_x00e3_oostitularesdestesda}"
            excludeFromSearch: true
          Data_Provider:
            val: "${Quemforneceuosdados_x003f_}"
            excludeFromSearch: true
          Why_Is_It_Collected:
            val: "${Qual_x00e9_afinalidadedotratamen?.trim()?.toUpperCase()}"
            excludeFromSearch: true
          Secondary_Purpose_Of_Collection:
            val: "${Paraqualfinalidadesecund_x00e1_r?.trim()?.toUpperCase()}"
            excludeFromSearch: true
          Country_Where_Stored:
            val: "${Transfer_x00ea_nciainternacional}"
            excludeFromSearch: true
#          Participants:
#            vals: "${Sesim_x002c_especificarquaisoutr}"
#            excludeFromSearch: true
#          Participants_National:
#            val: "${Comquemosdadoss_x00e3_ocompartil}" REALLY GONNA EXCLUDE ?!
#            excludeFromSearch: true
#          Participants_International:
#            vals: "${Especificarparaonde_x00e9_feitoa}"
#            excludeFromSearch: true
          Info_Shared_With_Third_Parties: # This stays here or goes to Object_Contract ?!
            vals: "${Quaiss_x00e3_oostiposdedadospess}"
            excludeFromSearch: true
#          Info_Shared_With_Third_Parties_International:
#            vals: "${Quaiss_x00e3_oostiposdedadospess0}"
#            excludeFromSearch: true
          Info_Share_Justification:
            val: "${Qual_x00e9_afinalidadedocomparti?.trim()?.toUpperCase()}"
            excludeFromSearch: true
          Info_Share_Justification_International:
            val: "${Qual_x00e9_afinalidadedatransfer?.trim()?.toUpperCase()}"
            excludeFromSearch: true
          Number_Of_Natural_Person:
            val: "${Qual_x00e9_quantidadedetitulares} / por ano"
            excludeFromSearch: true
          Number_Of_Natural_Person_National:
            val: "${VolumetriadosTitularesDados}"
            excludeFromSearch: true
          Number_Of_Natural_Person_International:
            val: "${VolumetriadosTitularesDados_x002}"
            excludeFromSearch: true
          Products_And_Services:
            val: "${Informetodososprodutos_x002f_ser?.trim()?.toUpperCase()}"
            excludeFromSearch: true
          Rights:
            val: "${Quaisdestesdireitospodemseratend}"
            excludeFromSearch: true

      - label: Object_Email_Address
        condition: "${Respons_x00e1_vel?.size() > 0}"
        name: responsible
        props:
          Email:
            val: "${new groovy.json.JsonBuilder(Respons_x00e1_vel)}"
            type: "[Lcom.pontusvision.utils.SharepointUserRef;"
            postProcessor: "${com.pontusvision.utils.SharepointUserRef.fromString(it)?.getEmail()?.toLowerCase()?.trim()}"
            processAll: true

      - label: Object_Email_Address
        condition: "${Respons_x00e1_velAlternativo?.size() > 0}"
        name: alt_responsible
        props:
          Email:
            val: "${new groovy.json.JsonBuilder(Respons_x00e1_velAlternativo)}"
            type: "[Lcom.pontusvision.utils.SharepointUserRef;"
            postProcessor: "${com.pontusvision.utils.SharepointUserRef.fromString(it)?.getEmail()?.toLowerCase()?.trim()}"
            processAll: true

      - label: Object_Email_Address
        condition: "${Nome_x0020_do_x0020_Champion_x00?.size() > 0}"
        name: champion
        props:
          Email:
            val: "${new groovy.json.JsonBuilder(Nome_x0020_do_x0020_Champion_x00)}"
            type: "[Lcom.pontusvision.utils.SharepointUserRef;"
            postProcessor: "${com.pontusvision.utils.SharepointUserRef.fromString(it)?.getEmail()?.toLowerCase()?.trim()}"
            processAll: true

      - label: Object_Sensitive_Data
        name: personal_data
        props:
          Description:
            val: "${new groovy.json.JsonBuilder(Quaiss_x00e3_oosdadospessoaistra)}"
            type: "[Ljava.lang.String;"
            postProcessor: "${it?.toUpperCase()?.trim()}"
            processAll: true

      - label: Object_Sensitive_Data
        condition: "${_x00c9_realizadotratamentodedado0 == 'Sim'}"
        name: sensitive_data
        props:
          Description:
            val: "${new groovy.json.JsonBuilder(Quaiss_x00e3_oosdadossens_x00ed_)}"
            type: "[Ljava.lang.String;"
            postProcessor: "${it?.toUpperCase()?.trim()}"
            processAll: true

      - label: Object_Sensitive_Data
        condition: "${_x00c9_realizadotratamentodedado2 == 'Sim'}"
        name: minors_data
        props:
          Description:
            val: "${new groovy.json.JsonBuilder(Quaiss_x00e3_oosdadosdecrian_x00)}"
            type: "[Ljava.lang.String;"
            postProcessor: "${it?.toUpperCase()?.trim()}"
            processAll: true

      - label: Object_Data_Policy
        props:
          Form_Id: "${id}"
          Type:
            val: "${Title?.trim()toUpperCase()}"
            excludeFromSearch: true
          Retention_Period:
            val: "${Qualoper_x00ed_ododereten_x00e7_}"
            excludeFromSearch: true
          Retention_Justification:
            val: "${Qualajustificativaparaoper_x00ed}" # está correto aqui? Ou deve ir para RoPA_Lawful_Basis_Justification ?!
            excludeFromSearch: true
#         PBR não tem campo para Update_Frequency ?!?!
          Uses_Automation:
            val: "${Osdadoss_x00e3_osubmetidos_x00e0}"
            excludeFromSearch: true
          Is_Updated:
            val: "${Osdadoss_x00e3_oatualizadosnotra}"
            excludeFromSearch: true
          Is_Deleted:
            val: "${Ap_x00f3_satingirasfinalidades_x}"
            excludeFromSearch: true
          Is_Essential:
            val: "${Osdadospessoaisidentificadoss_x0}"
            excludeFromSearch: true
          Is_Anonymized:
            val: "${Osdadoss_x00e3_oanonimizadosnotr}"
            excludeFromSearch: true

      - label: Object_Privacy_Notice
        condition: "${H_x00e1_informa_x00e7__x00e3_oao == 'Sim'}"
        props:
          Form_Id: "${id}"
          Metadata_Update_Date:
            val: "${Modified}"
            type: "java.util.Date"
            excludeFromSearch: true
          Metadata_Create_Date:
            val: "${Created}"
            type: "java.util.Date"
            excludeFromSearch: true
          How_Is_It_Collected:
            val: "${Comoosdadospessoaiss_x00e3_ocole + ' ' + Comoosdadospessoaiss_x00e3_ocole0 + ' ' + Comoosdadospessoaiss_x00e3_ocole2}"
#            + '\\\\n' + Identifiqueouespecifiqueomeio_x0 != null ? Identifiqueouespecifiqueomeio_x0 : ''
            excludeFromSearch: true
          Description:
            val: "${Qual_x00e9_omeioadotadoparainfor}"
            excludeFromSearch: true
#         TODO: Test if sharepoint returns empty string when an array field is empty
          Agreements:
            val: "${Quaisdestesdireitospodemseratend}"
            excludeFromSearch: true

      - label: Event_Data_Breach
        condition: "${Houvealgumincidentedeseguran_x00 == 'Sim'}"
        props:
          Form_Id: "${id}"
          Id:
            val: "${Title?.trim()?.toUpperCase()}"
            excludeFromSearch: true
#         ternary operator has to have spaces or can it be all glued?
          Authority_Notified:
            val: "${ropa100=='Sim'?Fornecerosdetalhes_x002c_casopos?.trim()?.toUpperCase():''}"
            excludeFromSearch: true
          Authority_Notified_Others:
            val: "${ropa102=='Sim'?Emcasopositivo_x002c_fornecerosd0?.trim()?.toUpperCase():''}"
            excludeFromSearch: true
          Metadata_Create_Date:
            val: "${Created}"
            type: java.util.Date
            excludeFromSearch: true
          Metadata_Update_Date:
            val: "${Modified}"
            type: java.util.Date
            excludeFromSearch: true
          Description:
            val: "${Emcasopositivo_x002c_fornecerosd?.trim()?.toUpperCase()}"
            excludeFromSearch: true
#          Source:
#          Status:

      - label: Event_Ingestion
        props:
          Type:
            val: "sharepoint/pbr/ropa"
            excludeFromSearch: true
          Operation:
            val: Structured Data Insertion
            excludeFromSearch: true
          Domain_b64:
            val: "${original_request?.bytes?.encodeBase64()?.toString()}"
            excludeFromSearch: true
          Metadata_Create_Date:
            val: "${Created}" # Date COLUMN
            excludeFromSearch: true
            type: java.util.Date
          Metadata_Update_Date:
            val: "${Modified}"
            excludeFromSearch: true
            type: java.util.Date

      - label: Event_Group_Ingestion
        props:
          Type: "sharepoint/pbr/ropa"
          Operation: Structured Data Insertion
          Ingestion_Date: "${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}"

    edges:
      - label: "Has_Ingestion_Event"
        fromVertexName: "sharepoint"
        toVertexLabel: "Event_Group_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Event_Group_Ingestion"
        toVertexLabel: "Event_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Event_Ingestion"
        toVertexName: "Object_Data_Procedures"

      - label: "Has_Personal_Data"
        fromVertexLabel: "Object_Data_Procedures"
        toVertexName: "minors_data"

      - label: "Has_Personal_Data"
        fromVertexLabel: "Object_Data_Procedures"
        toVertexName: "personal_data"

      - label: "Has_Sensitive_Data"
        fromVertexLabel: "Object_Data_Procedures"
        toVertexName: "sensitive_data"

      - label: "Has_Data_Source"
        fromVertexLabel: "Object_Data_Procedures"
        toVertexName: "attached_data_sources"

      - label: "Has_Policy"
        fromVertexLabel: "Object_Data_Procedures"
        toVertexLabel: "Object_Data_Policy"

      - label: "Impacted_By_Data_Breach"
        fromVertexLabel: "Event_Data_Breach"
        toVertexName: "attached_data_sources"

      - label: "Has_Privacy_Notice"
        fromVertexLabel: "Object_Data_Procedures"
        toVertexLabel: "Object_Privacy_Notice"

#     3 below were changed from Person_Natural to Object_Email
      - label: "Is_Responsible"
        fromVertexName: "responsible"
        toVertexLabel: "Object_Data_Procedures"

      - label: "Is_Responsible"
        fromVertexName: "alt_responsible"
        toVertexLabel: "Object_Data_Procedures"

      - label: "Is_Interested_Party"
        fromVertexName: "champion"
        toVertexLabel: "Object_Data_Procedures"

      - label: "Has_Contract"
        fromVertexName: "contract_national"
        toVertexLabel: "Object_Data_Procedures"

      - label: "Has_Contract"
        fromVertexName: "contract_international"
        toVertexLabel: "Object_Data_Procedures"

      - label: "Has_Contract"
        fromVertexName: "pj_national"
        toVertexName: "contract_national"

      - label: "Has_Contract"
        fromVertexName: "pj_international"
        toVertexName: "contract_international"

      - label: "Has_Contract"
        fromVertexName: "pbr"
        toVertexName: "contract_national"

      - label: "Has_Contract"
        fromVertexName: "pbr"
        toVertexName: "contract_international"

      - label: "Has_Data_Source"
        fromVertexName: "contract_national"
        toVertexName: "contract_source_national"

      - label: "Has_Data_Source"
        fromVertexName: "contract_international"
        toVertexName: "contract_source_international"

# the below rule is used only for testing purposes (testing SharepointUSerRef class)
  sharepoint_pbr_users:
    vertices:
      - label: Person_Natural
        props:
          Form_Id: "${id}"
          Full_Name:
            val: "${name?.toUpperCase()?.trim()}"
            excludeFromSearch: true
          Email:
            val: "${email?.toLowerCase()?.trim()}"
            excludeFromSearch: true

      - label: Object_Data_Source
        props:
          Name: "SHAREPOINT/PBR/USERS"

      - label: Event_Ingestion
        props:
          Type:
            val: "sharepoint/pbr/users"
            excludeFromSearch: true
          Operation:
            val: Structured Data Insertion
            excludeFromSearch: true
          Domain_b64:
            val: "${original_request?.bytes?.encodeBase64()?.toString()}"
            excludeFromSearch: true
          Metadata_Create_Date:
            val: "${Created}"
            excludeFromSearch: true
            type: java.util.Date
          Metadata_Update_Date:
            val: "${Modified}"
            excludeFromSearch: true
            type: java.util.Date

      - label: Event_Group_Ingestion
        props:
          Type: "sharepoint/pbr/users"
          Operation: Structured Data Insertion
          Ingestion_Date: "${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}"

    edges:
      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Object_Data_Source"
        toVertexLabel: "Event_Group_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Event_Group_Ingestion"
        toVertexLabel: "Event_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Event_Group_Ingestion"
        toVertexName: "Person_Natural"

  sharepoint_pbr_juridico:
    vertices:

#     TODO: Check data formatting toUpperCase and others!

      - label: Object_Data_Source
        props:
          Name: "SHAREPOINT/PBR/JURÍDICO"

#     Connecting to my RoPA Vertex and adding 2 new props Data_Processor and Data_Controller
      - label: Object_Data_Procedures
        condition: "${ID_x0020_do_x0020_RoPA?.size() > 0}"
        props:
          Form_Id:
            val: "${new groovy.json.JsonBuilder(ID_x0020_do_x0020_RoPA)}"
            type: "[Lcom.pontusvision.utils.SharepointRef;"
            postProcessor: "${com.pontusvision.utils.SharepointRef.fromString(it)?.getLookupId()}"
            processAll: true
          Data_Processor:
            val:  "${JUR_x0020_6_x0020__x002d__x0020_.contains('Operador')?'PBR':''}"
            excludeFromSearch: true
          Data_Controller:
            val: "${JUR_x0020_6_x0020__x002d__x0020_.contains('Controlador Conjunto')||JUR_x0020_6_x0020__x002d__x0020_.contains('Controlador')?'PBR':''}"
            excludeFromSearch: true
          Lawful_Basis_Justification:
            val: "${JUR_x0020_11_x0020__x002d__x0020}"
            excludeFromSearch: true

      - label: Object_Lawful_Basis
        condition: "${JUR_x0020_8_x0020__x002d__x0020_?.size() > 0}"
        props:
          Description:
            val: "${new groovy.json.JsonBuilder(JUR_x0020_8_x0020__x002d__x0020_)}"
            type: "[Ljava.lang.String;"
            postProcessor: "${it?.toUpperCase()?.trim()}"
            processAll: true

      - label: Event_Ingestion
        props:
          Type:
            val: "sharepoint/pbr/jurídico"
            excludeFromSearch: true
          Operation:
            val: Structured Data Insertion
            excludeFromSearch: true
          Domain_b64:
            val: "${original_request?.bytes?.encodeBase64()?.toString()}"
            excludeFromSearch: true
          Metadata_Create_Date:
            val: "${Created}"
            excludeFromSearch: true
            type: java.util.Date
          Metadata_Update_Date:
            val: "${Modified}"
            excludeFromSearch: true
            type: java.util.Date

      - label: Event_Group_Ingestion
        props:
          Type: "sharepoint/pbr/jurídico"
          Operation: Structured Data Insertion
          Ingestion_Date: "${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}"

    edges:
      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Object_Data_Source"
        toVertexLabel: "Event_Group_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Event_Group_Ingestion"
        toVertexLabel: "Event_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Event_Ingestion"
        toVertexLabel: "Object_Data_Procedures"

      - label: "Has_Lawful_Basis_On"
        fromVertexLabel: "Object_Data_Procedures"
        toVertexLabel: "Object_Lawful_Basis"

  sharepoint_pbr_lia:
    vertices:

      - label: Object_Data_Source
        props:
          Name: "SHAREPOINT/PBR/LIA"

      - label: Object_Legitimate_Interests_Assessment
        props:
          Form_Id: "${id}"
          Benefits:
            val: "${Sesim_x002c_detalharosbenef_x00e}"
            excludeFromSearch: true
          Benefits_Relevance:
            val: "${Qualarelev_x00e2_nciadosbenef_x0}"
            excludeFromSearch: true
          Strategic_Impact:
            val: "${ (Se_x0020_sim_x002c__x0020_descre?Se_x0020_sim_x002c__x0020_descre + '; ':'') + (Quaisasconsequ_x00ea_nciasdan_x0?Quaisasconsequ_x00ea_nciasdan_x0 + '; ':'') + (Sesim_x002c_descrever?:'') }"
            excludeFromSearch: true
          Data_Processing_Justification:
            val: "${Se_x0020_sim_x0020_descrever}"
            excludeFromSearch: true
          Is_Essential:
            val: "Sim" # Or true ... basear no Resultado do LIA ?!?!
            excludeFromSearch: true
          Is_Required:
            val: "Sim" # Or true ... basear no Resultado do LIA ?!?!
            excludeFromSearch: true
          Breach_Of_Subject_Rights_Justification:
            val: "${Se_x0020_sim_x0020__x002d__x0020}"
            excludeFromSearch: true

      - label: Object_Data_Procedures
        condition: "${ID_x0020_do_x0020_Processo?.size() > 0}"
        props:
          Form_Id:
            val: "${new groovy.json.JsonBuilder(ID_x0020_do_x0020_Processo)}"
            type: "[Lcom.pontusvision.utils.SharepointRef;"
            postProcessor: "${com.pontusvision.utils.SharepointRef.fromString(it)?.getLookupId()}"
            processAll: true

      - label: Event_Ingestion
        props:
          Type:
            val: "sharepoint/pbr/lia"
            excludeFromSearch: true
          Operation:
            val: Structured Data Insertion
            excludeFromSearch: true
          Domain_b64:
            val: "${original_request?.bytes?.encodeBase64()?.toString()}"
            excludeFromSearch: true
          Metadata_Create_Date:
            val: "${Created}"
            excludeFromSearch: true
            type: java.util.Date
          Metadata_Update_Date:
            val: "${Modified}"
            excludeFromSearch: true
            type: java.util.Date

      - label: Event_Group_Ingestion
        props:
          Type: "sharepoint/pbr/lia"
          Operation: Structured Data Insertion
          Ingestion_Date: "${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}"

    edges:

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Object_Data_Source"
        toVertexLabel: "Event_Group_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Event_Group_Ingestion"
        toVertexLabel: "Event_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Event_Ingestion"
        toVertexLabel: "Object_Legitimate_Interests_Assessment"

      - label: "Has_Legitimate_Interests_Assessment"
        fromVertexLabel: "Object_Data_Procedures"
        toVertexLabel: "Object_Legitimate_Interests_Assessment"

