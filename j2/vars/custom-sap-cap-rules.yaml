---
rules:
  cap_lead:
    vertices:
      - label: Person_Natural
        props:
          Full_Name: "${First_Name?.trim()?.toUpperCase()} ${Last_Name?.trim()?.toUpperCase()}"
#          Customer_ID: "${Lead_ID}"
#          Type:
#            val: "Leads"
#            excludeFromSearch: true
          Title:
            val: "${Title}"
            excludeFromSearch: true

      - label: Person_Organisation
        condition: "${Company_Name_1?.trim()?.length() > 0}"
        props:
          Name: "${Company_Name_1?.trim()?.toUpperCase()}"
#          Type:
#            val: "Leads"
#            excludeFromSearch: true

      - label: Object_Phone_Number
        condition: "${Telephone_no_?.replaceAll('[^0-9]', '')?.length() > 0}"
        name: telephone
        props:
          Raw:
            val: "${Telephone_no_}"
            excludeFromSearch: true
#          Type:
#            val: "Leads"
#            excludeFromSubsequenceSearch: true
          Numbers_Only:
            val: "${(Telephone_no_?.replaceAll('[^0-9]', '')?:'00000000')}"
            excludeFromSearch: true
            type: "[Ljava.lang.String;"
          Last_7_Digits:
            val: "${(((Telephone_no_?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}"
            type: "[Ljava.lang.String;"

      - label: Object_Phone_Number
        condition: "${Mobile_Number?.replaceAll('[^0-9]', '')?.length() > 0}"
        name: mobile
        props:
          Raw:
            val: "${Mobile_Number}"
            excludeFromSearch: true
#          Type:
#            val: "Leads"
#            excludeFromSubsequenceSearch: true
          Numbers_Only:
            val: "${(Mobile_Number?.replaceAll('[^0-9]', '')?:'00000000')}"
            excludeFromSearch: true
            type: "[Ljava.lang.String;"
          Last_7_Digits:
            val: "${(((Mobile_Number?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}"
            type: "[Ljava.lang.String;"

      - label: Location_Address
#        condition: "${Company_Name_1?.trim()?.length() > 0}"
        props:
          Full_Address:
            val: "${Street} ${House_Number} ${Street_2?:''}, ${City}, ${Region_Desc_} (${Region}) - ${Country}, ${Postal_Code}"
            excludeFromSearch: true
#          Type:
#            val: "Business"
#            excludeFromSearch: true
          parser:
            val: "${Street} ${House_Number} ${Street_2?:''}, ${City}, ${Region_Desc_} (${Region}) - ${Country}, ${Postal_Code}"
            type: "com.pontusvision.utils.LocationAddress"
          Post_Code: "${com.pontusvision.utils.PostCode.format(Postal_Code)}"

#      - label: Object_Contract
#        props:
#          Date: "${Status_Since}"
#          Description: "${Description}"
#          Id: "${Lead_Group} - ${Lead_ID} - ${Number}"
#          Status: "${Customer_Status}"
#          Type:
#            val: "Leads Contract"
#            excludeFromSearch: true

      - label: Object_Email_Address
        condition: "${E_Mail_Address?.trim()?.length() > 0}"
        props:
          Email: "${E_Mail_Address?.trim()?.toLowerCase()}"

      - label: Event_Ingestion
        props:
          Type:
            val: "sap/c@p Lead"
            excludeFromSearch: true
          Operation:
            val: Structured Data Insertion
            excludeFromSearch: true
          Domain_b64:
            val: "${original_request?.bytes?.encodeBase64()?.toString()}"
            excludeFromSearch: true
          Metadata_Create_Date:
            val: "${new Date()}" # Date COLUMN
            excludeFromSearch: true
            type: java.util.Date
          Metadata_Update_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: java.util.Date

      - label: Event_Group_Ingestion
        props:
          Type: "sap/c@p Lead"
          Operation: "Structured Data Insertion"
          Ingestion_Date: "${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}"
#          Metadata_Start_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date
#          Metadata_End_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date

      - label: Object_Data_Source
        props:
          Name: "SAP/C@P LEAD"
#            excludeFromSearch: true
#          Type:
#            val: "sap/c@p Lead"
#            excludeFromSearch: true
#          Description:
#            val: "Registros da tabela Lead no SAP/C@P"
#            excludeFromSearch: true

    edges:
      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Object_Data_Source"
        toVertexLabel: "Event_Group_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Event_Group_Ingestion"
        toVertexLabel: "Event_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Event_Ingestion"

      - label: "Is_Located"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Location_Address"

      - label: "Has_Phone"
        fromVertexLabel: "Person_Natural"
        toVertexName: "telephone"

      - label: "Has_Phone"
        fromVertexLabel: "Person_Natural"
        toVertexName: "mobile"

      - label: "Uses_Email"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Object_Email_Address"

#      - label: "Is_Lead"
#        fromVertexLabel: "Person_Natural"
#        toVertexLabel: "Object_Contract"

      - label: "Works"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Person_Organisation"

  cap_customer_prospect:
    #TODO => Object_Privacy_Notice
    #TODO 2 => Terms & Conditions V; Terms & Conditions a
    #TODO 3 => Many Event_Consent to 1 Object_Privacy_Notice || many/one to many/one ?!?!
    vertices:
      - label: Person_Natural
        props:
          Full_Name:
            val: "${First_Name?.trim()?.toUpperCase()} ${Last_Name?.trim()?.toUpperCase()}"
            excludeFromSearch: true
          Customer_ID: "${Tax_Number?.replaceAll('[^0-9]','')}"
          Title:
            val: "${Title}"
            excludeFromSearch: true
          Date_Of_Birth:
            val: "${Date_of_Birth?.replaceAll('\\\\.','/')?.trim()?:'01/01/1666'}"
            type: "java.util.Date"
          Nationality:
            val: "${Nationality?.trim()?.toUpperCase()}"
            excludeFromSearch: true

      - label: Object_Identity_Card
        name: cpf
        props:
          Id_Value: "${Tax_Number?.replaceAll('[^0-9]','')}"
          Id_Type:
            val: "CPF"
            excludeFromSearch: true

      - label: Person_Organisation
        condition: "${Company_Name_1?.trim()?.length() > 0}"
        props:
          Name: "${Company_Name_1?.trim()?.toUpperCase()}"
          Id: "${Tax_Number?.replaceAll('[^0-9]','')}"
          Registration_Number: "${Tax_Number?.replaceAll('[^0-9]','')}"

      - label: Object_Phone_Number
        condition: "${Telephone_no_?.replaceAll('[^0-9]', '')?.length() > 0}"
        name: telephone
        props:
          Raw:
            val: "${Telephone_no_}"
            excludeFromSearch: true
          Numbers_Only:
            val: "${(Telephone_no_?.replaceAll('[^0-9]', '')?:'00000000')}"
            excludeFromSearch: true
            type: "[Ljava.lang.String;"
          Last_7_Digits:
            val: "${(((Telephone_no_?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}"
            type: "[Ljava.lang.String;"

      - label: Object_Phone_Number
        condition: "${Mobile_Number?.replaceAll('[^0-9]', '')?.length() > 0}"
        name: mobile
        props:
          Raw:
            val: "${Mobile_Number}"
            excludeFromSearch: true
          Numbers_Only:
            val: "${(Mobile_Number?.replaceAll('[^0-9]', '')?:'00000000')}"
            excludeFromSearch: true
            type: "[Ljava.lang.String;"
          Last_7_Digits:
            val: "${(((Mobile_Number?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}"
            type: "[Ljava.lang.String;"

      - label: Location_Address
        props:
          Full_Address:
            val: "${Street} ${House_Number} ${Street_2?:''}, ${Region} (${District?:''}), ${City} - ${Country}, ${Postal_Code}"
            excludeFromSearch: true
          parser:
            val: "${Street} ${House_Number} ${Street_2?:''}, ${Region} (${District?:''}), ${City} - ${Country}, ${Postal_Code}"
            type: "com.pontusvision.utils.LocationAddress"
          Post_Code: "${com.pontusvision.utils.PostCode.format(Postal_Code)}"

      - label: Object_Email_Address
        condition: "${E_Mail_Address?.trim()?.length() > 0}"
        props:
          Email: "${E_Mail_Address?.trim()?.toLowerCase()}"

      - label: Event_Ingestion
        props:
          Type:
            val: "sap/c@p Customer Prospect"
            excludeFromSearch: true
          Operation:
            val: Structured Data Insertion
            excludeFromSearch: true
          Domain_b64:
            val: "${original_request?.bytes?.encodeBase64()?.toString()}"
            excludeFromSearch: true
          Metadata_Create_Date:
            val: "${new Date()}" # Date COLUMN
            excludeFromSearch: true
            type: java.util.Date
          Metadata_Update_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: java.util.Date

      - label: Event_Group_Ingestion
        props:
          Type: "sap/c@p Customer Prospect"
          Operation: "Structured Data Insertion"
          Ingestion_Date: "${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}"
#          Metadata_Start_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date
#          Metadata_End_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date

      - label: Object_Data_Source
        props:
          Name: "SAP/C@P CUSTOMER PROSPECT"

      - label: Event_Consent
        condition: "${Mail_Consent?.trim()?.length() > 0}"
        name: mail_consent
        props:
          Created_By: "${Created_By?.trim()}"
          Changed_By: "${Changed_by?.trim()}"
          Metadata_Create_Date:
            val: "${Created_on?.replaceAll('\\\\.','/')?.trim()?:'01/01/1666'}"
            type: "java.util.Date"
          Metadata_Update_Date:
            val: "${Changed_on?.replaceAll('\\\\.','/')?.trim()?:'01/01/1666'}"
            type: "java.util.Date"
          Description: "Mail Consent"
          Status: "${Mail_Consent?.trim()?.equals('Y')?'Consent':'No Consent'}"
          Customer_ID: "${Tax_Number?.replaceAll('[^0-9]', '')}"

      - label: Event_Consent
        condition: "${E_Mail_Consent?.trim()?.length() > 0}"
        name: email_consent
        props:
          Created_By: "${Created_By?.trim()}"
          Changed_By: "${Changed_by?.trim()}"
          Metadata_Create_Date:
            val: "${Created_on?.replaceAll('\\\\.','/')?.trim()?:'01/01/1666'}"
            type: "java.util.Date"
          Metadata_Update_Date:
            val: "${Changed_on?.replaceAll('\\\\.','/')?.trim()?:'01/01/1666'}"
            type: "java.util.Date"
          Description: "E-Mail Consent"
          Status: "${E_Mail_Consent?.trim()?.equals('Y')?'Consent':'No Consent'}"
          Customer_ID: "${Tax_Number?.replaceAll('[^0-9]', '')}"

      - label: Event_Consent
        condition: "${Telephone_Consent?.trim()?.length() > 0}"
        name: telephone_consent
        props:
          Created_By: "${Created_By?.trim()}"
          Changed_By: "${Changed_by?.trim()}"
          Metadata_Create_Date:
            val: "${Created_on?.replaceAll('\\\\.','/')?.trim()?:'01/01/1666'}"
            type: "java.util.Date"
          Metadata_Update_Date:
            val: "${Changed_on?.replaceAll('\\\\.','/')?.trim()?:'01/01/1666'}"
            type: "java.util.Date"
          Description: "Telephone Consent"
          Status: "${Telephone_Consent?.trim()?.equals('Y')?'Consent':'No Consent'}"
          Customer_ID: "${Tax_Number?.replaceAll('[^0-9]', '')}"

      - label: Event_Consent
        condition: "${Fax_SMS_Consent?.trim()?.length() > 0}"
        name: fax_sms_consent
        props:
          Created_By: "${Created_By?.trim()}"
          Changed_By: "${Changed_by?.trim()}"
          Metadata_Create_Date:
            val: "${Created_on?.replaceAll('\\\\.','/')?.trim()?:'01/01/1666'}"
            type: "java.util.Date"
          Metadata_Update_Date:
            val: "${Changed_on?.replaceAll('\\\\.','/')?.trim()?:'01/01/1666'}"
            type: "java.util.Date"
          Description: "Fax/SMS Consent"
          Status: "${Fax_SMS_Consent?.trim()?.equals('Y')?'Consent':'No Consent'}"
          Customer_ID: "${Tax_Number?.replaceAll('[^0-9]', '')}"

      - label: Event_Consent
        condition: "${Social_Media_Consent?.trim()?.length() > 0}"
        name: social_media_consent
        props:
          Created_By: "${Created_By?.trim()}"
          Changed_By: "${Changed_by?.trim()}"
          Metadata_Create_Date:
            val: "${Created_on?.replaceAll('\\\\.','/')?.trim()?:'01/01/1666'}"
            type: "java.util.Date"
          Metadata_Update_Date:
            val: "${Changed_on?.replaceAll('\\\\.','/')?.trim()?:'01/01/1666'}"
            type: "java.util.Date"
          Description: "Social Media Consent"
          Status: "${Social_Media_Consent?.trim()?.equals('Y')?'Consent':'No Consent'}"
          Customer_ID: "${Tax_Number?.replaceAll('[^0-9]', '')}"

    edges:
      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Object_Data_Source"
        toVertexLabel: "Event_Group_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Event_Group_Ingestion"
        toVertexLabel: "Event_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Event_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexName: "mail_consent"
        toVertexLabel: "Event_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexName: "email_consent"
        toVertexLabel: "Event_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexName: "telephone_consent"
        toVertexLabel: "Event_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexName: "fax_sms_consent"
        toVertexLabel: "Event_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexName: "social_media_consent"
        toVertexLabel: "Event_Ingestion"

      - label: "Is_Located"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Location_Address"

      - label: "Has_Phone"
        fromVertexLabel: "Person_Natural"
        toVertexName: "telephone"

      - label: "Has_Phone"
        fromVertexLabel: "Person_Natural"
        toVertexName: "mobile"

      - label: "Uses_Email"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Object_Email_Address"

      - label: "Works"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Person_Organisation"

      - label: "Has_Id_Card"
        fromVertexLabel: "Person_Natural"
        toVertexName: "cpf"

      - label: "Has_Consent"
        fromVertexLabel: "Person_Natural"
        toVertexName: "mail_consent"

      - label: "Has_Consent"
        fromVertexLabel: "Person_Natural"
        toVertexName: "email_consent"

      - label: "Has_Consent"
        fromVertexLabel: "Person_Natural"
        toVertexName: "telephone_consent"

      - label: "Has_Consent"
        fromVertexLabel: "Person_Natural"
        toVertexName: "fax_sms_consent"

      - label: "Has_Consent"
        fromVertexLabel: "Person_Natural"
        toVertexName: "social_media_consent"

  cap_my_p_change_report:
    vertices:
      - label: Person_Natural
        props:
          Full_Name: "${First_Name?.trim()?.toUpperCase()} ${Last_Name?.trim()?.toUpperCase()}"
#          Type:
#            val: "My Porsche Change Report"
#            excludeFromSearch: true

      - label: Event_Ingestion
        props:
          Type:
            val: "sap/c@p My Porsche Change Report"
            excludeFromSearch: true
          Operation:
            val: Structured Data Insertion
            excludeFromSearch: true
          Domain_b64:
            val: "${original_request?.bytes?.encodeBase64()?.toString()}"
            excludeFromSearch: true
          Metadata_Create_Date:
            val: "${new Date()}" # Date COLUMN
            excludeFromSearch: true
            type: java.util.Date
          Metadata_Update_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: java.util.Date

      - label: Event_Group_Ingestion
        props:
          Type: "sap/c@p My Porsche Change Report"
          Operation: "Structured Data Insertion"
          Ingestion_Date: "${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}"
#          Metadata_Start_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date
#          Metadata_End_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date

      - label: Object_Data_Source
        props:
          Name: "SAP/C@P MY PORSCHE CHANGE REPORT"
#            excludeFromSearch: true
#          Type:
#            val: "sap/c@p My Porsche Change Report"
#            excludeFromSearch: true
#          Description:
#            val: "Registros da tabela My Porsche Change Report no SAP/C@P"
#            excludeFromSearch: true

    edges:
      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Object_Data_Source"
        toVertexLabel: "Event_Group_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Event_Group_Ingestion"
        toVertexLabel: "Event_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Event_Ingestion"

  cap_p_connect_mandatory_fields:
    vertices:
      - label: Person_Natural
        props:
          Full_Name: "${First_Name?.trim()?.toUpperCase()} ${Last_Name?.trim()?.toUpperCase()}"
#          Type:
#            val: "Porsche Connect Mandatory Fields"
#            excludeFromSearch: true
          Title:
            val: "${Title}"
            excludeFromSearch: true

      - label: Object_Phone_Number
        condition: "${Mobile_Number?.replaceAll('[^0-9]', '')?.length() > 0}"
        name: mobile
        props:
          Raw: "${Mobile_Number}"
          excludeFromSearch: true
#          Type:
#            val: "Porsche Connect Mandatory Fields"
#            excludeFromSubsequenceSearch: true
          Numbers_Only:
            val: "${(Mobile_Number?.replaceAll('[^0-9]', '')?:'00000000')}"
            excludeFromSearch: true
            type: "[Ljava.lang.String;"
          Last_7_Digits:
            val: "${(((Mobile_Number?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}"
            type: "[Ljava.lang.String;"

      - label: Object_Email_Address
        condition: "${E_Mail_Address?.trim()?.length() > 0}"
        props:
          Email: "${E_Mail_Address?.trim()?.toLowerCase()}"

      - label: Event_Ingestion
        props:
          Type:
            val: "sap/c@p Porsche Connect Mandatory Fields"
            excludeFromSearch: true
          Operation:
            val: Structured Data Insertion
            excludeFromSearch: true
          Domain_b64:
            val: "${original_request?.bytes?.encodeBase64()?.toString()}"
            excludeFromSearch: true
          Metadata_Create_Date:
            val: "${new Date()}" # Date COLUMN
            excludeFromSearch: true
            type: java.util.Date
          Metadata_Update_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: java.util.Date

      - label: Event_Group_Ingestion
        props:
          Type: "sap/c@p Porsche Connect Mandatory Fields"
          Operation: "Structured Data Insertion"
          Ingestion_Date: "${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}"
#          Metadata_Start_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date
#          Metadata_End_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date

      - label: Object_Data_Source
        props:
          Name: "SAP/C@P PORSCHE CONNECT MANDATORY FIELDS"
#            excludeFromSearch: true
#          Type:
#            val: "sap/c@p Porsche Connect Mandatory Fields"
#            excludeFromSearch: true
#          Description:
#            val: "Registros da tabela Porsche Connect Mandatory Fields Report no SAP/C@P"
#            excludeFromSearch: true

    edges:
      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Object_Data_Source"
        toVertexLabel: "Event_Group_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Event_Group_Ingestion"
        toVertexLabel: "Event_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Event_Ingestion"

      - label: "Has_Phone"
        fromVertexLabel: "Person_Natural"
        toVertexName: "mobile"

      - label: "Uses_Email"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Object_Email_Address"

  cap_ownership_change:
    vertices:
      - label: Person_Natural
        name: owner
        props:
          Full_Name: "${First_Name?.trim()?.toUpperCase()} ${Last_Name?.trim()?.toUpperCase()}"
#          Type:
#            val: "Porsche Ownership Change"
#            excludeFromSearch: true

      - label: Person_Natural
        name: responsible_dealer
        props:
          Full_Name: "${Responsible_Dealer?.trim()?.toUpperCase()}"
          Full_Name_fuzzy:
            val: "${Name_1?.trim()?.toUpperCase()}"
            excludeFromSearch: true
#          Type:
#            val: "Porsche Responsible Dealer"
#            excludeFromSearch: true

      - label: Event_Ingestion
        props:
          Type:
            val: "sap/c@p Porsche Ownership Change"
            excludeFromSearch: true
          Operation:
            val: Structured Data Insertion
            excludeFromSearch: true
          Domain_b64:
            val: "${original_request?.bytes?.encodeBase64()?.toString()}"
            excludeFromSearch: true
          Metadata_Create_Date:
            val: "${new Date()}" # Date COLUMN
            excludeFromSearch: true
            type: java.util.Date
          Metadata_Update_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: java.util.Date

      - label: Event_Group_Ingestion
        props:
          Type: "sap/c@p Porsche Ownership Change"
          Operation: "Structured Data Insertion"
          Ingestion_Date: "${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}"
#          Metadata_Start_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date
#          Metadata_End_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date

      - label: Object_Data_Source
        props:
          Name: "SAP/C@P PORSCHE OWNERSHIP CHANGE"
#            excludeFromSearch: true
#          Type:
#            val: "sap/c@p Porsche Ownership Change"
#            excludeFromSearch: true
#          Description:
#            val: "Registros da tabela Porsche Ownership Change no SAP/C@P"
#            excludeFromSearch: true

    edges:
      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Object_Data_Source"
        toVertexLabel: "Event_Group_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Event_Group_Ingestion"
        toVertexLabel: "Event_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexName: "owner"
        toVertexLabel: "Event_Ingestion"

      - label: "Is_Responsible"
        fromVertexName: "responsible_dealer"
        toVertexName: "owner"

  cap_complaint:
    vertices:
      - label: Person_Natural
        props:
          Full_Name: "${First_Name?.trim()?.toUpperCase()} ${Last_Name?.trim()?.toUpperCase()}"
#          Customer_ID: "${Campaign_ID}"
#          Type:
#            val: "SAP/C@P Complaint"
#            excludeFromSearch: true
          Title:
            val: "${Title}"
            excludeFromSearch: true

      - label: Person_Organisation
        condition: "${Company_Name_1?.trim()?.length() > 0}"
        props:
          Name: "${Company_Name_1?.trim()?.toUpperCase()}"
#          Type:
#            val: "SAP/C@P Complaint"
#            excludeFromSearch: true

      - label: Object_Phone_Number
        condition: "${Telephone_no_?.replaceAll('[^0-9]', '')?.length() > 0}"
        name: telephone
        props:
          Raw: 
            val: "${Telephone_no_}"
            excludeFromSearch: true
#          Type:
#            val: "SAP/C@P Complaint"
#            excludeFromSubsequenceSearch: true
          Numbers_Only:
            val: "${(Telephone_no_?.replaceAll('[^0-9]', '')?:'00000000')}"
            excludeFromSearch: true
            type: "[Ljava.lang.String;"
          Last_7_Digits:
            val: "${(((Telephone_no_?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}"
            type: "[Ljava.lang.String;"

      - label: Object_Phone_Number
        condition: "${Mobile_Number?.replaceAll('[^0-9]', '')?.length() > 0}"
        name: mobile
        props:
          Raw: 
            val: "${Mobile_Number}"
            excludeFromSearch: true
#          Type:
#            val: "CAP/S@P Complaint"
#            excludeFromSubsequenceSearch: true
          Numbers_Only:
            val: "${(Mobile_Number?.replaceAll('[^0-9]', '')?:'00000000')}"
            excludeFromSearch: true
            type: "[Ljava.lang.String;"
          Last_7_Digits:
            val: "${(((Mobile_Number?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}"
            type: "[Ljava.lang.String;"

      - label: Location_Address
        props:
          Full_Address:
            val: "${Street} ${House_Number} ${Street_2?:''}, ${Region} (${District?:''}), ${City} - ${Country}, ${Postal_Code}"
            excludeFromSearch: true
#          Type:
#            val: "${Addresstype?.trim()}"
#            excludeFromSearch: true
          parser:
            val: "${Street} ${House_Number} ${Street_2?:''}, ${Region} (${District?:''}), ${City} - ${Country}, ${Postal_Code}"
            type: "com.pontusvision.utils.LocationAddress"
          Post_Code: "${com.pontusvision.utils.PostCode.format(Postal_Code)}"

      - label: Event_Complaint
        props:
#          Date: "${Due_Date}"
          Description: "${Description}; Resolvido = ${Solved}; Finalizado = ${Closed}."
          Id: "${Campaign_ID}"
          Status: "${Status}"
          Type:
            val: "SAP/C@P Complaint"
            excludeFromSearch: true

      - label: Object_Email_Address
        condition: "${E_Mail_Address?.trim()?.length() > 0}"
        props:
          Email: "${E_Mail_Address?.trim()?.toLowerCase()}"

      - label: Event_Ingestion
        props:
          Type:
            val: "sap/c@p Complaint"
            excludeFromSearch: true
          Operation:
            val: Structured Data Insertion
            excludeFromSearch: true
          Domain_b64:
            val: "${original_request?.bytes?.encodeBase64()?.toString()}"
            excludeFromSearch: true
          Metadata_Create_Date:
            val: "${new Date()}" # Date COLUMN
            excludeFromSearch: true
            type: java.util.Date
          Metadata_Update_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: java.util.Date

      - label: Event_Group_Ingestion
        props:
          Type: "sap/c@p Complaint"
          Operation: "Structured Data Insertion"
          Ingestion_Date: "${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}"
#          Metadata_Start_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date
#          Metadata_End_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date

      - label: Object_Data_Source
        props:
          Name: "SAP/C@P COMPLAINT"
#            excludeFromSearch: true
#          Type:
#            val: "sap/c@p Complaint"
#            excludeFromSearch: true
#          Description:
#            val: "Registros da tabela Complaint no SAP/C@P"
#            excludeFromSearch: true

    edges:
      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Object_Data_Source"
        toVertexLabel: "Event_Group_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Event_Group_Ingestion"
        toVertexLabel: "Event_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Event_Ingestion"

      - label: "Is_Located"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Location_Address"

      - label: "Has_Phone"
        fromVertexLabel: "Person_Natural"
        toVertexName: "telephone"

      - label: "Has_Mobile"
        fromVertexLabel: "Person_Natural"
        toVertexName: "mobile"

      - label: "Uses_Email"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Object_Email_Address"

      - label: "Has_Complaint"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Event_Complaint"

      - label: "Works"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Person_Organisation"

  cap_activity:
    vertices:
      - label: Person_Natural
        props:
          Full_Name: "${First_Name?.trim()?.toUpperCase()} ${Last_Name?.trim()?.toUpperCase()}"
#          Customer_ID: "${ID}"
#          Type:
#            val: "SAP/C@P Activity"
#            excludeFromSearch: true
          Title:
            val: "${Title}"
            excludeFromSearch: true

      - label: Person_Organisation
        condition: "${Company_Name_1?.trim()?.length() > 0}"
        props:
          Name: "${Company_Name_1?.trim()?.toUpperCase()}"
#          Type:
#            val: "SAP/C@P Activity"
#            excludeFromSearch: true

      - label: Object_Phone_Number
        condition: "${Telephone_no_?.replaceAll('[^0-9]', '')?.length() > 0}"
        name: telephone
        props:
          Raw:
            val: "${Telephone_no_}"
            excludeFromSearch: true
#          Type:
#            val: "SAP/C@P Activity"
#            excludeFromSubsequenceSearch: true
          Numbers_Only:
            val: "${(Telephone_no_?.replaceAll('[^0-9]', '')?:'00000000')}"
            excludeFromSearch: true
            type: "[Ljava.lang.String;"
          Last_7_Digits:
            val: "${(((Telephone_no_?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}"
            type: "[Ljava.lang.String;"

      - label: Object_Phone_Number
        condition: "${Mobile_Number?.replaceAll('[^0-9]', '')?.length() > 0}"
        name: mobile
        props:
          Raw:
            val: "${Mobile_Number}"
            excludeFromSearch: true
#          Type:
#            val: "CAP/S@P Activity"
#            excludeFromSubsequenceSearch: true
          Numbers_Only:
            val: "${(Mobile_Number?.replaceAll('[^0-9]', '')?:'00000000')}"
            excludeFromSearch: true
            type: "[Ljava.lang.String;"
          Last_7_Digits:
            val: "${(((Mobile_Number?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}"
            type: "[Ljava.lang.String;"

      - label: Location_Address
        props:
          Full_Address:
            val: "${Street} ${House_Number} ${Street_2?:''}, ${Region} (${District?:''}), ${City} - ${Country}, ${Postal_Code}"
            excludeFromSearch: true
#          Type:
#            val: "${Addresstype?.trim()}"
#            excludeFromSearch: true
          parser:
            val: "${Street} ${House_Number} ${Street_2?:''}, ${Region} (${District?:''}), ${City} - ${Country}, ${Postal_Code}"
            type: "com.pontusvision.utils.LocationAddress"
          Post_Code: "${com.pontusvision.utils.PostCode.format(Postal_Code)}"

#      - label: Object_Campaign
#        props:
#          Date: "${Created_On}"
#          Description: "${Description}"
#          Id: "${ID}"
#          Status: "${User_Status}"
#          Type:
#            val: "SAP/C@P Activity Campaign"
#            excludeFromSearch: true

      - label: Object_Email_Address
        condition: "${E_Mail_Address?.trim()?.length() > 0}"
        props:
          Email: "${E_Mail_Address?.trim()?.toLowerCase()}"

      - label: Event_Ingestion
        props:
          Type:
            val: "sap/c@p Activity"
            excludeFromSearch: true
          Operation:
            val: Structured Data Insertion
            excludeFromSearch: true
          Domain_b64:
            val: "${original_request?.bytes?.encodeBase64()?.toString()}"
            excludeFromSearch: true
          Metadata_Create_Date:
            val: "${new Date()}" # Date COLUMN
            excludeFromSearch: true
            type: java.util.Date
          Metadata_Update_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: java.util.Date

      - label: Event_Group_Ingestion
        props:
          Type: "sap/c@p Activity"
          Operation: "Structured Data Insertion"
          Ingestion_Date: "${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}"
#          Metadata_Start_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date
#          Metadata_End_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date

      - label: Object_Data_Source
        props:
          Name: "SAP/C@P ACTIVITY"
#            excludeFromSearch: true
#          Type:
#            val: "sap/c@p Activity"
#            excludeFromSearch: true
#          Description:
#            val: "Registros da tabela Activity no SAP/C@P"
#            excludeFromSearch: true

    edges:
      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Object_Data_Source"
        toVertexLabel: "Event_Group_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Event_Group_Ingestion"
        toVertexLabel: "Event_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Event_Ingestion"

      - label: "Is_Located"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Location_Address"

      - label: "Has_Phone"
        fromVertexLabel: "Person_Natural"
        toVertexName: "telephone"

      - label: "Has_Mobile"
        fromVertexLabel: "Person_Natural"
        toVertexName: "mobile"

      - label: "Uses_Email"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Object_Email_Address"

#      - label: "Has_Campaign"
#        fromVertexLabel: "Person_Natural"
#        toVertexLabel: "Object_Campaign"

      - label: "Works"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Person_Organisation"

  cap_workshop_campaigns_and_recalls:
    vertices:
      - label: Person_Natural
        props:
          Full_Name: "${First_Name?.trim()?.toUpperCase()} ${Last_Name?.trim()?.toUpperCase()}"
          Full_Name_fuzzy:
            val: "${Name_at_Birth?:''}"
            excludeFromSearch: true
#          Customer_ID: "${Recall_campaign_ID}"
#          Type:
#            val: "SAP/C@P Workshop Campaigns and Recalls"
#            excludeFromSearch: true
          Title:
            val: "${Title}"
            excludeFromSearch: true

      - label: Person_Organisation
        condition: "${Company_Name_1?.trim()?.length() > 0}"
        props:
          Name: "${Company_Name_1?.trim()?.toUpperCase()}"
#          Type:
#            val: "SAP/C@P Workshop Campaigns and Recalls"
#            excludeFromSearch: true

      - label: Object_Phone_Number
        condition: "${Telephone_no_?.replaceAll('[^0-9]', '')?.length() > 0}"
        name: telephone
        props:
          Raw:
            val: "${Telephone_no_}"
            excludeFromSearch: true
#          Type:
#            val: "SAP/C@P Workshop Campaigns and Recalls"
#            excludeFromSubsequenceSearch: true
          Numbers_Only:
            val: "${(Telephone_no_?.replaceAll('[^0-9]', '')?:'00000000')}"
            excludeFromSearch: true
            type: "[Ljava.lang.String;"
          Last_7_Digits:
            val: "${(((Telephone_no_?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}"
            type: "[Ljava.lang.String;"

      - label: Object_Phone_Number
        condition: "${Mobile_Number?.replaceAll('[^0-9]', '')?.length() > 0}"
        name: mobile
        props:
          Raw:
            val: "${Mobile_Number}"
            excludeFromSearch: true
#          Type:
#            val: "CAP/S@P Workshop Campaigns and Recalls"
#            excludeFromSubsequenceSearch: true
          Numbers_Only:
            val: "${(Mobile_Number?.replaceAll('[^0-9]', '')?:'00000000')}"
            excludeFromSearch: true
            type: "[Ljava.lang.String;"
          Last_7_Digits:
            val: "${(((Mobile_Number?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}"
            type: "[Ljava.lang.String;"

      - label: Location_Address
        props:
          Full_Address:
            val: "${Street} ${House_Number} ${Street_2?:''}, ${Region} (${District?:''}), ${City} - ${Country}, ${Postal_Code}"
            excludeFromSearch: true
#          Type:
#            val: "${Addresstype?.trim()}"
#            excludeFromSearch: true
          parser:
            val: "${Street} ${House_Number} ${Street_2?:''}, ${Region} (${District?:''}), ${City} - ${Country}, ${Postal_Code}"
            type: "com.pontusvision.utils.LocationAddress"
          Post_Code: "${com.pontusvision.utils.PostCode.format(Postal_Code)}"

      - label: Object_Campaign
        props:
          Date: "${Start_date}"
          Description: "${Description}"
          Id: "${Recall_campaign_ID?.trim()}"
#          Status: "${}"
          Type:
            val: "SAP/C@P Workshop Campaigns and Recalls Campaign"
            excludeFromSearch: true

      - label: Object_Email_Address
        condition: "${E_Mail_Address?.trim()?.length() > 0}"
        props:
          Email: "${E_Mail_Address?.trim()?.toLowerCase()}"

      - label: Event_Ingestion
        props:
          Type:
            val: "sap/c@p Workshop Campaigns and Recalls"
            excludeFromSearch: true
          Operation:
            val: Structured Data Insertion
            excludeFromSearch: true
          Domain_b64:
            val: "${original_request?.bytes?.encodeBase64()?.toString()}"
            excludeFromSearch: true
          Metadata_Create_Date:
            val: "${new Date()}" # Date COLUMN
            excludeFromSearch: true
            type: java.util.Date
          Metadata_Update_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: java.util.Date

      - label: Event_Group_Ingestion
        props:
          Type: "sap/c@p Workshop Campaigns and Recalls"
          Operation: "Structured Data Insertion"
          Ingestion_Date: "${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}"
#          Metadata_Start_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date
#          Metadata_End_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date

      - label: Object_Data_Source
        props:
          Name: "SAP/C@P WORKSHOP CAMPAIGNS AND RECALLS"
#            excludeFromSearch: true
#          Type:
#            val: "sap/c@p Workshop Campaigns and Recalls"
#            excludeFromSearch: true
#          Description:
#            val: "Registros da tabela Workshop Campaigns and Recalls no SAP/C@P"
#            excludeFromSearch: true

    edges:
      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Object_Data_Source"
        toVertexLabel: "Event_Group_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Event_Group_Ingestion"
        toVertexLabel: "Event_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Event_Ingestion"

      - label: "Is_Located"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Location_Address"

      - label: "Has_Phone"
        fromVertexLabel: "Person_Natural"
        toVertexName: "telephone"

      - label: "Has_Mobile"
        fromVertexLabel: "Person_Natural"
        toVertexName: "mobile"

      - label: "Uses_Email"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Object_Email_Address"

      - label: "Has_Campaign"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Object_Campaign"

      - label: "Works"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Person_Organisation"

  cap_competitor_vehicles:
    vertices:
      - label: Person_Natural
        props:
          Full_Name: "${First_Name?.trim()?.toUpperCase()}${Last_Name?.trim()?' ':''}${Last_Name?.trim()?.toUpperCase()}"
#          Customer_ID: "${Recall_campaign_ID}"
#          Type:
#            val: "SAP/C@P Competitor Vehicles"
#            excludeFromSearch: true
          Title:
            val: "${Title}"
            excludeFromSearch: true

      - label: Person_Organisation
        condition: "${Company_Name_1?.trim()?.length() > 0}"
        props:
          Name: "${Company_Name_1?.trim()?.toUpperCase()}"
#          Type:
#            val: "SAP/C@P Competitor Vehicles"
#            excludeFromSearch: true

      - label: Object_Phone_Number
        condition: "${Telephone_no_?.replaceAll('[^0-9]', '')?.length() > 0}"
        name: telephone
        props:
          Raw:
            val: "${Telephone_no_}"
            excludeFromSearch: true
#          Type:
#            val: "SAP/C@P Competitor Vehicles"
#            excludeFromSubsequenceSearch: true
          Numbers_Only:
            val: "${(Telephone_no_?.replaceAll('[^0-9]', '')?:'00000000')}"
            excludeFromSearch: true
            type: "[Ljava.lang.String;"
          Last_7_Digits:
            val: "${(((Telephone_no_?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}"
            type: "[Ljava.lang.String;"

      - label: Object_Phone_Number
        condition: "${Mobile_Number?.replaceAll('[^0-9]', '')?.length() > 0}"
        name: mobile
        props:
          Raw:
            val: "${Mobile_Number}"
            excludeFromSearch: true
#          Type:
#            val: "CAP/S@P Competitor Vehicles"
#            excludeFromSubsequenceSearch: true
          Numbers_Only:
            val: "${(Mobile_Number?.replaceAll('[^0-9]', '')?:'00000000')}"
            excludeFromSearch: true
            type: "[Ljava.lang.String;"
          Last_7_Digits:
            val: "${(((Mobile_Number?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}"
            type: "[Ljava.lang.String;"

      - label: Location_Address
        props:
          Full_Address:
            val: "${Street} ${House_Number} ${Street_2?:''}, ${Region} (${District?:''}), ${City} - ${Country}, ${Postal_Code}"
            excludeFromSearch: true
#          Type:
#            val: "${Addresstype?.trim()}"
#            excludeFromSearch: true
          parser:
            val: "${Street} ${House_Number} ${Street_2?:''}, ${Region} (${District?:''}), ${City} - ${Country}, ${Postal_Code}"
            type: "com.pontusvision.utils.LocationAddress"
          Post_Code: "${com.pontusvision.utils.PostCode.format(Postal_Code)}"

      - label: Object_Vehicle
        props:
          License_Plate: "${License_Plate}"
          Model: "${Model}"
          Model_Year: "${Model_Year}"

      - label: Object_Email_Address
        condition: "${E_Mail_Address?.trim()?.length() > 0}"
        props:
          Email: "${E_Mail_Address?.trim()?.toLowerCase()}"

      - label: Event_Ingestion
        props:
          Type:
            val: "sap/c@p Competitor Vehicles"
            excludeFromSearch: true
          Operation:
            val: Structured Data Insertion
            excludeFromSearch: true
          Domain_b64:
            val: "${original_request?.bytes?.encodeBase64()?.toString()}"
            excludeFromSearch: true
          Metadata_Create_Date:
            val: "${new Date()}" # Date COLUMN
            excludeFromSearch: true
            type: java.util.Date
          Metadata_Update_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: java.util.Date

      - label: Event_Group_Ingestion
        props:
          Type: "sap/c@p Competitor Vehicles"
          Operation: "Structured Data Insertion"
          Ingestion_Date: "${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}"
#          Metadata_Start_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date
#          Metadata_End_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date

      - label: Object_Data_Source
        props:
          Name: "SAP/C@P COMPETITOR VEHICLES"
#          Type:
#            val: "sap/c@p Competitor Vehicles"
#            excludeFromSearch: true
#          Description:
#            val: "Registros da tabela Competitor Vehicles no SAP/C@P"
#            excludeFromSearch: true

    edges:
      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Object_Data_Source"
        toVertexLabel: "Event_Group_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Event_Group_Ingestion"
        toVertexLabel: "Event_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Event_Ingestion"

      - label: "Is_Located"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Location_Address"

      - label: "Has_Phone"
        fromVertexLabel: "Person_Natural"
        toVertexName: "telephone"

      - label: "Has_Mobile"
        fromVertexLabel: "Person_Natural"
        toVertexName: "mobile"

      - label: "Uses_Email"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Object_Email_Address"

      - label: "Has_Vehicle"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Object_Vehicle"

      - label: "Works"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Person_Organisation"

  cap_vehicle:
    vertices:
      - label: Person_Natural
        props:
          Full_Name: "${First_Name?.trim()?.toUpperCase()}${Last_Name?.trim()?' ':''}${Last_Name?.trim()?.toUpperCase()}"
#          Customer_ID: "${Recall_campaign_ID}"
#          Type:
#            val: "SAP/C@P Vehicle"
#            excludeFromSearch: true
          Title:
            val: "${Title}"
            excludeFromSearch: true

      - label: Person_Organisation
        condition: "${Company_Name_1?.trim()?.length() > 0}"
        props:
          Name: "${Company_Name_1?.trim()?.toUpperCase()}"
#          Type:
#            val: "SAP/C@P Vehicle"
#            excludeFromSearch: true

      - label: Object_Phone_Number
        condition: "${Telephone_no_?.replaceAll('[^0-9]', '')?.length() > 0}"
        name: telephone
        props:
          Raw:
            val: "${Telephone_no_}"
            excludeFromSearch: true
#          Type:
#            val: "SAP/C@P Vehicle"
#            excludeFromSubsequenceSearch: true
          Numbers_Only:
            val: "${(Telephone_no_?.replaceAll('[^0-9]', '')?:'00000000')}"
            excludeFromSearch: true
            type: "[Ljava.lang.String;"
          Last_7_Digits:
            val: "${(((Telephone_no_?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}"
            type: "[Ljava.lang.String;"

      - label: Object_Phone_Number
        condition: "${Mobile_Number?.replaceAll('[^0-9]', '')?.length() > 0}"
        name: mobile
        props:
          Raw:
            val: "${Mobile_Number}"
            excludeFromSearch: true
#          Type:
#            val: "CAP/S@P Vehicle"
#            excludeFromSubsequenceSearch: true
          Numbers_Only:
            val: "${(Mobile_Number?.replaceAll('[^0-9]', '')?:'00000000')}"
            excludeFromSearch: true
            type: "[Ljava.lang.String;"
          Last_7_Digits:
            val: "${(((Mobile_Number?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}"
            type: "[Ljava.lang.String;"

      - label: Location_Address
        props:
          Full_Address:
            val: "${Street} ${House_Number} ${Street_2?:''}, ${Region} (${District?:''}), ${City} - ${Country}, ${Postal_Code}"
            excludeFromSearch: true
          parser:
            val: "${Street} ${House_Number} ${Street_2?:''}, ${Region} (${District?:''}), ${City} - ${Country}, ${Postal_Code}"
            type: "com.pontusvision.utils.LocationAddress"
          Post_Code: "${com.pontusvision.utils.PostCode.format(Postal_Code)}"

      - label: Object_Vehicle
        props:
          License_Plate: "${Vehicle_License_Plat}"
          Model: "${Model}"
          Model_Year: "${Model_Year_of_Vehicl}"

      - label: Object_Email_Address
        condition: "${E_Mail_Address?.trim()?.length() > 0}"
        props:
          Email: "${E_Mail_Address?.trim()?.toLowerCase()}"

      - label: Event_Ingestion
        props:
          Type:
            val: "sap/c@p Vehicle"
            excludeFromSearch: true
          Operation:
            val: Structured Data Insertion
            excludeFromSearch: true
          Domain_b64:
            val: "${original_request?.bytes?.encodeBase64()?.toString()}"
            excludeFromSearch: true
          Metadata_Create_Date:
            val: "${new Date()}" # Date COLUMN
            excludeFromSearch: true
            type: java.util.Date
          Metadata_Update_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: java.util.Date

      - label: Event_Group_Ingestion
        props:
          Type: "sap/c@p Vehicle"
          Operation: "Structured Data Insertion"
          Ingestion_Date: "${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}"
#          Metadata_Start_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date
#          Metadata_End_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date

      - label: Object_Data_Source
        props:
          Name: "SAP/C@P VEHICLE"
#            excludeFromSearch: true
#          Type:
#            val: "sap/c@p Vehicle"
#            excludeFromSearch: true
#          Description:
#            val: "Registros da tabela Vehicle no SAP/C@P"
#            excludeFromSearch: true

    edges:
      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Object_Data_Source"
        toVertexLabel: "Event_Group_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Event_Group_Ingestion"
        toVertexLabel: "Event_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Event_Ingestion"

      - label: "Is_Located"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Location_Address"

      - label: "Has_Phone"
        fromVertexLabel: "Person_Natural"
        toVertexName: "telephone"

      - label: "Has_Mobile"
        fromVertexLabel: "Person_Natural"
        toVertexName: "mobile"

      - label: "Uses_Email"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Object_Email_Address"

      - label: "Has_Vehicle"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Object_Vehicle"

      - label: "Works"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Person_Organisation"

  cap_data_quality:
    vertices:
      - label: Person_Natural
        props:
          Full_Name:
            val: "${First_Name?.trim()?.toUpperCase()}${Last_Name?.trim() && First_Name?.trim()?' ':''}${Last_Name?.trim()?.toUpperCase()}"
            excludeFromSearch: true
          Customer_ID: "${Tax_Number?.replaceAll('[^0-9]','')}"
#          Type:
#            val: "Data Quality"
#            excludeFromSearch: true
          Title:
            val: "${Title}"
            excludeFromSearch: true
          Date_Of_Birth:
            val: "${Date_of_Birth?.replaceAll('\\\\.','/')?.trim()?:'01/01/1666'}"
            type: "java.util.Date"
          Nationality:
            val: "${Nationality?.trim()?.toUpperCase()}"
            excludeFromSearch: true

      - label: Object_Identity_Card
        #        condition: "${}"
        name: cnpj
        props:
          Id_Value: "${Tax_Number?.replaceAll('[^0-9]','')}"
          Id_Type:
            val: "CNPJ"
            excludeFromSearch: true

      - label: Object_Identity_Card
        #        condition: "${}"
        name: cpf
        props:
          Id_Value: "${ID_number?.replaceAll('[^0-9]','')}"
          Id_Type:
            val: "CPF"
            excludeFromSearch: true

      - label: Person_Organisation
        condition: "${Company_Name_1?.trim()?.length() > 0}"
        props:
          Name: "${Company_Name_1?.trim()?.toUpperCase()}"
          Id: "${Tax_Number?.replaceAll('[^0-9]','')}"
          Registration_Number: "${Tax_Number?.replaceAll('[^0-9]','')}"
#          Type:
#            val: "Data Quality"
#            excludeFromSearch: true

      - label: Object_Phone_Number
        condition: "${Telephone_no_?.replaceAll('[^0-9]', '')?.length() > 0}"
        name: telephone
        props:
          Raw:
            val: "${Telephone_no_}"
            excludeFromSearch: true
#          Type:
#            val: "Data Quality"
#            excludeFromSubsequenceSearch: true
          Numbers_Only:
            val: "${(Telephone_no_?.replaceAll('[^0-9]', '')?:'00000000')}"
            excludeFromSearch: true
            type: "[Ljava.lang.String;"
          Last_7_Digits:
            val: "${(((Telephone_no_?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}"
            type: "[Ljava.lang.String;"

      - label: Object_Phone_Number
        condition: "${Mobile_Number?.replaceAll('[^0-9]', '')?.length() > 0}"
        name: mobile
        props:
          Raw:
            val: "${Mobile_Number}"
            excludeFromSearch: true
#          Type:
#            val: "Data Quality"
#            excludeFromSubsequenceSearch: true
          Numbers_Only:
            val: "${(Mobile_Number?.replaceAll('[^0-9]', '')?:'00000000')}"
            excludeFromSearch: true
            type: "[Ljava.lang.String;"
          Last_7_Digits:
            val: "${(((Mobile_Number?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}"
            type: "[Ljava.lang.String;"

      - label: Location_Address
        props:
          Full_Address:
            val: "${Street} ${House_Number} ${Street_2?:''} ${Address_Number?:''}, ${Region}, ${City} - ${Country}, ${Postal_Code}"
            excludeFromSearch: true
#          Type:
#            val: "${Addresstype?.trim()}"
#            excludeFromSearch: true
          parser:
            val: "${Street} ${House_Number} ${Street_2?:''} ${Address_Number?:''}, ${Region}, ${City} - ${Country}, ${Postal_Code}"
            type: "com.pontusvision.utils.LocationAddress"
          Post_Code: "${com.pontusvision.utils.PostCode.format(Postal_Code)}"

      #      - label: Object_Contract
      #        props:
      #          Description: "(Responsável Sales Person) ${Resp__Sales_Person}"
      #          Id: "${Porsche_ID} - ${Profile_ID}"
      #          Status: "${Status}"
      #          Type:
      #            val: "Customer Prospect Contract"
      #            excludeFromSearch: true

      - label: Object_Email_Address
        condition: "${E_Mail_Address?.trim()?.length() > 0}"
        props:
          Email: "${E_Mail_Address?.trim()?.toLowerCase()}"

      - label: Event_Ingestion
        props:
          Type:
            val: "sap/c@p Data Quality"
            excludeFromSearch: true
          Operation:
            val: Structured Data Insertion
            excludeFromSearch: true
          Domain_b64:
            val: "${original_request?.bytes?.encodeBase64()?.toString()}"
            excludeFromSearch: true
          Metadata_Create_Date:
            val: "${new Date()}" # Date COLUMN
            excludeFromSearch: true
            type: java.util.Date
          Metadata_Update_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: java.util.Date

      - label: Event_Group_Ingestion
        props:
          Type: "sap/c@p Data Quality"
          Operation: "Structured Data Insertion"
          Ingestion_Date: "${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}"
#          Metadata_Start_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date
#          Metadata_End_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date

      - label: Object_Data_Source
        props:
          Name: "SAP/C@P DATA QUALITY"
#            excludeFromSearch: true
#          Type:
#            val: "sap/c@p Data Quality"
#            excludeFromSearch: true
#          Description:
#            val: "Registros da tabela Data Quality no SAP/C@P"
#            excludeFromSearch: true

    edges:
      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Object_Data_Source"
        toVertexLabel: "Event_Group_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Event_Group_Ingestion"
        toVertexLabel: "Event_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Event_Ingestion"

      - label: "Is_Located"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Location_Address"

      - label: "Has_Phone"
        fromVertexLabel: "Person_Natural"
        toVertexName: "telephone"

      - label: "Has_Mobile"
        fromVertexLabel: "Person_Natural"
        toVertexName: "mobile"

      - label: "Uses_Email"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Object_Email_Address"

#      - label: "Has_Contract" # OR Is_Responsible ?!?!
#        fromVertexLabel: "Person_Natural"
#        toVertexLabel: "Object_Contract"

      - label: "Works"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Person_Organisation"

      - label: "Has_Id_Card"
        fromVertexLabel: "Person_Natural"
        toVertexName: "cnpj"

      - label: "Has_Id_Card"
        fromVertexLabel: "Person_Natural"
        toVertexName: "cpf"
