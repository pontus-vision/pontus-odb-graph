
rules:

  salesforce:
    vertices:
      - label: "Person_Natural"
        props:
          Full_Name:
            val: "${FirstName?.toUpperCase()?.trim()} ${LastName?.toUpperCase()?.trim()}"
            predicate: "eq"
            mandatoryInSearch: true

          Full_Name_fuzzy:
            val: "${FirstName?.toUpperCase()?.trim()} ${LastName?.toUpperCase()?.trim()}"
            excludeFromSearch: true

          Last_Name:
            val: "${LastName?.toUpperCase()?.trim()}"
            excludeFromSubsequenceSearch: true

          Date_Of_Birth:
            val: "${Birthdate?:'1666-01-01'}"
            type: "java.util.Date"
            mandatoryInSearch: false
            excludeFromSubsequenceSearch: true

          Title:
            val: "${Title?:Salutation?:''}"
            excludeFromSearch: true

          Nationality:
            val: "${MailingCountry?:'Unknown'}"
            excludeFromSearch: true

          Customer_ID:
            val: "${Id}"
            mandatoryInSearch: true

          Gender:
            val: "Unknown"
            mandatoryInSearch: false
            excludeFromSubsequenceSearch: true

          Type:
            val: "${Tipo__c?Tipo__c.toLowerCase():'leads'}"
            mandatoryInSearch: false
            excludeFromSubsequenceSearch: true

      - label: "Object_Identity_Card"
        condition: "${ (CPF__c != null) && ! (CPF__c.isEmpty())}"
        props:
          Id_Type:
            val: "CPF"
            excludeFromSearch: true

          Id_Value:
            val: "${CPF__c.replaceAll('[^0-9]','')}"
            mandatoryInSearch: true

      - label: "Location_Address"
        props:
          Full_Address:
            val: "${ ( (MailingStreet?:'')+ '\\\\n' + (MailingCity?:'') + '\\\\n' + (MailingState?:'') + '\\\\n' + (MailingCountry?:'')).replaceAll('\\\\n', ' ') }"
            mandatoryInSearch: true

          parser:
            val: "${ ( (MailingStreet?:'')+ '\\\\n' + (MailingCity?:'') + '\\\\n' + (MailingState?:'') + '\\\\n' + (MailingCountry?:'')).replaceAll('\\\\n', ' ') }"
            excludeFromSearch: true
            type: "com.pontusvision.utils.LocationAddress"

          Post_Code:
            val: "${com.pontusvision.utils.PostCode.format(MailingPostalCode)}"
            excludeFromSearch: true

      - label: "Object_Email_Address"
        props:
          Email:
            val: "${Email?.trim()?.toLowerCase()}"
            mandatoryInSearch: true

      - label: "Object_Phone_Number"
        props:
          Raw:
            val: "${Phone}"
            excludeFromSearch: true

          Type:
            val: "Work"
#            excludeFromSubsequenceSearch: true
            excludeFromSearch: true

          Numbers_Only:
            val: "${(Phone?.replaceAll('[^0-9]', '')?:'11111111')}"
            excludeFromSearch: true
            type: "[Ljava.lang.String;"

          Last_7_Digits:
            val: "${(((Phone?.replaceAll('[^0-9]', ''))?.length()>=7?(Phone?.replaceAll('[^0-9]', '')):'1111111')[-7..-1])}"
            mandatoryInSearch: true
            type: "[Ljava.lang.String;"

      - label: "Object_Data_Source"
        props:
          Name:
            val: "SALESFORCE.COM"
            mandatoryInSearch: true
#          Type:
#            val: "salesforce.com"
#            mandatoryInSearch: true
#          Description:
#            val: "Salesforce.com CRM system data"
#            mandatoryInSearch: true

      - label: Event_Group_Ingestion
        props:
          Type:
            val: salesforce.com
            mandatoryInSearch: true
          Operation:
            val: Structured Data Insertion
            mandatoryInSearch: true
          Ingestion_Date: "${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}"


      - label: "Event_Ingestion"
        props:
          Type:
            val: "salesforce.com"
            excludeFromSearch: true

          Operation:
            val: "Structured Data Insertion"
            excludeFromSearch: true

          Domain_b64:
            val: "${original_request?.bytes?.encodeBase64()?.toString()}"
            excludeFromSearch: true

          Metadata_Create_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: "java.util.Date"

      - label: "Event_Consent"
        props:
          Status:
            val: "Consent"
            excludeFromSearch: true
          Metadata_Create_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: "java.util.Date"

      - label: "Object_Privacy_Notice"
        props:
          Who_Is_Collecting:
            val: "[CRM System]"
            excludeFromUpdate: true
    edges:
      - label: "Uses_Email"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Object_Email_Address"

      - label: "Has_Id_Card"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Object_Identity_Card"

      - label: "Has_Phone"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Object.Home_Phone_Number"

      - label: "Has_Phone"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Object_Phone_Number"

      - label: "Lives"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Location_Address"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Event_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Event_Group_Ingestion"
        toVertexLabel: "Event_Ingestion"

      - label: "Has_Ingestion_Event"
        toVertexLabel: "Event_Group_Ingestion"
        fromVertexLabel: "Object_Data_Source"

      - label: "Consent"
        fromVertexLabel: "Person_Natural"
        toVertexLabel: "Event_Consent"

      - label: "Has_Privacy_Notice"
        fromVertexLabel: "Event_Consent"
        toVertexLabel: "Object_Privacy_Notice"
