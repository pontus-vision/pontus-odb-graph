rules:

  sharepoint_data_sources:
    vertices:
      - label: Object.Data_Source
        name: sharepoint
        props:
          Name: SHAREPOINT/DATA-SOURCES
#          Type: sharepoint/data-sources
#          Description: Data Sources

      - label: Object.Data_Source
        condition: "${field_Descri_x0020__x0020_o?.trim()?.length() > 0}"
        name: data_sources
        props:
          Form_Id: "${id}"
          Name:
            val: "${Title?.toUpperCase()?.trim()}"
            excludeFromSearch: true
          Description:
            val: "${field_Descri_x0020__x0020_o?.trim()?.toUpperCase()}"
            excludeFromSearch: true
          Engine:
            val: "${field_Sistema}"
            excludeFromSearch: true
          Type:
            val: "${field_Tipo_x0020_Sistema}"
            excludeFromSearch: true
          Domain:
            val: "${field_Tabela}"
            excludeFromSearch: true
          URI_Delete:
            val: "${field_URL_x0020_Prefixo_x0020_Delete}"
            excludeFromSearch: true
          URI_Update:
            val: "${field_URL_x0020_Prefixo_x0020_Update}"
            excludeFromSearch: true
          URI_Read:
            val: "${field_URL_x0020_Prefixo_x0020_Read}"
            excludeFromSearch: true

      - label: Object.System
        props:
          Name: "${field_Sistema?.trim()?.toUpperCase()}"

      - label: Object.Subsystem
        props:
          Name: "${field_Tipo_x0020_Sistema?.trim()?.toUpperCase()}"

      - label: Object.Module
        props:
          Name: "${field_Tabela?.trim()?.toLowerCase()}"

      - label: Object.Data_Policy
        props:
          Update_Frequency: "${field_Frequ_x0020_ncia_x0020_de_x0020_Atualiza_x0020__x0020_o}"
          Retention_Period: "${field_Per_x0020_odo_x0020_de_x0020_Reten_x0020__x0020_o}"
#          Type:
#            val: "${Title}"
#            mandatoryInSearch: true

#      - label: Object.Sensitive_Data
#        props:
#          Description:
#            val: "${????????}"
#            type: "[Ljava.lang.String;"
#            mandatoryInSearch: true
#            postProcessor: "${it?.toUpperCase()?.trim()}"

      - label: Event.Ingestion
        props:
          Type:
            val: sharepoint/data-sources
            excludeFromSearch: true
          Operation:
            val: Structured Data Insertion
            excludeFromSearch: true
          Domain_b64:
            val: "${original_request?.bytes?.encodeBase64()?.toString()}"
            excludeFromSearch: true
          Metadata_Create_Date:
            val: "${new Date()}" # Date COLUMN
            excludeFromSearch: true
            type: java.util.Date
          Metadata_Update_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: java.util.Date


      - label: Event.Group_Ingestion
        props:
#          Metadata_Start_Date:
#            val: "${new Date()}"
##            mandatoryInSearch: false
#            excludeFromSearch: true
#            type: java.util.Date
#          Metadata_End_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date
          Type:
            val: sharepoint/data-sources
            mandatoryInSearch: true
          Operation:
            val: Structured Data Insertion
            mandatoryInSearch: true
          Ingestion_Date:
            val: "${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}"
          mandatoryInSearch: true

    edges:
#      - label: "Has_Sensitive_Data"
#        fromVertexLabel: "data_sources"
#        toVertexLabel: "Object.Sensitive_Data"

      - label: "Has_Ingestion_Event"
        fromVertexName: "sharepoint"
        toVertexLabel: "Event.Group_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Event.Group_Ingestion"
        toVertexLabel: "Event.Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Event.Ingestion"
        toVertexName: "data_sources"

      - label: "Has_Policy"
        fromVertexName: "data_sources"
        toVertexLabel: "Object.Data_Policy"

      - label: "Has_Module"
        fromVertexName: "data_sources"
        toVertexLabel: "Object.Module"

      - label: "Has_Subsystem"
        fromVertexLabel: "Object.Module"
        toVertexLabel: "Object.Subsystem"

      - label: "Has_System"
        fromVertexLabel: "Object.Subsystem"
        toVertexLabel: "Object.System"

  sharepoint_fontes_de_dados:
    vertices:
      - label: Object.Data_Source
        name: sharepoint
        props:
          Name: SHAREPOINT/FONTES-DE-DADOS
#          Type: sharepoint/fontes-de-dados
#          Description: Registros das Fontes de Dados LGPD

      - label: Object.Data_Source
        condition: "${Descri_x00e7__x00e3_o?.trim()?.length() > 0}"
        name: fontes_de_dados
        props:
          Form_Id: "${id}"
          Name:
            val: "${Title?.trim()?.toUpperCase()}"
            excludeFromSearch: true

          Description:
            val: "${Descri_x00e7__x00e3_o?.trim()?.toUpperCase()}"
            excludeFromSearch: true
          Engine:
            val: "${Sistema}"
            excludeFromSearch: true
          Type:
            val: "${Tipo_x0020_Sistema}"
            excludeFromSearch: true
          Domain:
            val: "${Tabela}"
            excludeFromSearch: true
          URI_Delete:
            val: "${URL_x0020_Prefixo_x0020_Delete}"
            excludeFromSearch: true
          URI_Update:
            val: "${URL_x0020_Prefixo_x0020_Update}"
            excludeFromSearch: true
          URI_Read:
            val: "${URL_x0020_Prefixo_x0020_Read}"
            excludeFromSearch: true

      - label: Object.System
        props:
          Name: "${Sistema?.trim()?.toUpperCase()}"

      - label: Object.Subsystem
        props:
          Name: "${Tipo_x0020_Sistema?.trim()?.toUpperCase()}"

      - label: Object.Module
        props:
          Name: "${Tabela?.trim()?.toLowerCase()}"

      - label: Object.Sensitive_Data
        props:
          Description:
            val: "${new groovy.json.JsonBuilder(DadosPessoais)}"
            type: "[Ljava.lang.String;"
            postProcessor: "${it?.toUpperCase()?.trim()}"
            processAll: true

      - label: Object.Data_Policy
        props:
          Update_Frequency: "${Frequ_x00ea_ncia_x0020_de_x0020_}"
          Retention_Period: "${Pol_x00ed_tica_x0020_de_x0020_Re}"
          Type: "${Title}"

      - label: Event.Ingestion
        props:
          Type:
            val: sharepoint/fontes-de-dados
            excludeFromSearch: true
          Operation:
            val: Structured Data Insertion
            excludeFromSearch: true
          Domain_b64:
            val: "${original_request?.bytes?.encodeBase64()?.toString()}"
            excludeFromSearch: true
          Metadata_Create_Date:
            val: "${new Date()}" # Date COLUMN
            excludeFromSearch: true
            type: java.util.Date
          Metadata_Update_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: java.util.Date

      - label: Event.Group_Ingestion
        props:
#          Metadata_Start_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date
#          Metadata_End_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date
          Type: sharepoint/fontes-de-dados
          Operation: Structured Data Insertion
          Ingestion_Date: "${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}"

    edges:
      - label: "Has_Ingestion_Event"
        fromVertexName: "sharepoint"
        toVertexLabel: "Event.Group_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Event.Group_Ingestion"
        toVertexLabel: "Event.Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Event.Ingestion"
        toVertexName: "fontes_de_dados"

      - label: "Has_Policy"
        fromVertexName: "fontes_de_dados"
        toVertexLabel: "Object.Data_Policy"

      - label: "Has_Sensitive_Data"
        fromVertexName: "fontes_de_dados"
        toVertexLabel: "Object.Sensitive_Data"

      - label: "Has_Module"
        fromVertexName: "fontes_de_dados"
        toVertexLabel: "Object.Module"

      - label: "Has_Subsystem"
        fromVertexLabel: "Object.Module"
        toVertexLabel: "Object.Subsystem"

      - label: "Has_System"
        fromVertexLabel: "Object.Subsystem"
        toVertexLabel: "Object.System"

  sharepoint_treinamentos:
    vertices:
      - label: Event.Training
        props:
          Form_Id: "${id}"
          Status:
            val: "${status}"
            excludeFromSearch: true

      - label: Object.Awareness_Campaign
        props:
          Description: "${Descri_x00e7__x00e3_o?.trim()?.toUpperCase()}"
          Start_Date:
            val: "${Realizadoem}"
            type: java.util.Date
      #          URL: "${webUrl}"

      - label: Person.Natural
        props:
          Full_Name: "${Nome0?.trim()?.toUpperCase()}"
      #          Role: "${Departamento0}"

      - label: Event.Ingestion
        props:
          Type:
            val: sharepoint/treinamentos
            excludeFromSearch: true
          Operation:
            val: Structured Data Insertion
            excludeFromSearch: true
          Domain_b64:
            val: "${original_request?.bytes?.encodeBase64()?.toString()}"
            excludeFromSearch: true
          Metadata_Create_Date:
            val: "${new Date()}" # Date COLUMN
            excludeFromSearch: true
            type: java.util.Date
          Metadata_Update_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: java.util.Date

      - label: Event.Group_Ingestion
        props:
#          Metadata_Start_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date
#          Metadata_End_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date
          Type: sharepoint/treinamentos
          Operation: Structured Data Insertion
          Ingestion_Date: "${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}"


      - label: Object.Data_Source
        props:
          Name: SHAREPOINT/TREINAMENTOS
#          Type: sharepoint/treinamentos
#          Description: Registros de Treinamentos LGPD Colaboradores

    edges:
      - label: "Course_Training"
        fromVertexLabel: "Event.Training"
        toVertexLabel: "Object.Awareness_Campaign"

      - label: "Completed_By"
        fromVertexLabel: "Event.Training"
        toVertexLabel: "Person.Natural"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Event.Ingestion"
        toVertexLabel: "Event.Training"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Event.Group_Ingestion"
        toVertexLabel: "Event.Ingestion"

      - label: "Has_Ingestion_Event"
        toVertexLabel: "Event.Group_Ingestion"
        fromVertexLabel: "Object.Data_Source"

  sharepoint_mapeamentos:
    vertices:
      - label: Object.Data_Source
        name: sharepoint
        props:
          Name: SHAREPOINT/MAPEAMENTO-DE-PROCESSOS
#          Type: sharepoint/mapeamento-de-processos
#          Description: Mapeamento de Processo LGPD

      - label: Object.Data_Source
        name: attached_data_sources
        props:
          Form_Id:
            val: "${new groovy.json.JsonBuilder(Local_x0020_de_x0020_Armazenamen)}"
            type: "[Lcom.pontusvision.utils.SharepointRef;"
            postProcessor: "${com.pontusvision.utils.SharepointRef.fromString(it)?.getLookupId()}"
            processAll: true
#          Name:
#            val: "${new groovy.json.JsonBuilder(Local_x0020_de_x0020_Armazenamen)}"
#            type: "[Lcom.pontusvision.utils.SharepointRef;"
#            postProcessor: "${com.pontusvision.utils.SharepointRef.fromString(it)?.getLookupValue()?.toUpperCase()?.trim()}"
#            processAll: true

      - label: Object.Data_Policy
        props:
          Type: "${Title}"
          Retention_Period: "${Per_x00ed_odo_x0020_de_x0020_ret}"

      - label: Object.Data_Procedures
        props:
          Form_Id: "${id}"
          ID:
            val: "${Title}"
            excludeFromSearch: true
          Name:
            val: "${Processo}"
            excludeFromSearch: true
          Type:
            val: "${Acesso_x002c__x0020_Transfer_x00}"
            excludeFromSearch: true
          Type_Of_Natural_Person:
            val: "${Categoria_x0020_dos_x0020_titula}"
            excludeFromSearch: true
          BusinessAreaResponsible:
            val: "${_x00c1_rea} - ${Respons_x00e1_velLookupId}"
            excludeFromSearch: true
          Country_Where_Stored:
            val: "${Pa_x00ed_s_x0020_onde_x0020_as_x}"
            excludeFromSearch: true
          Why_Is_It_Collected:
            val: "${Finalidade_x0020_do_x0020_proces}"
            excludeFromSearch: true
          Info_Collected:
            val: "${Dados_x0020_pessoais_x0020_utili}"
            excludeFromSearch: true
          Description:
            val: "${Fluxo_x0020_interno_x0020_dos_x0}"
            excludeFromSearch: true
          Interested_Parties_Consulted:
            val: "${PartesInteressadasConsultadas}"
            excludeFromSearch: true

      - label: Object.Sensitive_Data
        props:
          Description:
            val: "${new groovy.json.JsonBuilder(Dados_x0020_pessoais_x0020_utili)}"
            type: "[Ljava.lang.String;"
            postProcessor: "${it?.toUpperCase()?.trim()}"
            processAll: true

      - label: Object.Lawful_Basis
        props:
          Description:
            val: "${new groovy.json.JsonBuilder(Base_x0020_legal)}"
            type: "[Ljava.lang.String;"
            postProcessor: "${it?.toUpperCase()?.trim()}"
            processAll: true

      - label: Object.Legitimate_Interests_Assessment
        condition: "${Essetratamentodedadospessoais_x0 && N_x00e3_oh_x00e1_outrabaselegalp && Esse_x0020_processamento_x0020_d}"
        props:
          Personal_Data_Treatment: "${Essetratamentodedadospessoais_x0}"
          Lawful_Basis_Justification: "${N_x00e3_oh_x00e1_outrabaselegalp}"
          Processing_Purpose: "${Esse_x0020_processamento_x0020_d}"

      - label: Event.Ingestion
        props:
          Type:
            val: sharepoint/mapeamento-de-processo
            excludeFromSearch: true
          Operation:
            val: Structured Data Insertion
            excludeFromSearch: true
          Domain_b64:
            val: "${original_request?.bytes?.encodeBase64()?.toString()}"
            excludeFromSearch: true
          Metadata_Create_Date:
            val: "${new Date()}" # Date COLUMN
            excludeFromSearch: true
            type: java.util.Date
          Metadata_Update_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: java.util.Date

      - label: Event.Group_Ingestion
        props:
#          Metadata_Start_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date
#          Metadata_End_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date
          Type: sharepoint/mapeamento-de-processo
          Operation: Structured Data Insertion
          Ingestion_Date: "${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}"
    edges:
      - label: "Has_Ingestion_Event"
        fromVertexName: "sharepoint"
        toVertexLabel: "Event.Group_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Event.Group_Ingestion"
        toVertexLabel: "Event.Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Event.Ingestion"
        toVertexLabel: "Object.Data_Procedures"

      - label: "Has_Sensitive_Data"
        fromVertexLabel: "Object.Data_Procedures"
        toVertexLabel: "Object.Sensitive_Data"

      - label: "Has_Lawful_Basis_On"
        fromVertexLabel: "Object.Data_Procedures"
        toVertexLabel: "Object.Lawful_Basis"

      - label: "Has_Policy"
        fromVertexLabel: "Object.Data_Procedures"
        toVertexLabel: "Object.Data_Policy"

      - label: "Has_Data_Source"
        fromVertexLabel: "Object.Data_Procedures"
        toVertexName: "attached_data_sources"

      - label: "Has_Legitimate_Interests_Assessment"
        fromVertexLabel: "Object.Data_Procedures"
        toVertexLabel: "Object.Legitimate_Interests_Assessment"

  sharepoint_ropa:
    vertices:
      - label: Object.Data_Source
        name: sharepoint
        props:
          Name: SHAREPOINT/ROPA
#          Type: sharepoint/ropa
#          Description: Reg of Procs and Activ

      - label: Object.Data_Source
        name: attached_data_sources
        props:
          Form_Id:
            val: "${new groovy.json.JsonBuilder(Data_x0020_Source)}"
            type: "[Lcom.pontusvision.utils.SharepointRef;"
            postProcessor: "${com.pontusvision.utils.SharepointRef.fromString(it)?.getLookupId()}"
            processAll: true
#          Name:
#            val: "${new groovy.json.JsonBuilder(Data_x0020_Source)}"
#            type: "[Lcom.pontusvision.utils.SharepointRef;"
#            postProcessor: "${com.pontusvision.utils.SharepointRef.fromString(it)?.getLookupValue()?.toUpperCase()?.trim()}"
#            processAll: true

      - label: Object.Data_Policy
        props:
          Type: "${Title}"
          Retention_Period: "${field_retention_x0020_period}"

      - label: Object.Data_Procedures
        props:
          Form_Id: "${id}"
          ID:
            val: "${Title}"
            excludeFromSearch: true
          Name:
            val: "${field_Process}"
            excludeFromSearch: true
          Description:
            val: "${field_Purpose_x0020_of_x0020_the_x0020_process}"
            excludeFromSearch: true
          Type:
            val: "${field_Access_x0020__x0020_Transfer_x0020_to_x0020_AND_x0020_OR_x0020_Receipt_x0020_of_x0020_third_x0020_parties}"
            excludeFromSearch: true
          Type_Of_Natural_Person:
            val: "${field_Data_x0020_subject_x0020_category}"
            excludeFromSearch: true
          BusinessAreaResponsible:
            val: "${field_Area} - ${field_Responsible}"
            excludeFromSearch: true
          Country_Where_Stored:
            val: "${field_Country_x0020_where_x0020_people_x0020_are_x0020_located}"
            excludeFromSearch: true
          Why_Is_It_Collected:
            val: "${field_Purpose_x0020_of_x0020_the_x0020_process}"
            excludeFromSearch: true
          Info_Collected:
            val: "${field_Personal_x0020_data_x0020_used}"
            excludeFromSearch: true

      - label: Object.Sensitive_Data
        props:
          Description:
            val: "${new groovy.json.JsonBuilder(field_Personal_x0020_data_x0020_used)}"
            type: "[Ljava.lang.String;"
            postProcessor: "${it?.toUpperCase()?.trim()}"
            processAll: true

      - label: Object.Lawful_Basis
        props:
          Description:
            val: "${new groovy.json.JsonBuilder(field_Lawful_x0020_basis)}"
            type: "[Ljava.lang.String;"
            postProcessor: "${it?.toUpperCase()?.trim()}"
            processAll: true

      - label: Event.Ingestion
        props:
          Type:
            val: sharepoint/ropa
            excludeFromSearch: true
          Operation:
            val: Structured Data Insertion
            excludeFromSearch: true
          Domain_b64:
            val: "${original_request?.bytes?.encodeBase64()?.toString()}"
            excludeFromSearch: true
          Metadata_Create_Date:
            val: "${new Date()}" # Date COLUMN
            excludeFromSearch: true
            type: java.util.Date
          Metadata_Update_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: java.util.Date

      - label: Event.Group_Ingestion
        props:
#          Metadata_Start_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date
#          Metadata_End_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date
          Type: sharepoint/ropa
          Operation: Structured Data Insertion
          Ingestion_Date: "${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}"
    edges:
      - label: "Has_Ingestion_Event"
        fromVertexName: "sharepoint"
        toVertexLabel: "Event.Group_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Event.Group_Ingestion"
        toVertexLabel: "Event.Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Event.Ingestion"
        toVertexLabel: "Object.Data_Procedures"

      - label: "Has_Sensitive_Data"
        fromVertexLabel: "Object.Data_Procedures"
        toVertexLabel: "Object.Sensitive_Data"

      - label: "Has_Lawful_Basis_On"
        fromVertexLabel: "Object.Data_Procedures"
        toVertexLabel: "Object.Lawful_Basis"

      - label: "Has_Policy"
        fromVertexLabel: "Object.Data_Procedures"
        toVertexLabel: "Object.Data_Policy"

      - label: "Has_Data_Source"
        fromVertexLabel: "Object.Data_Procedures"
        toVertexName: "attached_data_sources"

  sharepoint_risk:
    vertices:
      - label: Object.Data_Source
        name: sharepoint
        props:
          Name: SHAREPOINT/RISK
#          Type: sharepoint/risk
#          Description:  Data Source Risk

      - label: Object.Data_Source
        name: attached_data_sources
        props:
          Form_Id:
            val: "${new groovy.json.JsonBuilder(Data_x0020_Sources)}"
            type: "[Lcom.pontusvision.utils.SharepointRef;"
            postProcessor: "${com.pontusvision.utils.SharepointRef.fromString(it)?.getLookupId()}"
            processAll: true
#          Name:
#            val: "${new groovy.json.JsonBuilder(Data_x0020_Sources)}"
#            type: "[Lcom.pontusvision.utils.SharepointRef;"
#            postProcessor: "${com.pontusvision.utils.SharepointRef.fromString(it)?.getLookupValue()?.trim()?.toUpperCase()}"
#            processAll: true

      - label: Object.Risk_Data_Source
        props:
          Form_Id: "${id}"
          Risk_Id:
            val: "${Title?.trim()?.toUpperCase()}"
            excludeFromSearch: true
          Description:
            val: "${field_Description}"
            excludeFromSearch: true
          Probability:
            val: "${field_Probability}"
            excludeFromSearch: true
          Impact:
            val: "${field_Impact}"
            excludeFromSearch: true
          Residual_Probability:
            val: "${field_Residual_x0020_Probability}"
            excludeFromSearch: true
          Residual_Impact:
            val: "${field_Residual_x0020_Impact}"
            excludeFromSearch: true
          Approved_By_DPO:
            val: "${field_Approved_x0020_by_x0020_DPO}"
            excludeFromSearch: true
          Approved_By_Security:
            val: "${field_Approved_x0020_by_x0020_Security}"
            excludeFromSearch: true

#            TODO: testar os 2 campos novos


      - label: Object.Risk_Mitigation_Data_Source
        props:
          Form_Id:
            val: "${new groovy.json.JsonBuilder(Risk_x0020_Mitigations)}"
            type: "[Lcom.pontusvision.utils.SharepointRef;"
            postProcessor: "${com.pontusvision.utils.SharepointRef.fromString(it)?.getLookupId()}"
            processAll: true
#          Mitigation_Id:
#            val: "${new groovy.json.JsonBuilder(Risk_x0020_Mitigations)}"
#            type: "[Lcom.pontusvision.utils.SharepointRef;"
#            postProcessor: "${com.pontusvision.utils.SharepointRef.fromString(it)?.getLookupValue()?.trim()?.toUpperCase()}"
#            processAll: true



      - label: Event.Ingestion
        props:
          Type:
            val: sharepoint/risk
            excludeFromSearch: true
          Operation:
            val: Structured Data Insertion
            excludeFromSearch: true
          Domain_b64:
            val: "${original_request?.bytes?.encodeBase64()?.toString()}"
            excludeFromSearch: true
          Metadata_Create_Date:
            val: "${new Date()}" # Date COLUMN
            excludeFromSearch: true
            type: java.util.Date
          Metadata_Update_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: java.util.Date

      - label: Event.Group_Ingestion
        props:
#          Metadata_Start_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date
#          Metadata_End_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date
          Type: sharepoint/risk
          Operation: Structured Data Insertion
          Ingestion_Date: "${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}"
    edges:
      - label: "Has_Ingestion_Event"
        fromVertexName: "sharepoint"
        toVertexLabel: "Event.Group_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Event.Group_Ingestion"
        toVertexLabel: "Event.Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Event.Ingestion"
        toVertexLabel: "Object.Risk_Data_Source"

      - label: "Has_Risk"
        fromVertexName: "attached_data_sources"
        toVertexLabel: "Object.Risk_Data_Source"

      - label: "Mitigates_Risk"
        fromVertexLabel: "Object.Risk_Mitigation_Data_Source"
        toVertexLabel: "Object.Risk_Data_Source"

  sharepoint_risk_mitigation:
    vertices:
      - label: Object.Data_Source
        name: sharepoint
        props:
          Name: SHAREPOINT/RISK-MITIGATIONS
#          Type: sharepoint/risk-mitigations
#          Description:  Risk Mitigations


      - label: Object.Risk_Mitigation_Data_Source
        props:
          Form_Id: "${id}"
          Mitigation_Id:
            val: "${Title?.trim()?.toUpperCase()}"
            excludeFromSearch: true
          Description:
            val: "${field_Description}"
            excludeFromSearch: true

      - label: Event.Ingestion
        props:
          Type:
            val: risk-mitigations
            excludeFromSearch: true
          Operation:
            val: Structured Data Insertion
            excludeFromSearch: true
          Domain_b64:
            val: "${original_request?.bytes?.encodeBase64()?.toString()}"
            excludeFromSearch: true
          Metadata_Create_Date:
            val: "${new Date()}" # Date COLUMN
            excludeFromSearch: true
            type: java.util.Date
          Metadata_Update_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: java.util.Date

      - label: Event.Group_Ingestion
        props:
#          Metadata_Start_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date
#          Metadata_End_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date
          Type: sharepoint/risk-mitigations
          Operation: Structured Data Insertion
          Ingestion_Date: "${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}"
    edges:
      - label: "Has_Ingestion_Event"
        fromVertexName: "sharepoint"
        toVertexLabel: "Event.Group_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Event.Group_Ingestion"
        toVertexLabel: "Event.Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Event.Ingestion"
        toVertexLabel: "Object.Risk_Mitigation_Data_Source"

  sharepoint_dsar:
    vertices:

      - label: Person.Organisation
        condition: "${CustomerId?.replaceAll('[^0-9]', '')?.trim()?.length() == 14}"
        props:
          Name:
            val: "${Raz_x00e3_oSocial?.trim()?.toUpperCase()}"
            excludeFromUpdate: true
            mandatoryInSearch: true
          Registration_Number:
            val: "${CustomerId?.replaceAll('[^0-9]', '')?.trim()}"
            excludeFromUpdate: true
            mandatoryInSearch: true

      - label: Person.Natural
        condition: "${CustomerId?.replaceAll('[^0-9]', '')?.trim()?.length() == 11}"
        props:
          Full_Name:
            val: "${Raz_x00e3_oSocial?.trim()?.toUpperCase()}"
            excludeFromUpdate: true
            mandatoryInSearch: true
          Customer_ID:
            val: "${CustomerId?.replaceAll('[^0-9]', '')?.trim()}"
            excludeFromUpdate: true
            mandatoryInSearch: true

      - label: Object.Data_Procedures
        props:
          Form_Id:
            val: "${new groovy.json.JsonBuilder(RoPA)}"
            type: "[Lcom.pontusvision.utils.SharepointRef;"
            postProcessor: "${com.pontusvision.utils.SharepointRef.fromString(it)?.getLookupId()}"
            processAll: true

      - label: Object.Data_Source
        props:
          Name: "SHAREPOINT/DSAR"

      - label: Event.Subject_Access_Request
        props:
          Form_Id: "${id}"
          Id:
            val: "${Title}"
            excludeFromSearch: true
          Metadata.Update_Date:
            val: "${Resposta_x002d_DataeHor_x00e1_ri}"
            type: java.util.Date
            excludeFromSearch: true
          Metadata.Create_Date:
            val: "${Solicita_x00e7__x00e3_o_x002d_Da}"
            type: java.util.Date
            excludeFromSearch: true
          Request_Type:
            val: "${Solicita_x00e7__x00e3_o_x002d_De}"
            excludeFromSearch: true
          Request_Channel:
            val: "${Solicita_x00e7__x00e3_o_x002d_Ca}"
            excludeFromSearch: true
          Status:
            val: "${Status}"
            excludeFromSearch: true
          Natural_Person_Type:
            val: "${naturalPersonType?.trim()?.toUpperCase()}"
            excludeFromSearch: true

      - label: Event.Group_Subject_Access_Request
        props:
          Ingestion_Date: "${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}"

      - label: Event.Ingestion
        props:
          Type:
            val: "Controle de Solicitações"
            excludeFromSearch: true
          Operation:
            val: "Structured Data Insertion"
            excludeFromSearch: true
          Domain_b64:
            val: "${original_request?.bytes?.encodeBase64()?.toString()}"
            excludeFromSearch: true
          Metadata_Create_Date:
            val: "${new Date()}" # Date COLUMN
            excludeFromSearch: true
            type: java.util.Date
          Metadata_Update_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: java.util.Date

      - label: Event.Group_Ingestion
        props:
#          Metadata_Start_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date
#          Metadata_End_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date
          Type: "sharepoint/dsar"
          Operation: "Structured Data Insertion"
          Ingestion_Date: "${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}"

    edges:

      - label: Has_Ingestion_Event
        fromVertexLabel: "Object.Data_Source"
        toVertexLabel: "Event.Group_Ingestion"

      - label: Has_Ingestion_Event
        fromVertexLabel: "Event.Group_Ingestion"
        toVertexLabel: "Event.Ingestion"

      - label: Has_Ingestion_Event
        fromVertexLabel: "Event.Subject_Access_Request"
        toVertexLabel: "Event.Ingestion"

      - label: Has_DSAR
        fromVertexLabel: "Event.Subject_Access_Request"
        toVertexLabel: "Event.Group_Subject_Access_Request"

      - label: Made_SAR_Request
        fromVertexLabel: "Person.Natural"
        toVertexLabel: "Event.Subject_Access_Request"

      - label: Made_SAR_Request
        fromVertexLabel: "Person.Organisation"
        toVertexLabel: "Event.Subject_Access_Request"

      - label: Has_DSAR
        fromVertexLabel: "Event.Group_Subject_Access_Request"
        toVertexLabel: "Object.Data_Procedures"

  sharepoint_data_breaches:
    vertices:

# TODO: add Created_By (Author) and Modified_By (Editor) !!

      - label: Object.Data_Source
        name: data_sources
        props:
          Form_Id:
            val: "${new groovy.json.JsonBuilder(data_sources)}"
            type: "[Lcom.pontusvision.utils.SharepointRef;"
            postProcessor: "${com.pontusvision.utils.SharepointRef.fromString(it)?.getLookupId()}"
            processAll: true
#          Name:
#            val: "${new groovy.json.JsonBuilder(data_sources)}"
#            type: "[Lcom.pontusvision.utils.SharepointRef;"
#            postProcessor: "${com.pontusvision.utils.SharepointRef.fromString(it)?.getLookupValue()?.toUpperCase()?.trim()}"
#            processAll: true

      - label: Event.Data_Breach
        props:
          Form_Id: "${id}"
          Id:
            val: "${Title?.trim()?.toUpperCase()}"
            excludeFromSearch: true
          Authority_Notified:
            val: "${authority_notified?.trim()}"
            excludeFromSearch: true
          Description:
            val: "${description?.trim()?.toUpperCase()}"
            excludeFromSearch: true
          Impact:
            val: "${impact}"
            excludeFromSearch: true
          Metadata.Create_Date:
            val: "${Created}"
            type: java.util.Date
            excludeFromSearch: true
          Metadata.Update_Date:
            val: "${Modified}"
            type: java.util.Date
            excludeFromSearch: true
          Natural_Person_Notified:
            val: "${natural_person_notified?.trim()}"
            excludeFromSearch: true
          Source:
            val: "${source?.toUpperCase()}"
            excludeFromSearch: true
          Status:
            val: "${status}"
            excludeFromSearch: true

      - label: Object.Data_Source
        name: sharepoint
        props:
          Name: "SHAREPOINT/DATA-BREACHES"

      - label: Event.Ingestion
        props:
          Type:
            val: "Data Breaches"
            excludeFromSearch: true
          Operation:
            val: "Structured Data Insertion"
            excludeFromSearch: true
          Domain_b64:
            val: "${original_request?.bytes?.encodeBase64()?.toString()}"
            excludeFromSearch: true
          Metadata_Create_Date:
            val: "${new Date()}" # Date COLUMN
            excludeFromSearch: true
            type: java.util.Date
          Metadata_Update_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: java.util.Date

      - label: Event.Group_Ingestion
        props:
#          Metadata_Start_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date
#          Metadata_End_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date
          Type: "sharepoint/data-breaches"
          Operation: "Structured Data Insertion"
          Ingestion_Date: "${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}"

    edges:

      - label: Has_Ingestion_Event
        fromVertexName: "sharepoint"
        toVertexLabel: "Event.Group_Ingestion"

      - label: Has_Ingestion_Event
        fromVertexLabel: "Event.Group_Ingestion"
        toVertexLabel: "Event.Ingestion"

      - label: Has_Ingestion_Event
        fromVertexLabel: "Event.Data_Breach"
        toVertexLabel: "Event.Ingestion"

      - label: Impacted_By_Data_Breach
        fromVertexLabel: "Event.Data_Breach"
        toVertexName: "data_sources"

  sharepoint_policies:
    vertices:

      - label: Object.Policies
        props:
          Form_Id: "${id}"
          Text:
            val: "${text}"
            excludeFromUpdate: true
          Type:
            val: "${Title}"
            excludeFromUpdate: true

      - label: Object.Data_Source
        name: sharepoint
        props:
          Name: "SHAREPOINT/POLICIES"

      - label: Event.Ingestion
        props:
          Type:
            val: "Policies"
            excludeFromSearch: true
          Operation:
            val: "Structured Data Insertion"
            excludeFromSearch: true
          Domain_b64:
            val: "${original_request?.bytes?.encodeBase64()?.toString()}"
            excludeFromSearch: true
          Metadata_Create_Date:
            val: "${new Date()}" # Date COLUMN
            excludeFromSearch: true
            type: java.util.Date
          Metadata_Update_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: java.util.Date

      - label: Event.Group_Ingestion
        props:
#          Metadata_Start_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date
#          Metadata_End_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date
          Type: "sharepoint/policies"
          Operation: "Structured Data Insertion"
          Ingestion_Date: "${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}"

    edges:

      - label: Has_Ingestion_Event
        fromVertexName: "sharepoint"
        toVertexLabel: "Event.Group_Ingestion"

      - label: Has_Ingestion_Event
        fromVertexLabel: "Event.Group_Ingestion"
        toVertexLabel: "Event.Ingestion"

      - label: Has_Ingestion_Event
        fromVertexName: "Object.Policies"
        toVertexLabel: "Event.Ingestion"

  sharepoint_privacy_notice:

    vertices:
      - label: Object.Privacy_Notice
        props:
          Form_Id: "${id}"
#          Id: "${Title}"
          Description:
            val: "${privacy_notice}"
            excludeFromSearch: true
          Metadata.Create_Date:
            val: "${Created}"
            excludeFromSearch: true
            type: java.util.Date
          Metadata.Update_Date:
            val: "${Modified}"
            excludeFromSearch: true
            type: java.util.Date
          Delivery_Date:
            val: "${start_date}"
            excludeFromSearch: true
            type: java.util.Date
#          Who_Is_Collecting:
#            val: "Sxxxxxxxe"
#            excludeFromSearch: true
#          Country_Where_Stored:
#            val: "Brazil" # OR Brasil
#            excludeFromSearch: true
#          Text:
#          Id:
#          Info_Collected:
#          How_Is_It_Collected:
#          How_Will_It_Be_Used:
#          Why_Is_It_Collected:


      - label: Object.Data_Source
        props:
          Name: "SHAREPOINT/PRIVACY-NOTICE"

      - label: Event.Ingestion
        props:
          Type:
            val: "Privacy Notice"
            excludeFromSearch: true
          Operation:
            val: "Structured Data Insertion"
            excludeFromSearch: true
          Domain_b64:
            val: "${original_request?.bytes?.encodeBase64()?.toString()}"
            excludeFromSearch: true
          Metadata_Create_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: java.util.Date
          Metadata_Update_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: java.util.Date

      - label: Event.Group_Ingestion
        props:
#          Metadata_Start_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date
#          Metadata_End_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date
          Type: "sharepoint/privacy-notice"
          Operation: "Structured Data Insertion"
          Ingestion_Date: "${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}"

    edges:

      - label: Has_Ingestion_Event
        fromVertexLabel: "Object.Data_Source"
        toVertexLabel: "Event.Group_Ingestion"

      - label: Has_Ingestion_Event
        fromVertexLabel: "Event.Group_Ingestion"
        toVertexLabel: "Event.Ingestion"

      - label: Has_Ingestion_Event
        fromVertexLabel: "Object.Privacy_Notice"
        toVertexLabel: "Event.Ingestion"

  sharepoint_consents:

    vertices:
      - label: Event.Consent
        props:
          Form_Id: "${id}"
          Customer_ID:
            val: "${identity?.replaceAll('[^0-9]', '')?.trim()}"
            excludeFromSearch: true
          Metadata.Create_Date:
            val: "${date}"
            excludeFromSearch: true
            type: java.util.Date
          Metadata.Update_Date:
            val: "${Modified}"
            excludeFromSearch: true
            type: java.util.Date
#          Created_By: "${Author}"
#          Changed_By: "${Editor}"
#          Status:
#          Description:

      - label: Object.Privacy_Notice
        condition: "${privacy_notice.size() > 0}"
        props:
          Form_Id:
            val: "${new groovy.json.JsonBuilder(privacy_notice)}"
            type: "[Lcom.pontusvision.utils.SharepointRef;"
            postProcessor: "${com.pontusvision.utils.SharepointRef.fromString(it)?.getLookupId()}"
            processAll: true

      - label: Person.Natural
        props:
          Customer_ID: "${identity?.replaceAll('[^0-9]', '')?.trim()}"
          Full_Name:
            val: "${name?.trim()?.toUpperCase()}"
            excludeFromSearch: true

      - label: Object.Data_Source
        props:
          Name: "SHAREPOINT/CONSENT"

      - label: Event.Ingestion
        props:
          Type:
            val: "Consent"
            excludeFromSearch: true
          Operation:
            val: "Structured Data Insertion"
            excludeFromSearch: true
          Domain_b64:
            val: "${original_request?.bytes?.encodeBase64()?.toString()}"
            excludeFromSearch: true
          Metadata_Create_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: java.util.Date
          Metadata_Update_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: java.util.Date

      - label: Event.Group_Ingestion
        props:
#          Metadata_Start_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date
#          Metadata_End_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date
          Type: "sharepoint/consent"
          Operation: "Structured Data Insertion"
          Ingestion_Date: "${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}"

      - label: Object.Data_Procedures
        condition: "${data_procedures.size() > 0}"
        props:
          Form_Id:
            val: "${new groovy.json.JsonBuilder(data_procedures)}"
            type: "[Lcom.pontusvision.utils.SharepointRef;"
            postProcessor: "${com.pontusvision.utils.SharepointRef.fromString(it)?.getLookupId()}"
            processAll: true

    edges:

      - label: Has_Ingestion_Event
        fromVertexLabel: "Object.Data_Source"
        toVertexLabel: "Event.Group_Ingestion"

      - label: Has_Ingestion_Event
        fromVertexLabel: "Event.Group_Ingestion"
        toVertexLabel: "Event.Ingestion"

      - label: Has_Ingestion_Event
        fromVertexLabel: "Person.Natural"
        toVertexLabel: "Event.Ingestion"

      - label: Consent
        fromVertexLabel: "Person.Natural"
        toVertexLabel: "Event.Consent"

      - label: Has_Privacy_Notice
        fromVertexLabel: "Event.Consent"
        toVertexLabel: "Object.Privacy_Notice"

      - label: Consent #is it right? ... I am following instructions @ Trello SV card #262 ... or should it be Has_Data_Procedures
        fromVertexLabel: "Event.Consent"
        toVertexLabel: "Object.Data_Procedures"

  sharepoint_privacy_docs:

    vertices:
    - label: Object.Privacy_Docs
      props:
        Form_Id: "${id}"
        URL:
          val: "${share}"
          excludeFromSearch: true
        Description:
          val: "${description}"
          excludeFromSearch: true
        Date:
          val: "${date}"
          type: java.util.Date
          excludeFromSearch: true
        Title:
          val: "${title_x002d_communication}"
          excludeFromSearch: true

    - label: Object.Data_Source
      props:
        Name: "SHAREPOINT/PRIVACY-DOCS"

    - label: Event.Ingestion
      props:
        Type:
          val: "Privacy Docs"
          excludeFromSearch: true
        Operation:
          val: "Structured Data Insertion"
          excludeFromSearch: true
        Domain_b64:
          val: "${original_request?.bytes?.encodeBase64()?.toString()}"
          excludeFromSearch: true
        Metadata_Create_Date:
          val: "${new Date()}"
          excludeFromSearch: true
          type: java.util.Date
        Metadata_Update_Date:
          val: "${new Date()}"
          excludeFromSearch: true
          type: java.util.Date

    - label: Event.Group_Ingestion
      props:
#        Metadata_Start_Date:
#          val: "${new Date()}"
#          excludeFromSearch: true
#          type: java.util.Date
#        Metadata_End_Date:
#          val: "${new Date()}"
#          excludeFromSearch: true
#          type: java.util.Date
        Type: "sharepoint/privacy-docs"
        Operation: "Structured Data Insertion"
        Ingestion_Date: "${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}"

    edges:

    - label: Has_Ingestion_Event
      fromVertexLabel: "Object.Data_Source"
      toVertexLabel: "Event.Group_Ingestion"

    - label: Has_Ingestion_Event
      fromVertexLabel: "Event.Group_Ingestion"
      toVertexLabel: "Event.Ingestion"

    - label: Has_Ingestion_Event
      fromVertexLabel: "Event.Ingestion"
      toVertexLabel: "Object.Privacy_Docs"

  sharepoint_legal_actions:

    vertices:
      - label: Object.Legal_Actions
        props:
          Form_Id: "${id}"
          Description:
            val: "${description}"
            excludeFromSearch: true
          Date:
            val: "${date}"
            type: java.util.Date
            excludeFromSearch: true
          Details:
            val: "${details}"
            excludeFromSearch: true

      - label: Object.Data_Source
        props:
          Name: "SHAREPOINT/LEGAL-ACTIONS"

      - label: Event.Ingestion
        props:
          Type:
            val: "Legal Actions"
            excludeFromSearch: true
          Operation:
            val: "Structured Data Insertion"
            excludeFromSearch: true
          Domain_b64:
            val: "${original_request?.bytes?.encodeBase64()?.toString()}"
            excludeFromSearch: true
          Metadata_Create_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: java.util.Date
          Metadata_Update_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: java.util.Date

      - label: Event.Group_Ingestion
        props:
#          Metadata_Start_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date
#          Metadata_End_Date:
#            val: "${new Date()}"
#            excludeFromSearch: true
#            type: java.util.Date
          Type: "sharepoint/legal-actions"
          Operation: "Structured Data Insertion"
          Ingestion_Date: "${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}"

    edges:

      - label: Has_Ingestion_Event
        fromVertexLabel: "Object.Data_Source"
        toVertexLabel: "Event.Group_Ingestion"

      - label: Has_Ingestion_Event
        fromVertexLabel: "Event.Group_Ingestion"
        toVertexLabel: "Event.Ingestion"

      - label: Has_Ingestion_Event
        fromVertexLabel: "Event.Ingestion"
        toVertexLabel: "Object.Legal_Actions"

  sharepoint_meetings:

    vertices:
      - label: Event.Meeting
        props:
          Form_Id: "${id}"
          Title:
            val: "${subject?.trim()?.toUpperCase()}"  # Right ?!
            excludeFromSearch: true
          Date:
            val: "${date}"
            type: java.util.Date
            excludeFromSearch: true
          Discussed_Topics:
            val: "${topics?.trim()?.toUpperCase()}"  # Should it be upperCase or not ?!
            excludeFromSearch: true
          Participants:
            val: "${person?.trim()?.toUpperCase()}"  # Should it be upperCase or not ?!
            excludeFromSearch: true

      - label: Object.Data_Source
        props:
          Name: "SHAREPOINT/P-AND-PD-COMMITTEE-MEETINGS"

      - label: Event.Ingestion
        props:
          Type:
            val: "P & PD Committee Meetings"
            excludeFromSearch: true
          Operation:
            val: "Structured Data Insertion"
            excludeFromSearch: true
          Domain_b64:
            val: "${original_request?.bytes?.encodeBase64()?.toString()}"
            excludeFromSearch: true
          Metadata_Create_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: java.util.Date
          Metadata_Update_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: java.util.Date

      - label: Event.Group_Ingestion
        props:
          Type: "sharepoint/p-and-pd-committee-meetings"
          Operation: "Structured Data Insertion"
          Ingestion_Date: "${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}"

    edges:

      - label: Has_Ingestion_Event
        fromVertexLabel: "Object.Data_Source"
        toVertexLabel: "Event.Group_Ingestion"

      - label: Has_Ingestion_Event
        fromVertexLabel: "Event.Group_Ingestion"
        toVertexLabel: "Event.Ingestion"

      - label: Has_Ingestion_Event
        fromVertexLabel: "Event.Ingestion"
        toVertexLabel: "Event.Meeting"
